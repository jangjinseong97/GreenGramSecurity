[2024-12-13 11:11:27 INFO restartedMain] [com.green.greengram.GreenGramSecurity] Starting GreenGramVer3Application using Java 17.0.13 with PID 4960 (D:\Students\jang jin seong\GreenGramVer3\build\classes\java\main started by Administrator in D:\Students\jang jin seong\GreenGramVer3)
[2024-12-13 11:11:27 INFO restartedMain] [com.green.greengram.GreenGramSecurity] No active profile set, falling back to 1 default profile: "default"
[2024-12-13 11:11:27 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-13 11:11:27 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-13 11:11:28 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-13 11:11:28 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-13 11:11:28 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-13 11:11:28 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-13 11:11:28 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-13 11:11:28 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 910 ms
[2024-12-13 11:11:28 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MFU 생성자: D:\Students\jang jin seong\download\greengram_ver3
[2024-12-13 11:11:28 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-13 11:11:29 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-13 11:11:29 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-13 11:11:29 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-13 11:11:29 INFO restartedMain] [com.green.greengram.GreenGramSecurity] Started GreenGramVer3Application in 1.938 seconds (process running for 2.397)
[2024-12-13 11:11:32 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-13 11:11:32 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-13 11:11:32 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-13 11:11:33 INFO http-nio-8080-exec-5] [com.green.greengram.feed.model.FeedGetReq] FeedGetReq 1,null,4
[2024-12-13 11:11:33 INFO http-nio-8080-exec-5] [com.green.greengram.feed.FeedController] feedC getFeedList p: FeedGetReq(super=Paging(page=1, size=20, sIdx=0), signedUserId=4, profileUserId=null)
[2024-12-13 11:11:33 INFO http-nio-8080-exec-5] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-13 11:11:33 INFO http-nio-8080-exec-5] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@1316f03e
[2024-12-13 11:11:33 INFO http-nio-8080-exec-5] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-13 11:11:33 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, writer_user_id AS writerUserId,
        if(nick_name IS NULL , uid, nick_name) AS writerNm,
        pic AS writerPic, contents, location, a.created_at AS createdAt,
        if(c.feed_id IS NULL ,0 , 1) AS isLike
        FROM feed A
        JOIN user B
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c
        ON a.feed_id = c.feed_id
        AND c.user_id = 4

        ORDER BY a.feed_id DESC
        LIMIT 0,20
 {executed in 5 msec}
[2024-12-13 11:11:33 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|feed_id |writer_user_id |writernm |pic                                      |contents     |location |created_at          |islike |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|35      |1              |33       |efb8e328-12f0-486a-a8aa-01ca8c43c238.jpg |15131        |1532     |2024-12-10 09:50:44 |0      |
|34      |1              |33       |efb8e328-12f0-486a-a8aa-01ca8c43c238.jpg |??           |머말하는거냐   |2024-12-10 09:49:18 |0      |
|33      |9              |머        |null                                     |D            |D        |2024-12-06 13:04:38 |0      |
|31      |1              |33       |efb8e328-12f0-486a-a8aa-01ca8c43c238.jpg |???          |사진어디감    |2024-12-06 12:38:20 |0      |
|27      |1              |33       |efb8e328-12f0-486a-a8aa-01ca8c43c238.jpg |I am panguin |남극       |2024-11-29 17:07:59 |0      |
|26      |1              |33       |efb8e328-12f0-486a-a8aa-01ca8c43c238.jpg |I am panguin |남극       |2024-11-29 16:46:01 |0      |
|25      |5              |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |4123         |213      |2024-11-29 16:32:31 |0      |
|24      |1              |33       |efb8e328-12f0-486a-a8aa-01ca8c43c238.jpg |31231        |123      |2024-11-29 16:01:53 |0      |
|23      |1              |33       |efb8e328-12f0-486a-a8aa-01ca8c43c238.jpg |4754         |444      |2024-11-29 16:00:03 |0      |
|22      |1              |33       |efb8e328-12f0-486a-a8aa-01ca8c43c238.jpg |aaa          |aa       |2024-11-29 15:58:25 |0      |
|14      |1              |33       |efb8e328-12f0-486a-a8aa-01ca8c43c238.jpg |null         |null     |2024-11-29 10:51:21 |0      |
|13      |1              |33       |efb8e328-12f0-486a-a8aa-01ca8c43c238.jpg |null         |null     |2024-11-29 10:51:14 |0      |
|12      |1              |33       |efb8e328-12f0-486a-a8aa-01ca8c43c238.jpg |null         |null     |2024-11-29 10:42:17 |0      |
|11      |1              |33       |efb8e328-12f0-486a-a8aa-01ca8c43c238.jpg |123          |33123    |2024-11-29 10:42:01 |0      |
|9       |1              |33       |efb8e328-12f0-486a-a8aa-01ca8c43c238.jpg |21123        |3        |2024-11-29 10:37:22 |0      |
|7       |1              |33       |efb8e328-12f0-486a-a8aa-01ca8c43c238.jpg |null         |null     |2024-11-28 17:20:59 |1      |
|6       |1              |33       |efb8e328-12f0-486a-a8aa-01ca8c43c238.jpg |             |         |2024-11-28 17:15:01 |1      |
|5       |4              |33       |9a566777-52ff-49d4-8e16-3a4b7024c8bd.jpg |z            |;;       |2024-12-09 09:45:50 |0      |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|

[2024-12-13 11:11:33 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 35
 {executed in 0 msec}
[2024-12-13 11:11:33 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|38e0ee97-73ae-4b4a-8f82-23e79d91a3ae.jpg |
|-----------------------------------------|

[2024-12-13 11:11:33 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 35
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-13 11:11:33 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-13 11:11:33 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 34
 {executed in 0 msec}
[2024-12-13 11:11:33 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|da3fd470-513f-4cfe-9688-e50c0201cccf.jpg |
|-----------------------------------------|

[2024-12-13 11:11:33 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 34
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-13 11:11:33 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-13 11:11:33 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 33
 {executed in 0 msec}
[2024-12-13 11:11:33 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|690fa432-d879-4a2e-b395-60f2ca27eb1f.jpg |
|-----------------------------------------|

[2024-12-13 11:11:33 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 33
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-13 11:11:33 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-13 11:11:33 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 31
 {executed in 1 msec}
[2024-12-13 11:11:33 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ba4e898f-67e9-43fa-85dd-a576f142c147.jpg |
|-----------------------------------------|

[2024-12-13 11:11:33 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 31
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-13 11:11:33 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-13 11:11:33 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 27
 {executed in 0 msec}
[2024-12-13 11:11:33 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5a0d637a-00c7-441f-a9fa-c0dc68af2602.jpg |
|-----------------------------------------|

[2024-12-13 11:11:33 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 27
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-13 11:11:33 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|1       |41              |5       |33       |efb8e328-12f0-486a-a8aa-01ca8c43c238.jpg |
|1       |40              |4       |33       |efb8e328-12f0-486a-a8aa-01ca8c43c238.jpg |
|1       |37              |3       |33       |efb8e328-12f0-486a-a8aa-01ca8c43c238.jpg |
|1       |36              |2       |33       |efb8e328-12f0-486a-a8aa-01ca8c43c238.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-13 11:11:33 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 26
 {executed in 1 msec}
[2024-12-13 11:11:33 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3e5fe979-fe9c-4ed6-9ad7-c1dbf4f2538f.jpg |
|-----------------------------------------|

[2024-12-13 11:11:33 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 26
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-13 11:11:33 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|1       |9               |s       |33       |efb8e328-12f0-486a-a8aa-01ca8c43c238.jpg |
|5       |8               |123     |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-13 11:11:33 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 25
 {executed in 0 msec}
[2024-12-13 11:11:33 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|8213634a-99df-42d8-963e-87bc120cc8a7.jpg |
|-----------------------------------------|

[2024-12-13 11:11:33 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 25
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-13 11:11:33 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-13 11:11:33 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 24
 {executed in 0 msec}
[2024-12-13 11:11:33 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|dfe6f2c1-3753-4a6a-aff4-0de7fa2786b8.jpg |
|-----------------------------------------|

[2024-12-13 11:11:33 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 24
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-13 11:11:33 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-13 11:11:33 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 23
 {executed in 0 msec}
[2024-12-13 11:11:33 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f3e6375d-35d8-4a4a-a976-26ca5c6abaac.jpg |
|-----------------------------------------|

[2024-12-13 11:11:33 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 23
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-13 11:11:33 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-13 11:11:33 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 22
 {executed in 0 msec}
[2024-12-13 11:11:33 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e97360ca-fe79-48c3-acaa-cd71042a0a78.tif |
|-----------------------------------------|

[2024-12-13 11:11:33 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 22
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-13 11:11:33 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-13 11:11:33 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 14
 {executed in 1 msec}
[2024-12-13 11:11:33 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a3709fe6-3e0d-4f04-8cef-1cc328c4fc0c.jpg |
|ada457b9-68aa-4a78-b0c8-c5035af844e2.jpg |
|-----------------------------------------|

[2024-12-13 11:11:33 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 14
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-13 11:11:33 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-13 11:11:33 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 13
 {executed in 1 msec}
[2024-12-13 11:11:33 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6fe5de58-57ef-47e7-80c7-49c0506ca143.jpg |
|920ca8e8-5dc2-4844-aa7f-d7782e94d380.jpg |
|-----------------------------------------|

[2024-12-13 11:11:33 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 13
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-13 11:11:33 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-13 11:11:33 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 12
 {executed in 1 msec}
[2024-12-13 11:11:33 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|84e77be4-2b62-4f40-8f8b-0803e1080449.jpg |
|84f31709-40aa-40eb-a7e7-da0219067927.jpg |
|-----------------------------------------|

[2024-12-13 11:11:33 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 12
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-13 11:11:33 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-13 11:11:33 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 11
 {executed in 1 msec}
[2024-12-13 11:11:33 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3fc51a83-46ea-43ca-a85b-6fad4794a2bd.jpg |
|49906eb9-a412-4428-a629-baccbe152c75.jpg |
|-----------------------------------------|

[2024-12-13 11:11:33 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 11
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-13 11:11:33 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-13 11:11:33 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 9
 {executed in 1 msec}
[2024-12-13 11:11:33 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|34669219-c5d3-4d84-a277-fd8c2b8bca4f.jpg |
|f1ed44ba-1254-4232-9a0d-65037abe1e9c.jpg |
|-----------------------------------------|

[2024-12-13 11:11:33 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 9
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-13 11:11:33 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-13 11:11:33 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 7
 {executed in 1 msec}
[2024-12-13 11:11:33 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|14ecfa41-07fc-40d0-b50b-3fe95a840992.jpg |
|2694c9a6-a7b3-4800-ac73-0c853e16a152.jpg |
|-----------------------------------------|

[2024-12-13 11:11:33 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 7
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-13 11:11:33 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-13 11:11:33 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 6
 {executed in 0 msec}
[2024-12-13 11:11:33 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3c31d519-96b0-49bd-8657-d1eac4fb3fc1.jpg |
|-----------------------------------------|

[2024-12-13 11:11:33 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 6
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-13 11:11:33 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-13 11:11:33 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 5
 {executed in 0 msec}
[2024-12-13 11:11:33 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-13 11:11:33 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 5
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-13 11:11:33 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-13 11:11:36 INFO http-nio-8080-exec-5] [com.green.greengram.feed.like.FeedLikeController] FeedLC FeedLikeReq(feedId=35, userId=4)
[2024-12-13 11:11:36 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. delete
        from feed_like
        where feed_id = 35
        and user_id = 4
 {executed in 1 msec}
[2024-12-13 11:11:36 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. insert into feed_like
        set feed_id = 35,
            user_id = 4
 {executed in 3 msec}
[2024-12-13 11:11:37 INFO http-nio-8080-exec-9] [com.green.greengram.feed.like.FeedLikeController] FeedLC FeedLikeReq(feedId=35, userId=4)
[2024-12-13 11:11:37 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. delete
        from feed_like
        where feed_id = 35
        and user_id = 4
 {executed in 6 msec}
[2024-12-13 11:11:40 INFO http-nio-8080-exec-8] [com.green.greengram.feed.model.FeedGetReq] FeedGetReq 1,null,4
[2024-12-13 11:11:40 INFO http-nio-8080-exec-8] [com.green.greengram.feed.FeedController] feedC getFeedList p: FeedGetReq(super=Paging(page=1, size=20, sIdx=0), signedUserId=4, profileUserId=4)
[2024-12-13 11:11:40 INFO http-nio-8080-exec-3] [com.green.greengram.user.UserController] userController > getUserInfo > p :UserInfoGetReq(signedUserId=4, profileUserId=4)
[2024-12-13 11:11:40 ERRORhttp-nio-8080-exec-8] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.mybatis.spring.MyBatisSystemException] with root cause
org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'likeFeed' in 'class com.green.greengram.feed.model.FeedGetReq'
	at org.apache.ibatis.reflection.Reflector.getGetInvoker(Reflector.java:385)
	at org.apache.ibatis.reflection.MetaClass.getGetInvoker(MetaClass.java:160)
	at org.apache.ibatis.reflection.wrapper.BeanWrapper.getBeanProperty(BeanWrapper.java:153)
	at org.apache.ibatis.reflection.wrapper.BeanWrapper.get(BeanWrapper.java:49)
	at org.apache.ibatis.reflection.MetaObject.getValue(MetaObject.java:116)
	at org.apache.ibatis.scripting.xmltags.DynamicContext$ContextMap.get(DynamicContext.java:102)
	at org.apache.ibatis.scripting.xmltags.DynamicContext$ContextAccessor.getProperty(DynamicContext.java:112)
	at org.apache.ibatis.ognl.OgnlRuntime.getProperty(OgnlRuntime.java:3344)
	at org.apache.ibatis.ognl.ASTProperty.getValueBody(ASTProperty.java:121)
	at org.apache.ibatis.ognl.SimpleNode.evaluateGetValueBody(SimpleNode.java:212)
	at org.apache.ibatis.ognl.SimpleNode.getValue(SimpleNode.java:258)
	at org.apache.ibatis.ognl.Ognl.getValue(Ognl.java:586)
	at org.apache.ibatis.ognl.Ognl.getValue(Ognl.java:550)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.getValue(OgnlCache.java:46)
	at org.apache.ibatis.scripting.xmltags.ExpressionEvaluator.evaluateBoolean(ExpressionEvaluator.java:32)
	at org.apache.ibatis.scripting.xmltags.IfSqlNode.apply(IfSqlNode.java:34)
	at org.apache.ibatis.scripting.xmltags.ChooseSqlNode.apply(ChooseSqlNode.java:35)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.lambda$apply$0(MixedSqlNode.java:32)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:32)
	at org.apache.ibatis.scripting.xmltags.IfSqlNode.apply(IfSqlNode.java:35)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.lambda$apply$0(MixedSqlNode.java:32)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:32)
	at org.apache.ibatis.scripting.xmltags.DynamicSqlSource.getBoundSql(DynamicSqlSource.java:39)
	at org.apache.ibatis.mapping.MappedStatement.getBoundSql(MappedStatement.java:320)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:88)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at jdk.internal.reflect.GeneratedMethodAccessor14.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy85.selFeedList(Unknown Source)
	at com.green.greengram.feed.FeedService.getFeedList(FeedService.java:97)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengram.feed.FeedService$$SpringCGLIB$$0.getFeedList(<generated>)
	at com.green.greengram.feed.FeedController.getFeedList(FeedController.java:38)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-13 11:11:40 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.user_id as userId, A.pic, A.created_at AS createdAt
        , IF(nick_name IS NULL, uid, nick_name) AS nickName
        , COUNT(DISTINCT B.from_user_id, B.to_user_id) AS `follower`
        , COUNT(DISTINCT C.from_user_id, C.to_user_id) AS `following`
        , IFNULL(D.feedCnt, 0) AS feedCount
        , IFNULL(D.likeCnt, 0) AS myFeedLikeCount
        , SUM(DISTINCT if(B.from_user_id = 4, 1, 0))
        + SUM(DISTINCT if(C.to_user_id = 4, 2, 0)) AS followState
        FROM user A
        LEFT JOIN (
        SELECT H.writer_user_id
        , COUNT(DISTINCT H.feed_id) AS feedCnt
        , COUNT(I.user_id) AS likeCnt
        FROM feed H
        LEFT JOIN feed_like I
        ON H.feed_id = I.feed_id
        WHERE H.writer_user_id = 4
        ) D
        ON A.user_id = D.writer_user_id
        LEFT JOIN user_follow B
        ON A.user_id = B.to_user_id
        LEFT JOIN user_follow C
        ON A.user_id = C.from_user_id
        WHERE A.user_id = 4
 {executed in 7 msec}
[2024-12-13 11:11:40 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|user_id |pic                                      |created_at          |nickname |follower |following |feedcount |myfeedlikecount |followstate |
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|4       |9a566777-52ff-49d4-8e16-3a4b7024c8bd.jpg |2024-11-28 14:40:09 |33       |2        |2         |1         |3               |0           |
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|

[2024-12-13 11:11:45 INFO http-nio-8080-exec-7] [com.green.greengram.feed.model.FeedGetReq] FeedGetReq 1,null,4
[2024-12-13 11:11:45 INFO http-nio-8080-exec-7] [com.green.greengram.feed.FeedController] feedC getFeedList p: FeedGetReq(super=Paging(page=1, size=20, sIdx=0), signedUserId=4, profileUserId=null)
[2024-12-13 11:11:45 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, writer_user_id AS writerUserId,
        if(nick_name IS NULL , uid, nick_name) AS writerNm,
        pic AS writerPic, contents, location, a.created_at AS createdAt,
        if(c.feed_id IS NULL ,0 , 1) AS isLike
        FROM feed A
        JOIN user B
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c
        ON a.feed_id = c.feed_id
        AND c.user_id = 4

        ORDER BY a.feed_id DESC
        LIMIT 0,20
 {executed in 0 msec}
[2024-12-13 11:11:45 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|feed_id |writer_user_id |writernm |pic                                      |contents     |location |created_at          |islike |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|35      |1              |33       |efb8e328-12f0-486a-a8aa-01ca8c43c238.jpg |15131        |1532     |2024-12-10 09:50:44 |0      |
|34      |1              |33       |efb8e328-12f0-486a-a8aa-01ca8c43c238.jpg |??           |머말하는거냐   |2024-12-10 09:49:18 |0      |
|33      |9              |머        |null                                     |D            |D        |2024-12-06 13:04:38 |0      |
|31      |1              |33       |efb8e328-12f0-486a-a8aa-01ca8c43c238.jpg |???          |사진어디감    |2024-12-06 12:38:20 |0      |
|27      |1              |33       |efb8e328-12f0-486a-a8aa-01ca8c43c238.jpg |I am panguin |남극       |2024-11-29 17:07:59 |0      |
|26      |1              |33       |efb8e328-12f0-486a-a8aa-01ca8c43c238.jpg |I am panguin |남극       |2024-11-29 16:46:01 |0      |
|25      |5              |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |4123         |213      |2024-11-29 16:32:31 |0      |
|24      |1              |33       |efb8e328-12f0-486a-a8aa-01ca8c43c238.jpg |31231        |123      |2024-11-29 16:01:53 |0      |
|23      |1              |33       |efb8e328-12f0-486a-a8aa-01ca8c43c238.jpg |4754         |444      |2024-11-29 16:00:03 |0      |
|22      |1              |33       |efb8e328-12f0-486a-a8aa-01ca8c43c238.jpg |aaa          |aa       |2024-11-29 15:58:25 |0      |
|14      |1              |33       |efb8e328-12f0-486a-a8aa-01ca8c43c238.jpg |null         |null     |2024-11-29 10:51:21 |0      |
|13      |1              |33       |efb8e328-12f0-486a-a8aa-01ca8c43c238.jpg |null         |null     |2024-11-29 10:51:14 |0      |
|12      |1              |33       |efb8e328-12f0-486a-a8aa-01ca8c43c238.jpg |null         |null     |2024-11-29 10:42:17 |0      |
|11      |1              |33       |efb8e328-12f0-486a-a8aa-01ca8c43c238.jpg |123          |33123    |2024-11-29 10:42:01 |0      |
|9       |1              |33       |efb8e328-12f0-486a-a8aa-01ca8c43c238.jpg |21123        |3        |2024-11-29 10:37:22 |0      |
|7       |1              |33       |efb8e328-12f0-486a-a8aa-01ca8c43c238.jpg |null         |null     |2024-11-28 17:20:59 |1      |
|6       |1              |33       |efb8e328-12f0-486a-a8aa-01ca8c43c238.jpg |             |         |2024-11-28 17:15:01 |1      |
|5       |4              |33       |9a566777-52ff-49d4-8e16-3a4b7024c8bd.jpg |z            |;;       |2024-12-09 09:45:50 |0      |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|

[2024-12-13 11:11:45 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 35
 {executed in 1 msec}
[2024-12-13 11:11:45 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|38e0ee97-73ae-4b4a-8f82-23e79d91a3ae.jpg |
|-----------------------------------------|

[2024-12-13 11:11:45 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 35
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-13 11:11:45 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-13 11:11:45 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 34
 {executed in 0 msec}
[2024-12-13 11:11:45 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|da3fd470-513f-4cfe-9688-e50c0201cccf.jpg |
|-----------------------------------------|

[2024-12-13 11:11:45 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 34
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-13 11:11:45 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-13 11:11:45 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 33
 {executed in 0 msec}
[2024-12-13 11:11:45 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|690fa432-d879-4a2e-b395-60f2ca27eb1f.jpg |
|-----------------------------------------|

[2024-12-13 11:11:45 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 33
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-13 11:11:45 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-13 11:11:45 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 31
 {executed in 0 msec}
[2024-12-13 11:11:45 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ba4e898f-67e9-43fa-85dd-a576f142c147.jpg |
|-----------------------------------------|

[2024-12-13 11:11:45 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 31
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-13 11:11:45 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-13 11:11:45 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 27
 {executed in 1 msec}
[2024-12-13 11:11:45 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5a0d637a-00c7-441f-a9fa-c0dc68af2602.jpg |
|-----------------------------------------|

[2024-12-13 11:11:45 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 27
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-13 11:11:45 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|1       |41              |5       |33       |efb8e328-12f0-486a-a8aa-01ca8c43c238.jpg |
|1       |40              |4       |33       |efb8e328-12f0-486a-a8aa-01ca8c43c238.jpg |
|1       |37              |3       |33       |efb8e328-12f0-486a-a8aa-01ca8c43c238.jpg |
|1       |36              |2       |33       |efb8e328-12f0-486a-a8aa-01ca8c43c238.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-13 11:11:45 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 26
 {executed in 0 msec}
[2024-12-13 11:11:45 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3e5fe979-fe9c-4ed6-9ad7-c1dbf4f2538f.jpg |
|-----------------------------------------|

[2024-12-13 11:11:45 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 26
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-13 11:11:45 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|1       |9               |s       |33       |efb8e328-12f0-486a-a8aa-01ca8c43c238.jpg |
|5       |8               |123     |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-13 11:11:45 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 25
 {executed in 0 msec}
[2024-12-13 11:11:45 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|8213634a-99df-42d8-963e-87bc120cc8a7.jpg |
|-----------------------------------------|

[2024-12-13 11:11:45 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 25
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-13 11:11:45 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-13 11:11:45 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 24
 {executed in 1 msec}
[2024-12-13 11:11:45 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|dfe6f2c1-3753-4a6a-aff4-0de7fa2786b8.jpg |
|-----------------------------------------|

[2024-12-13 11:11:45 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 24
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-13 11:11:45 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-13 11:11:45 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 23
 {executed in 1 msec}
[2024-12-13 11:11:45 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f3e6375d-35d8-4a4a-a976-26ca5c6abaac.jpg |
|-----------------------------------------|

[2024-12-13 11:11:45 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 23
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-13 11:11:45 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-13 11:11:45 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 22
 {executed in 0 msec}
[2024-12-13 11:11:45 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e97360ca-fe79-48c3-acaa-cd71042a0a78.tif |
|-----------------------------------------|

[2024-12-13 11:11:45 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 22
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-13 11:11:45 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-13 11:11:45 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 14
 {executed in 0 msec}
[2024-12-13 11:11:45 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a3709fe6-3e0d-4f04-8cef-1cc328c4fc0c.jpg |
|ada457b9-68aa-4a78-b0c8-c5035af844e2.jpg |
|-----------------------------------------|

[2024-12-13 11:11:45 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 14
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-13 11:11:45 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-13 11:11:45 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 13
 {executed in 0 msec}
[2024-12-13 11:11:45 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6fe5de58-57ef-47e7-80c7-49c0506ca143.jpg |
|920ca8e8-5dc2-4844-aa7f-d7782e94d380.jpg |
|-----------------------------------------|

[2024-12-13 11:11:45 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 13
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-13 11:11:45 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-13 11:11:45 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 12
 {executed in 0 msec}
[2024-12-13 11:11:45 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|84e77be4-2b62-4f40-8f8b-0803e1080449.jpg |
|84f31709-40aa-40eb-a7e7-da0219067927.jpg |
|-----------------------------------------|

[2024-12-13 11:11:45 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 12
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-13 11:11:45 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-13 11:11:45 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 11
 {executed in 1 msec}
[2024-12-13 11:11:45 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3fc51a83-46ea-43ca-a85b-6fad4794a2bd.jpg |
|49906eb9-a412-4428-a629-baccbe152c75.jpg |
|-----------------------------------------|

[2024-12-13 11:11:45 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 11
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-13 11:11:45 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-13 11:11:45 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 9
 {executed in 0 msec}
[2024-12-13 11:11:45 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|34669219-c5d3-4d84-a277-fd8c2b8bca4f.jpg |
|f1ed44ba-1254-4232-9a0d-65037abe1e9c.jpg |
|-----------------------------------------|

[2024-12-13 11:11:45 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 9
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-13 11:11:45 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-13 11:11:45 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 7
 {executed in 0 msec}
[2024-12-13 11:11:45 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|14ecfa41-07fc-40d0-b50b-3fe95a840992.jpg |
|2694c9a6-a7b3-4800-ac73-0c853e16a152.jpg |
|-----------------------------------------|

[2024-12-13 11:11:45 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 7
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-13 11:11:45 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-13 11:11:45 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 6
 {executed in 1 msec}
[2024-12-13 11:11:45 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3c31d519-96b0-49bd-8657-d1eac4fb3fc1.jpg |
|-----------------------------------------|

[2024-12-13 11:11:45 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 6
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-13 11:11:45 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-13 11:11:45 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 5
 {executed in 0 msec}
[2024-12-13 11:11:45 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-13 11:11:45 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 5
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-13 11:11:45 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-13 11:11:48 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-13 11:11:48 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-13 11:11:55 INFO restartedMain] [com.green.greengram.GreenGramSecurity] Starting GreenGramVer3Application using Java 17.0.13 with PID 4436 (D:\Students\jang jin seong\GreenGramVer3\build\classes\java\main started by Administrator in D:\Students\jang jin seong\GreenGramVer3)
[2024-12-13 11:11:55 INFO restartedMain] [com.green.greengram.GreenGramSecurity] No active profile set, falling back to 1 default profile: "default"
[2024-12-13 11:11:55 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-13 11:11:55 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-13 11:11:56 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-13 11:11:56 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-13 11:11:56 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-13 11:11:56 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-13 11:11:56 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-13 11:11:56 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 772 ms
[2024-12-13 11:11:56 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MFU 생성자: D:\Students\jang jin seong\download\greengram_ver3
[2024-12-13 11:11:56 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-13 11:11:56 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-13 11:11:56 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-13 11:11:56 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-13 11:11:56 INFO restartedMain] [com.green.greengram.GreenGramSecurity] Started GreenGramVer3Application in 1.638 seconds (process running for 2.005)
[2024-12-13 11:12:02 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-13 11:12:02 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-13 11:12:02 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 0 ms
[2024-12-13 11:12:02 INFO http-nio-8080-exec-1] [com.green.greengram.feed.like.FeedLikeController] FeedLC FeedLikeReq(feedId=35, userId=4)
[2024-12-13 11:12:02 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-13 11:12:02 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@7df1e155
[2024-12-13 11:12:02 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-13 11:12:02 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. delete
        from feed_like
        where feed_id = 35
        and user_id = 4
 {executed in 1 msec}
[2024-12-13 11:12:02 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. insert into feed_like
        set feed_id = 35,
            user_id = 4
 {executed in 6 msec}
[2024-12-13 11:12:11 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-13 11:12:11 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-13 11:12:14 INFO restartedMain] [com.green.greengram.GreenGramSecurity] Starting GreenGramVer3Application using Java 17.0.13 with PID 1204 (D:\Students\jang jin seong\GreenGramVer3\build\classes\java\main started by Administrator in D:\Students\jang jin seong\GreenGramVer3)
[2024-12-13 11:12:14 INFO restartedMain] [com.green.greengram.GreenGramSecurity] No active profile set, falling back to 1 default profile: "default"
[2024-12-13 11:12:14 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-13 11:12:14 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-13 11:12:15 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-13 11:12:15 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-13 11:12:15 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-13 11:12:15 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-13 11:12:15 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-13 11:12:15 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 771 ms
[2024-12-13 11:12:15 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MFU 생성자: D:\Students\jang jin seong\download\greengram_ver3
[2024-12-13 11:12:15 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-13 11:12:15 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-13 11:12:15 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-13 11:12:15 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-13 11:12:15 INFO restartedMain] [com.green.greengram.GreenGramSecurity] Started GreenGramVer3Application in 1.647 seconds (process running for 1.993)
[2024-12-13 11:12:18 INFO http-nio-8080-exec-6] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-13 11:12:18 INFO http-nio-8080-exec-6] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-13 11:12:18 INFO http-nio-8080-exec-6] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-13 11:12:18 INFO http-nio-8080-exec-6] [com.green.greengram.feed.model.FeedGetReq] FeedGetReq 1,null,4
[2024-12-13 11:12:18 INFO http-nio-8080-exec-4] [com.green.greengram.user.UserController] userController > getUserInfo > p :UserInfoGetReq(signedUserId=4, profileUserId=4)
[2024-12-13 11:12:18 INFO http-nio-8080-exec-6] [com.green.greengram.feed.FeedController] feedC getFeedList p: FeedGetReq(super=Paging(page=1, size=20, sIdx=0), signedUserId=4, profileUserId=4)
[2024-12-13 11:12:18 INFO http-nio-8080-exec-4] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-13 11:12:18 ERRORhttp-nio-8080-exec-6] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.mybatis.spring.MyBatisSystemException] with root cause
org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'likeFeed' in 'class com.green.greengram.feed.model.FeedGetReq'
	at org.apache.ibatis.reflection.Reflector.getGetInvoker(Reflector.java:385)
	at org.apache.ibatis.reflection.MetaClass.getGetInvoker(MetaClass.java:160)
	at org.apache.ibatis.reflection.wrapper.BeanWrapper.getBeanProperty(BeanWrapper.java:153)
	at org.apache.ibatis.reflection.wrapper.BeanWrapper.get(BeanWrapper.java:49)
	at org.apache.ibatis.reflection.MetaObject.getValue(MetaObject.java:116)
	at org.apache.ibatis.scripting.xmltags.DynamicContext$ContextMap.get(DynamicContext.java:102)
	at org.apache.ibatis.scripting.xmltags.DynamicContext$ContextAccessor.getProperty(DynamicContext.java:112)
	at org.apache.ibatis.ognl.OgnlRuntime.getProperty(OgnlRuntime.java:3344)
	at org.apache.ibatis.ognl.ASTProperty.getValueBody(ASTProperty.java:121)
	at org.apache.ibatis.ognl.SimpleNode.evaluateGetValueBody(SimpleNode.java:212)
	at org.apache.ibatis.ognl.SimpleNode.getValue(SimpleNode.java:258)
	at org.apache.ibatis.ognl.Ognl.getValue(Ognl.java:586)
	at org.apache.ibatis.ognl.Ognl.getValue(Ognl.java:550)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.getValue(OgnlCache.java:46)
	at org.apache.ibatis.scripting.xmltags.ExpressionEvaluator.evaluateBoolean(ExpressionEvaluator.java:32)
	at org.apache.ibatis.scripting.xmltags.IfSqlNode.apply(IfSqlNode.java:34)
	at org.apache.ibatis.scripting.xmltags.ChooseSqlNode.apply(ChooseSqlNode.java:35)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.lambda$apply$0(MixedSqlNode.java:32)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:32)
	at org.apache.ibatis.scripting.xmltags.IfSqlNode.apply(IfSqlNode.java:35)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.lambda$apply$0(MixedSqlNode.java:32)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:32)
	at org.apache.ibatis.scripting.xmltags.DynamicSqlSource.getBoundSql(DynamicSqlSource.java:39)
	at org.apache.ibatis.mapping.MappedStatement.getBoundSql(MappedStatement.java:320)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:88)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy85.selFeedList(Unknown Source)
	at com.green.greengram.feed.FeedService.getFeedList(FeedService.java:97)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengram.feed.FeedService$$SpringCGLIB$$0.getFeedList(<generated>)
	at com.green.greengram.feed.FeedController.getFeedList(FeedController.java:38)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-13 11:12:18 INFO http-nio-8080-exec-4] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@7991f073
[2024-12-13 11:12:18 INFO http-nio-8080-exec-4] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-13 11:12:18 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.user_id as userId, A.pic, A.created_at AS createdAt
        , IF(nick_name IS NULL, uid, nick_name) AS nickName
        , COUNT(DISTINCT B.from_user_id, B.to_user_id) AS `follower`
        , COUNT(DISTINCT C.from_user_id, C.to_user_id) AS `following`
        , IFNULL(D.feedCnt, 0) AS feedCount
        , IFNULL(D.likeCnt, 0) AS myFeedLikeCount
        , SUM(DISTINCT if(B.from_user_id = 4, 1, 0))
        + SUM(DISTINCT if(C.to_user_id = 4, 2, 0)) AS followState
        FROM user A
        LEFT JOIN (
        SELECT H.writer_user_id
        , COUNT(DISTINCT H.feed_id) AS feedCnt
        , COUNT(I.user_id) AS likeCnt
        FROM feed H
        LEFT JOIN feed_like I
        ON H.feed_id = I.feed_id
        WHERE H.writer_user_id = 4
        ) D
        ON A.user_id = D.writer_user_id
        LEFT JOIN user_follow B
        ON A.user_id = B.to_user_id
        LEFT JOIN user_follow C
        ON A.user_id = C.from_user_id
        WHERE A.user_id = 4
 {executed in 1 msec}
[2024-12-13 11:12:18 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|user_id |pic                                      |created_at          |nickname |follower |following |feedcount |myfeedlikecount |followstate |
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|4       |9a566777-52ff-49d4-8e16-3a4b7024c8bd.jpg |2024-11-28 14:40:09 |33       |2        |2         |1         |3               |0           |
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|

[2024-12-13 11:12:19 INFO http-nio-8080-exec-3] [com.green.greengram.feed.model.FeedGetReq] FeedGetReq 1,null,4
[2024-12-13 11:12:19 INFO http-nio-8080-exec-3] [com.green.greengram.feed.FeedController] feedC getFeedList p: FeedGetReq(super=Paging(page=1, size=20, sIdx=0), signedUserId=4, profileUserId=null)
[2024-12-13 11:12:19 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, writer_user_id AS writerUserId,
        if(nick_name IS NULL , uid, nick_name) AS writerNm,
        pic AS writerPic, contents, location, a.created_at AS createdAt,
        if(c.feed_id IS NULL ,0 , 1) AS isLike
        FROM feed A
        JOIN user B
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c
        ON a.feed_id = c.feed_id
        AND c.user_id = 4

        ORDER BY a.feed_id DESC
        LIMIT 0,20
 {executed in 0 msec}
[2024-12-13 11:12:19 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|feed_id |writer_user_id |writernm |pic                                      |contents     |location |created_at          |islike |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|35      |1              |33       |efb8e328-12f0-486a-a8aa-01ca8c43c238.jpg |15131        |1532     |2024-12-10 09:50:44 |1      |
|34      |1              |33       |efb8e328-12f0-486a-a8aa-01ca8c43c238.jpg |??           |머말하는거냐   |2024-12-10 09:49:18 |0      |
|33      |9              |머        |null                                     |D            |D        |2024-12-06 13:04:38 |0      |
|31      |1              |33       |efb8e328-12f0-486a-a8aa-01ca8c43c238.jpg |???          |사진어디감    |2024-12-06 12:38:20 |0      |
|27      |1              |33       |efb8e328-12f0-486a-a8aa-01ca8c43c238.jpg |I am panguin |남극       |2024-11-29 17:07:59 |0      |
|26      |1              |33       |efb8e328-12f0-486a-a8aa-01ca8c43c238.jpg |I am panguin |남극       |2024-11-29 16:46:01 |0      |
|25      |5              |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |4123         |213      |2024-11-29 16:32:31 |0      |
|24      |1              |33       |efb8e328-12f0-486a-a8aa-01ca8c43c238.jpg |31231        |123      |2024-11-29 16:01:53 |0      |
|23      |1              |33       |efb8e328-12f0-486a-a8aa-01ca8c43c238.jpg |4754         |444      |2024-11-29 16:00:03 |0      |
|22      |1              |33       |efb8e328-12f0-486a-a8aa-01ca8c43c238.jpg |aaa          |aa       |2024-11-29 15:58:25 |0      |
|14      |1              |33       |efb8e328-12f0-486a-a8aa-01ca8c43c238.jpg |null         |null     |2024-11-29 10:51:21 |0      |
|13      |1              |33       |efb8e328-12f0-486a-a8aa-01ca8c43c238.jpg |null         |null     |2024-11-29 10:51:14 |0      |
|12      |1              |33       |efb8e328-12f0-486a-a8aa-01ca8c43c238.jpg |null         |null     |2024-11-29 10:42:17 |0      |
|11      |1              |33       |efb8e328-12f0-486a-a8aa-01ca8c43c238.jpg |123          |33123    |2024-11-29 10:42:01 |0      |
|9       |1              |33       |efb8e328-12f0-486a-a8aa-01ca8c43c238.jpg |21123        |3        |2024-11-29 10:37:22 |0      |
|7       |1              |33       |efb8e328-12f0-486a-a8aa-01ca8c43c238.jpg |null         |null     |2024-11-28 17:20:59 |1      |
|6       |1              |33       |efb8e328-12f0-486a-a8aa-01ca8c43c238.jpg |             |         |2024-11-28 17:15:01 |1      |
|5       |4              |33       |9a566777-52ff-49d4-8e16-3a4b7024c8bd.jpg |z            |;;       |2024-12-09 09:45:50 |0      |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|

[2024-12-13 11:12:19 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 35
 {executed in 0 msec}
[2024-12-13 11:12:19 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|38e0ee97-73ae-4b4a-8f82-23e79d91a3ae.jpg |
|-----------------------------------------|

[2024-12-13 11:12:19 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 35
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-13 11:12:19 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-13 11:12:19 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 34
 {executed in 0 msec}
[2024-12-13 11:12:19 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|da3fd470-513f-4cfe-9688-e50c0201cccf.jpg |
|-----------------------------------------|

[2024-12-13 11:12:19 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 34
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-13 11:12:19 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-13 11:12:19 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 33
 {executed in 0 msec}
[2024-12-13 11:12:19 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|690fa432-d879-4a2e-b395-60f2ca27eb1f.jpg |
|-----------------------------------------|

[2024-12-13 11:12:19 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 33
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-13 11:12:19 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-13 11:12:19 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 31
 {executed in 0 msec}
[2024-12-13 11:12:19 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ba4e898f-67e9-43fa-85dd-a576f142c147.jpg |
|-----------------------------------------|

[2024-12-13 11:12:19 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 31
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-13 11:12:19 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-13 11:12:19 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 27
 {executed in 0 msec}
[2024-12-13 11:12:19 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5a0d637a-00c7-441f-a9fa-c0dc68af2602.jpg |
|-----------------------------------------|

[2024-12-13 11:12:19 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 27
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-13 11:12:19 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|1       |41              |5       |33       |efb8e328-12f0-486a-a8aa-01ca8c43c238.jpg |
|1       |40              |4       |33       |efb8e328-12f0-486a-a8aa-01ca8c43c238.jpg |
|1       |37              |3       |33       |efb8e328-12f0-486a-a8aa-01ca8c43c238.jpg |
|1       |36              |2       |33       |efb8e328-12f0-486a-a8aa-01ca8c43c238.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-13 11:12:19 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 26
 {executed in 0 msec}
[2024-12-13 11:12:19 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3e5fe979-fe9c-4ed6-9ad7-c1dbf4f2538f.jpg |
|-----------------------------------------|

[2024-12-13 11:12:19 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 26
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-13 11:12:19 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|1       |9               |s       |33       |efb8e328-12f0-486a-a8aa-01ca8c43c238.jpg |
|5       |8               |123     |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-13 11:12:19 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 25
 {executed in 1 msec}
[2024-12-13 11:12:19 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|8213634a-99df-42d8-963e-87bc120cc8a7.jpg |
|-----------------------------------------|

[2024-12-13 11:12:19 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 25
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-13 11:12:19 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-13 11:12:19 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 24
 {executed in 0 msec}
[2024-12-13 11:12:19 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|dfe6f2c1-3753-4a6a-aff4-0de7fa2786b8.jpg |
|-----------------------------------------|

[2024-12-13 11:12:19 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 24
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-13 11:12:19 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-13 11:12:19 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 23
 {executed in 0 msec}
[2024-12-13 11:12:19 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f3e6375d-35d8-4a4a-a976-26ca5c6abaac.jpg |
|-----------------------------------------|

[2024-12-13 11:12:19 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 23
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-13 11:12:19 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-13 11:12:19 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 22
 {executed in 0 msec}
[2024-12-13 11:12:19 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e97360ca-fe79-48c3-acaa-cd71042a0a78.tif |
|-----------------------------------------|

[2024-12-13 11:12:19 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 22
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-13 11:12:19 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-13 11:12:19 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 14
 {executed in 1 msec}
[2024-12-13 11:12:19 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a3709fe6-3e0d-4f04-8cef-1cc328c4fc0c.jpg |
|ada457b9-68aa-4a78-b0c8-c5035af844e2.jpg |
|-----------------------------------------|

[2024-12-13 11:12:19 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 14
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-13 11:12:19 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-13 11:12:19 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 13
 {executed in 0 msec}
[2024-12-13 11:12:19 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6fe5de58-57ef-47e7-80c7-49c0506ca143.jpg |
|920ca8e8-5dc2-4844-aa7f-d7782e94d380.jpg |
|-----------------------------------------|

[2024-12-13 11:12:19 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 13
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-13 11:12:19 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-13 11:12:19 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 12
 {executed in 1 msec}
[2024-12-13 11:12:19 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|84e77be4-2b62-4f40-8f8b-0803e1080449.jpg |
|84f31709-40aa-40eb-a7e7-da0219067927.jpg |
|-----------------------------------------|

[2024-12-13 11:12:19 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 12
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-13 11:12:19 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-13 11:12:19 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 11
 {executed in 0 msec}
[2024-12-13 11:12:19 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3fc51a83-46ea-43ca-a85b-6fad4794a2bd.jpg |
|49906eb9-a412-4428-a629-baccbe152c75.jpg |
|-----------------------------------------|

[2024-12-13 11:12:19 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 11
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-13 11:12:19 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-13 11:12:19 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 9
 {executed in 0 msec}
[2024-12-13 11:12:19 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|34669219-c5d3-4d84-a277-fd8c2b8bca4f.jpg |
|f1ed44ba-1254-4232-9a0d-65037abe1e9c.jpg |
|-----------------------------------------|

[2024-12-13 11:12:19 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 9
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-13 11:12:19 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-13 11:12:19 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 7
 {executed in 0 msec}
[2024-12-13 11:12:19 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|14ecfa41-07fc-40d0-b50b-3fe95a840992.jpg |
|2694c9a6-a7b3-4800-ac73-0c853e16a152.jpg |
|-----------------------------------------|

[2024-12-13 11:12:19 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 7
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-13 11:12:19 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-13 11:12:19 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 6
 {executed in 0 msec}
[2024-12-13 11:12:19 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3c31d519-96b0-49bd-8657-d1eac4fb3fc1.jpg |
|-----------------------------------------|

[2024-12-13 11:12:19 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 6
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-13 11:12:19 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-13 11:12:19 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 5
 {executed in 0 msec}
[2024-12-13 11:12:19 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-13 11:12:19 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 5
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-13 11:12:19 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-13 11:12:21 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-13 11:12:21 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
