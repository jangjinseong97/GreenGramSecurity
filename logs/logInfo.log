[2024-12-10 09:42:51 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.13 with PID 2968 (D:\Students\jang jin seong\GreenGramVer3\build\classes\java\main started by Administrator in D:\Students\jang jin seong\GreenGramVer3)
[2024-12-10 09:42:51 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-10 09:42:51 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-10 09:42:51 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-10 09:42:51 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-10 09:42:51 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-10 09:42:51 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-10 09:42:51 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-10 09:42:52 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-10 09:42:52 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 934 ms
[2024-12-10 09:42:52 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MFU 생성자: D:\Students\jang jin seong\download\greengram_ver3
[2024-12-10 09:42:52 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-10 09:42:52 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-10 09:42:52 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-10 09:42:52 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-10 09:42:52 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Started GreenGramVer3Application in 1.994 seconds (process running for 2.565)
[2024-12-10 09:42:58 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-10 09:42:58 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-10 09:42:58 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-10 09:42:58 INFO http-nio-8080-exec-8] [com.green.greengram.feed.model.FeedGetReq] FeedGetReq 1,null,11
[2024-12-10 09:42:58 INFO http-nio-8080-exec-8] [com.green.greengram.feed.FeedController] feedC getFeedList p: FeedGetReq(super=Paging(page=1, size=20, sIdx=0), signedUserId=11, profileUserId=null, likeFeed=false)
[2024-12-10 09:42:58 INFO http-nio-8080-exec-8] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-10 09:42:58 INFO http-nio-8080-exec-8] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@f2b19e4
[2024-12-10 09:42:58 INFO http-nio-8080-exec-8] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-10 09:42:58 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, writer_user_id AS writerUserId,
        if(nick_name IS NULL , uid, nick_name) AS writerNm,
        pic AS writerPic, contents, location, a.created_at AS createdAt,
        if(c.feed_id IS NULL ,0 , 1) AS isLike
        FROM feed A
        JOIN user B
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c
        ON a.feed_id = c.feed_id
        AND c.user_id = 11

        ORDER BY a.feed_id DESC
        LIMIT 0,20
 {executed in 6 msec}
[2024-12-10 09:42:58 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|feed_id |writer_user_id |writernm |pic                                      |contents     |location |created_at          |islike |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|33      |9              |머        |null                                     |D            |D        |2024-12-06 13:04:38 |0      |
|32      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |안뜨냐          |ㄹㅇ       |2024-12-06 12:53:51 |0      |
|31      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |???          |사진어디감    |2024-12-06 12:38:20 |0      |
|27      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |I am panguin |남극       |2024-11-29 17:07:59 |0      |
|26      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |I am panguin |남극       |2024-11-29 16:46:01 |0      |
|25      |5              |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |4123         |213      |2024-11-29 16:32:31 |0      |
|24      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |31231        |123      |2024-11-29 16:01:53 |0      |
|23      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |4754         |444      |2024-11-29 16:00:03 |0      |
|22      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |aaa          |aa       |2024-11-29 15:58:25 |0      |
|14      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |null         |null     |2024-11-29 10:51:21 |0      |
|13      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |null         |null     |2024-11-29 10:51:14 |0      |
|12      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |null         |null     |2024-11-29 10:42:17 |0      |
|11      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |123          |33123    |2024-11-29 10:42:01 |0      |
|9       |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |21123        |3        |2024-11-29 10:37:22 |0      |
|7       |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |null         |null     |2024-11-28 17:20:59 |0      |
|6       |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |             |         |2024-11-28 17:15:01 |0      |
|5       |4              |33       |9a566777-52ff-49d4-8e16-3a4b7024c8bd.jpg |z            |;;       |2024-12-09 09:45:50 |0      |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|

[2024-12-10 09:42:58 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 33
 {executed in 0 msec}
[2024-12-10 09:42:58 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|690fa432-d879-4a2e-b395-60f2ca27eb1f.jpg |
|-----------------------------------------|

[2024-12-10 09:42:58 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 33
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-10 09:42:58 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 09:42:58 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 32
 {executed in 0 msec}
[2024-12-10 09:42:58 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|99a1cb40-8cee-4a90-abdf-b92e16419f80.jpg |
|-----------------------------------------|

[2024-12-10 09:42:58 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 32
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-10 09:42:58 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 09:42:58 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 31
 {executed in 0 msec}
[2024-12-10 09:42:58 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ba4e898f-67e9-43fa-85dd-a576f142c147.jpg |
|-----------------------------------------|

[2024-12-10 09:42:58 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 31
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:42:58 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 09:42:58 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 27
 {executed in 0 msec}
[2024-12-10 09:42:58 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5a0d637a-00c7-441f-a9fa-c0dc68af2602.jpg |
|-----------------------------------------|

[2024-12-10 09:42:58 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 27
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-10 09:42:58 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|1       |41              |5       |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |
|1       |40              |4       |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |
|1       |37              |3       |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |
|1       |36              |2       |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-10 09:42:58 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 26
 {executed in 0 msec}
[2024-12-10 09:42:58 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3e5fe979-fe9c-4ed6-9ad7-c1dbf4f2538f.jpg |
|-----------------------------------------|

[2024-12-10 09:42:58 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 26
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-10 09:42:58 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|1       |9               |s       |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |
|5       |8               |123     |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-10 09:42:58 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 25
 {executed in 0 msec}
[2024-12-10 09:42:58 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|8213634a-99df-42d8-963e-87bc120cc8a7.jpg |
|-----------------------------------------|

[2024-12-10 09:42:58 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 25
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:42:58 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 09:42:58 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 24
 {executed in 0 msec}
[2024-12-10 09:42:58 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|dfe6f2c1-3753-4a6a-aff4-0de7fa2786b8.jpg |
|-----------------------------------------|

[2024-12-10 09:42:58 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 24
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:42:58 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 09:42:58 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 23
 {executed in 1 msec}
[2024-12-10 09:42:58 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f3e6375d-35d8-4a4a-a976-26ca5c6abaac.jpg |
|-----------------------------------------|

[2024-12-10 09:42:58 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 23
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:42:58 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 09:42:58 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 22
 {executed in 0 msec}
[2024-12-10 09:42:58 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e97360ca-fe79-48c3-acaa-cd71042a0a78.tif |
|-----------------------------------------|

[2024-12-10 09:42:58 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 22
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-10 09:42:58 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 09:42:58 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 14
 {executed in 0 msec}
[2024-12-10 09:42:58 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a3709fe6-3e0d-4f04-8cef-1cc328c4fc0c.jpg |
|ada457b9-68aa-4a78-b0c8-c5035af844e2.jpg |
|-----------------------------------------|

[2024-12-10 09:42:58 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 14
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-10 09:42:58 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 09:42:58 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 13
 {executed in 0 msec}
[2024-12-10 09:42:58 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6fe5de58-57ef-47e7-80c7-49c0506ca143.jpg |
|920ca8e8-5dc2-4844-aa7f-d7782e94d380.jpg |
|-----------------------------------------|

[2024-12-10 09:42:58 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 13
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-10 09:42:58 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 09:42:58 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 12
 {executed in 0 msec}
[2024-12-10 09:42:58 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|84e77be4-2b62-4f40-8f8b-0803e1080449.jpg |
|84f31709-40aa-40eb-a7e7-da0219067927.jpg |
|-----------------------------------------|

[2024-12-10 09:42:58 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 12
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:42:58 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 09:42:58 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 11
 {executed in 0 msec}
[2024-12-10 09:42:58 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3fc51a83-46ea-43ca-a85b-6fad4794a2bd.jpg |
|49906eb9-a412-4428-a629-baccbe152c75.jpg |
|-----------------------------------------|

[2024-12-10 09:42:58 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 11
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:42:58 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 09:42:58 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 9
 {executed in 0 msec}
[2024-12-10 09:42:58 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|34669219-c5d3-4d84-a277-fd8c2b8bca4f.jpg |
|f1ed44ba-1254-4232-9a0d-65037abe1e9c.jpg |
|-----------------------------------------|

[2024-12-10 09:42:58 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 9
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:42:58 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 09:42:58 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 7
 {executed in 0 msec}
[2024-12-10 09:42:58 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|14ecfa41-07fc-40d0-b50b-3fe95a840992.jpg |
|2694c9a6-a7b3-4800-ac73-0c853e16a152.jpg |
|-----------------------------------------|

[2024-12-10 09:42:58 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 7
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:42:58 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 09:42:58 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 6
 {executed in 0 msec}
[2024-12-10 09:42:58 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3c31d519-96b0-49bd-8657-d1eac4fb3fc1.jpg |
|-----------------------------------------|

[2024-12-10 09:42:58 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 6
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:42:58 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 09:42:58 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 5
 {executed in 0 msec}
[2024-12-10 09:42:58 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-10 09:42:58 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 5
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:42:58 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 09:43:02 INFO http-nio-8080-exec-7] [com.green.greengram.feed.model.FeedGetReq] FeedGetReq 1,null,11
[2024-12-10 09:43:02 INFO http-nio-8080-exec-7] [com.green.greengram.feed.FeedController] feedC getFeedList p: FeedGetReq(super=Paging(page=1, size=20, sIdx=0), signedUserId=11, profileUserId=11, likeFeed=false)
[2024-12-10 09:43:02 INFO http-nio-8080-exec-5] [com.green.greengram.user.UserController] userController > getUserInfo > p :UserInfoGetReq(signedUserId=11, profileUserId=11)
[2024-12-10 09:43:02 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, writer_user_id AS writerUserId,
        if(nick_name IS NULL , uid, nick_name) AS writerNm,
        pic AS writerPic, contents, location, a.created_at AS createdAt,
        if(c.feed_id IS NULL ,0 , 1) AS isLike
        FROM feed A
        JOIN user B
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c
        ON a.feed_id = c.feed_id
        AND c.user_id = 11

                    where b.user_id = 11

        ORDER BY a.feed_id DESC
        LIMIT 0,20
 {executed in 0 msec}
[2024-12-10 09:43:02 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|---------------|---------|----|---------|---------|-----------|-------|
|feed_id |writer_user_id |writernm |pic |contents |location |created_at |islike |
|--------|---------------|---------|----|---------|---------|-----------|-------|
|--------|---------------|---------|----|---------|---------|-----------|-------|

[2024-12-10 09:43:02 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.user_id as userId, A.pic, A.created_at AS createdAt
        , IF(nick_name IS NULL, uid, nick_name) AS nickName
        , COUNT(DISTINCT B.from_user_id, B.to_user_id) AS `follower`
        , COUNT(DISTINCT C.from_user_id, C.to_user_id) AS `following`
        , IFNULL(D.feedCnt, 0) AS feedCount
        , IFNULL(D.likeCnt, 0) AS myFeedLikeCount
        , SUM(DISTINCT if(B.from_user_id = 11, 1, 0))
        + SUM(DISTINCT if(C.to_user_id = 11, 2, 0)) AS followState
        FROM user A
        LEFT JOIN (
        SELECT H.writer_user_id
        , COUNT(DISTINCT H.feed_id) AS feedCnt
        , COUNT(I.user_id) AS likeCnt
        FROM feed H
        LEFT JOIN feed_like I
        ON H.feed_id = I.feed_id
        WHERE H.writer_user_id = 11
        ) D
        ON A.user_id = D.writer_user_id
        LEFT JOIN user_follow B
        ON A.user_id = B.to_user_id
        LEFT JOIN user_follow C
        ON A.user_id = C.from_user_id
        WHERE A.user_id = 11
 {executed in 4 msec}
[2024-12-10 09:43:02 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|user_id |pic                                      |created_at          |nickname |follower |following |feedcount |myfeedlikecount |followstate |
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|11      |5abc9b9d-1b7e-4d08-9ee4-3d42e6a01fd4.jpg |2024-12-09 16:12:57 |88       |0        |0         |0         |0               |0           |
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|

[2024-12-10 09:43:16 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select upw, user_id as userId, pic,
        if(nick_name is null ,uid, nick_name) as nickName
        from user
        where uid = '11'
 {executed in 0 msec}
[2024-12-10 09:43:16 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-------------------------------------------------------------|--------|-----------------------------------------|---------|
|upw                                                          |user_id |pic                                      |nickname |
|-------------------------------------------------------------|--------|-----------------------------------------|---------|
|$2a$10$/FL2kogEtMKq8t2tv40iPuuSqwfb5dfNWzRU0jmMWJX2Q28/d8eJS |1       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |33       |
|-------------------------------------------------------------|--------|-----------------------------------------|---------|

[2024-12-10 09:43:16 INFO http-nio-8080-exec-8] [com.green.greengram.user.UserService] com.green.greengram.user.model.UserSignInReq@3a59b959
[2024-12-10 09:43:16 INFO http-nio-8080-exec-8] [com.green.greengram.user.UserController] UserSignInRes(pic=37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg, nickName=33, userId=1, upw=$2a$10$/FL2kogEtMKq8t2tv40iPuuSqwfb5dfNWzRU0jmMWJX2Q28/d8eJS, msg=로그인 성공)
[2024-12-10 09:43:16 INFO http-nio-8080-exec-6] [com.green.greengram.feed.model.FeedGetReq] FeedGetReq 1,null,1
[2024-12-10 09:43:16 INFO http-nio-8080-exec-6] [com.green.greengram.feed.FeedController] feedC getFeedList p: FeedGetReq(super=Paging(page=1, size=20, sIdx=0), signedUserId=1, profileUserId=null, likeFeed=false)
[2024-12-10 09:43:16 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, writer_user_id AS writerUserId,
        if(nick_name IS NULL , uid, nick_name) AS writerNm,
        pic AS writerPic, contents, location, a.created_at AS createdAt,
        if(c.feed_id IS NULL ,0 , 1) AS isLike
        FROM feed A
        JOIN user B
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c
        ON a.feed_id = c.feed_id
        AND c.user_id = 1

        ORDER BY a.feed_id DESC
        LIMIT 0,20
 {executed in 1 msec}
[2024-12-10 09:43:16 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|feed_id |writer_user_id |writernm |pic                                      |contents     |location |created_at          |islike |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|33      |9              |머        |null                                     |D            |D        |2024-12-06 13:04:38 |1      |
|32      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |안뜨냐          |ㄹㅇ       |2024-12-06 12:53:51 |1      |
|31      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |???          |사진어디감    |2024-12-06 12:38:20 |0      |
|27      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |I am panguin |남극       |2024-11-29 17:07:59 |0      |
|26      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |I am panguin |남극       |2024-11-29 16:46:01 |1      |
|25      |5              |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |4123         |213      |2024-11-29 16:32:31 |0      |
|24      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |31231        |123      |2024-11-29 16:01:53 |0      |
|23      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |4754         |444      |2024-11-29 16:00:03 |0      |
|22      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |aaa          |aa       |2024-11-29 15:58:25 |0      |
|14      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |null         |null     |2024-11-29 10:51:21 |1      |
|13      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |null         |null     |2024-11-29 10:51:14 |1      |
|12      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |null         |null     |2024-11-29 10:42:17 |1      |
|11      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |123          |33123    |2024-11-29 10:42:01 |0      |
|9       |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |21123        |3        |2024-11-29 10:37:22 |0      |
|7       |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |null         |null     |2024-11-28 17:20:59 |1      |
|6       |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |             |         |2024-11-28 17:15:01 |0      |
|5       |4              |33       |9a566777-52ff-49d4-8e16-3a4b7024c8bd.jpg |z            |;;       |2024-12-09 09:45:50 |1      |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|

[2024-12-10 09:43:16 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 33
 {executed in 0 msec}
[2024-12-10 09:43:16 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|690fa432-d879-4a2e-b395-60f2ca27eb1f.jpg |
|-----------------------------------------|

[2024-12-10 09:43:16 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 33
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:43:16 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 09:43:16 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 32
 {executed in 0 msec}
[2024-12-10 09:43:16 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|99a1cb40-8cee-4a90-abdf-b92e16419f80.jpg |
|-----------------------------------------|

[2024-12-10 09:43:16 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 32
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:43:16 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 09:43:16 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 31
 {executed in 0 msec}
[2024-12-10 09:43:16 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ba4e898f-67e9-43fa-85dd-a576f142c147.jpg |
|-----------------------------------------|

[2024-12-10 09:43:16 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 31
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:43:16 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 09:43:16 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 27
 {executed in 0 msec}
[2024-12-10 09:43:16 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5a0d637a-00c7-441f-a9fa-c0dc68af2602.jpg |
|-----------------------------------------|

[2024-12-10 09:43:16 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 27
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:43:16 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|1       |41              |5       |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |
|1       |40              |4       |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |
|1       |37              |3       |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |
|1       |36              |2       |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-10 09:43:16 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 26
 {executed in 0 msec}
[2024-12-10 09:43:16 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3e5fe979-fe9c-4ed6-9ad7-c1dbf4f2538f.jpg |
|-----------------------------------------|

[2024-12-10 09:43:16 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 26
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:43:16 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|1       |9               |s       |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |
|5       |8               |123     |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-10 09:43:16 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 25
 {executed in 1 msec}
[2024-12-10 09:43:16 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|8213634a-99df-42d8-963e-87bc120cc8a7.jpg |
|-----------------------------------------|

[2024-12-10 09:43:16 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 25
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:43:16 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 09:43:16 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 24
 {executed in 1 msec}
[2024-12-10 09:43:16 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|dfe6f2c1-3753-4a6a-aff4-0de7fa2786b8.jpg |
|-----------------------------------------|

[2024-12-10 09:43:16 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 24
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:43:16 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 09:43:16 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 23
 {executed in 1 msec}
[2024-12-10 09:43:16 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f3e6375d-35d8-4a4a-a976-26ca5c6abaac.jpg |
|-----------------------------------------|

[2024-12-10 09:43:16 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 23
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:43:16 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 09:43:16 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 22
 {executed in 0 msec}
[2024-12-10 09:43:16 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e97360ca-fe79-48c3-acaa-cd71042a0a78.tif |
|-----------------------------------------|

[2024-12-10 09:43:16 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 22
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:43:16 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 09:43:16 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 14
 {executed in 1 msec}
[2024-12-10 09:43:16 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a3709fe6-3e0d-4f04-8cef-1cc328c4fc0c.jpg |
|ada457b9-68aa-4a78-b0c8-c5035af844e2.jpg |
|-----------------------------------------|

[2024-12-10 09:43:16 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 14
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:43:16 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 09:43:16 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 13
 {executed in 0 msec}
[2024-12-10 09:43:16 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6fe5de58-57ef-47e7-80c7-49c0506ca143.jpg |
|920ca8e8-5dc2-4844-aa7f-d7782e94d380.jpg |
|-----------------------------------------|

[2024-12-10 09:43:16 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 13
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:43:16 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 09:43:16 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 12
 {executed in 0 msec}
[2024-12-10 09:43:16 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|84e77be4-2b62-4f40-8f8b-0803e1080449.jpg |
|84f31709-40aa-40eb-a7e7-da0219067927.jpg |
|-----------------------------------------|

[2024-12-10 09:43:16 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 12
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:43:16 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 09:43:16 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 11
 {executed in 0 msec}
[2024-12-10 09:43:16 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3fc51a83-46ea-43ca-a85b-6fad4794a2bd.jpg |
|49906eb9-a412-4428-a629-baccbe152c75.jpg |
|-----------------------------------------|

[2024-12-10 09:43:16 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 11
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:43:16 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 09:43:16 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 9
 {executed in 0 msec}
[2024-12-10 09:43:16 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|34669219-c5d3-4d84-a277-fd8c2b8bca4f.jpg |
|f1ed44ba-1254-4232-9a0d-65037abe1e9c.jpg |
|-----------------------------------------|

[2024-12-10 09:43:16 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 9
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:43:16 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 09:43:16 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 7
 {executed in 0 msec}
[2024-12-10 09:43:16 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|14ecfa41-07fc-40d0-b50b-3fe95a840992.jpg |
|2694c9a6-a7b3-4800-ac73-0c853e16a152.jpg |
|-----------------------------------------|

[2024-12-10 09:43:16 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 7
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:43:16 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 09:43:16 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 6
 {executed in 0 msec}
[2024-12-10 09:43:16 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3c31d519-96b0-49bd-8657-d1eac4fb3fc1.jpg |
|-----------------------------------------|

[2024-12-10 09:43:16 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 6
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:43:16 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 09:43:16 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 5
 {executed in 1 msec}
[2024-12-10 09:43:16 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-10 09:43:16 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 5
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:43:16 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 09:43:19 INFO http-nio-8080-exec-4] [com.green.greengram.user.UserController] userController > getUserInfo > p :UserInfoGetReq(signedUserId=1, profileUserId=1)
[2024-12-10 09:43:19 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.user_id as userId, A.pic, A.created_at AS createdAt
        , IF(nick_name IS NULL, uid, nick_name) AS nickName
        , COUNT(DISTINCT B.from_user_id, B.to_user_id) AS `follower`
        , COUNT(DISTINCT C.from_user_id, C.to_user_id) AS `following`
        , IFNULL(D.feedCnt, 0) AS feedCount
        , IFNULL(D.likeCnt, 0) AS myFeedLikeCount
        , SUM(DISTINCT if(B.from_user_id = 1, 1, 0))
        + SUM(DISTINCT if(C.to_user_id = 1, 2, 0)) AS followState
        FROM user A
        LEFT JOIN (
        SELECT H.writer_user_id
        , COUNT(DISTINCT H.feed_id) AS feedCnt
        , COUNT(I.user_id) AS likeCnt
        FROM feed H
        LEFT JOIN feed_like I
        ON H.feed_id = I.feed_id
        WHERE H.writer_user_id = 1
        ) D
        ON A.user_id = D.writer_user_id
        LEFT JOIN user_follow B
        ON A.user_id = B.to_user_id
        LEFT JOIN user_follow C
        ON A.user_id = C.from_user_id
        WHERE A.user_id = 1
 {executed in 0 msec}
[2024-12-10 09:43:19 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|user_id |pic                                      |created_at          |nickname |follower |following |feedcount |myfeedlikecount |followstate |
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|1       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |2024-11-28 12:39:42 |33       |1        |3         |14        |10              |0           |
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|

[2024-12-10 09:43:19 INFO http-nio-8080-exec-7] [com.green.greengram.feed.model.FeedGetReq] FeedGetReq 1,null,1
[2024-12-10 09:43:19 INFO http-nio-8080-exec-7] [com.green.greengram.feed.FeedController] feedC getFeedList p: FeedGetReq(super=Paging(page=1, size=20, sIdx=0), signedUserId=1, profileUserId=1, likeFeed=false)
[2024-12-10 09:43:19 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, writer_user_id AS writerUserId,
        if(nick_name IS NULL , uid, nick_name) AS writerNm,
        pic AS writerPic, contents, location, a.created_at AS createdAt,
        if(c.feed_id IS NULL ,0 , 1) AS isLike
        FROM feed A
        JOIN user B
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c
        ON a.feed_id = c.feed_id
        AND c.user_id = 1

                    where b.user_id = 1

        ORDER BY a.feed_id DESC
        LIMIT 0,20
 {executed in 1 msec}
[2024-12-10 09:43:19 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|feed_id |writer_user_id |writernm |pic                                      |contents     |location |created_at          |islike |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|32      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |안뜨냐          |ㄹㅇ       |2024-12-06 12:53:51 |1      |
|31      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |???          |사진어디감    |2024-12-06 12:38:20 |0      |
|27      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |I am panguin |남극       |2024-11-29 17:07:59 |0      |
|26      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |I am panguin |남극       |2024-11-29 16:46:01 |1      |
|24      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |31231        |123      |2024-11-29 16:01:53 |0      |
|23      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |4754         |444      |2024-11-29 16:00:03 |0      |
|22      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |aaa          |aa       |2024-11-29 15:58:25 |0      |
|14      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |null         |null     |2024-11-29 10:51:21 |1      |
|13      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |null         |null     |2024-11-29 10:51:14 |1      |
|12      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |null         |null     |2024-11-29 10:42:17 |1      |
|11      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |123          |33123    |2024-11-29 10:42:01 |0      |
|9       |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |21123        |3        |2024-11-29 10:37:22 |0      |
|7       |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |null         |null     |2024-11-28 17:20:59 |1      |
|6       |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |             |         |2024-11-28 17:15:01 |0      |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|

[2024-12-10 09:43:19 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 32
 {executed in 0 msec}
[2024-12-10 09:43:19 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|99a1cb40-8cee-4a90-abdf-b92e16419f80.jpg |
|-----------------------------------------|

[2024-12-10 09:43:19 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 32
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:43:19 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 09:43:19 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 31
 {executed in 1 msec}
[2024-12-10 09:43:19 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ba4e898f-67e9-43fa-85dd-a576f142c147.jpg |
|-----------------------------------------|

[2024-12-10 09:43:19 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 31
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:43:19 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 09:43:19 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 27
 {executed in 0 msec}
[2024-12-10 09:43:19 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5a0d637a-00c7-441f-a9fa-c0dc68af2602.jpg |
|-----------------------------------------|

[2024-12-10 09:43:19 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 27
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:43:19 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|1       |41              |5       |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |
|1       |40              |4       |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |
|1       |37              |3       |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |
|1       |36              |2       |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-10 09:43:19 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 26
 {executed in 0 msec}
[2024-12-10 09:43:19 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3e5fe979-fe9c-4ed6-9ad7-c1dbf4f2538f.jpg |
|-----------------------------------------|

[2024-12-10 09:43:19 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 26
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:43:19 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|1       |9               |s       |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |
|5       |8               |123     |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-10 09:43:19 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 24
 {executed in 0 msec}
[2024-12-10 09:43:19 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|dfe6f2c1-3753-4a6a-aff4-0de7fa2786b8.jpg |
|-----------------------------------------|

[2024-12-10 09:43:19 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 24
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:43:19 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 09:43:19 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 23
 {executed in 0 msec}
[2024-12-10 09:43:19 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f3e6375d-35d8-4a4a-a976-26ca5c6abaac.jpg |
|-----------------------------------------|

[2024-12-10 09:43:19 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 23
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:43:19 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 09:43:19 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 22
 {executed in 1 msec}
[2024-12-10 09:43:19 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e97360ca-fe79-48c3-acaa-cd71042a0a78.tif |
|-----------------------------------------|

[2024-12-10 09:43:19 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 22
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:43:19 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 09:43:19 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 14
 {executed in 0 msec}
[2024-12-10 09:43:19 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a3709fe6-3e0d-4f04-8cef-1cc328c4fc0c.jpg |
|ada457b9-68aa-4a78-b0c8-c5035af844e2.jpg |
|-----------------------------------------|

[2024-12-10 09:43:19 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 14
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-10 09:43:19 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 09:43:19 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 13
 {executed in 0 msec}
[2024-12-10 09:43:19 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6fe5de58-57ef-47e7-80c7-49c0506ca143.jpg |
|920ca8e8-5dc2-4844-aa7f-d7782e94d380.jpg |
|-----------------------------------------|

[2024-12-10 09:43:19 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 13
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-10 09:43:19 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 09:43:19 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 12
 {executed in 0 msec}
[2024-12-10 09:43:19 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|84e77be4-2b62-4f40-8f8b-0803e1080449.jpg |
|84f31709-40aa-40eb-a7e7-da0219067927.jpg |
|-----------------------------------------|

[2024-12-10 09:43:19 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 12
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:43:19 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 09:43:19 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 11
 {executed in 0 msec}
[2024-12-10 09:43:19 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3fc51a83-46ea-43ca-a85b-6fad4794a2bd.jpg |
|49906eb9-a412-4428-a629-baccbe152c75.jpg |
|-----------------------------------------|

[2024-12-10 09:43:19 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 11
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:43:19 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 09:43:19 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 9
 {executed in 0 msec}
[2024-12-10 09:43:19 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|34669219-c5d3-4d84-a277-fd8c2b8bca4f.jpg |
|f1ed44ba-1254-4232-9a0d-65037abe1e9c.jpg |
|-----------------------------------------|

[2024-12-10 09:43:19 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 9
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:43:19 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 09:43:19 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 7
 {executed in 1 msec}
[2024-12-10 09:43:19 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|14ecfa41-07fc-40d0-b50b-3fe95a840992.jpg |
|2694c9a6-a7b3-4800-ac73-0c853e16a152.jpg |
|-----------------------------------------|

[2024-12-10 09:43:19 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 7
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:43:19 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 09:43:19 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 6
 {executed in 0 msec}
[2024-12-10 09:43:19 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3c31d519-96b0-49bd-8657-d1eac4fb3fc1.jpg |
|-----------------------------------------|

[2024-12-10 09:43:19 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 6
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:43:19 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 09:43:32 WARN http-nio-8080-exec-5] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public com.green.greengram.common.model.ResultResponse<java.lang.Integer> com.green.greengram.feed.FeedController.delFeed(com.green.greengram.feed.model.FeedDelReq): [Field error in object 'feedDelReq' on field 'user_id': rejected value [null]; codes [typeMismatch.feedDelReq.user_id,typeMismatch.user_id,typeMismatch.long,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [feedDelReq.user_id,user_id]; arguments []; default message [user_id]]; default message [Failed to convert value of type 'null' to required type 'long'; Failed to convert from type [null] to type [long] for value [null]]] ]
[2024-12-10 09:44:47 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 28 class path changes (0 additions, 0 deletions, 28 modifications)
[2024-12-10 09:44:47 INFO Thread-5] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-10 09:44:47 INFO Thread-5] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-10 09:44:47 INFO Thread-5] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-10 09:44:47 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.13 with PID 2968 (D:\Students\jang jin seong\GreenGramVer3\build\classes\java\main started by Administrator in D:\Students\jang jin seong\GreenGramVer3)
[2024-12-10 09:44:47 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-10 09:44:47 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-10 09:44:47 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-10 09:44:47 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-10 09:44:47 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-10 09:44:47 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-10 09:44:47 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 215 ms
[2024-12-10 09:44:47 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MFU 생성자: D:\Students\jang jin seong\download\greengram_ver3
[2024-12-10 09:44:47 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-10 09:44:47 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-10 09:44:47 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-10 09:44:47 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-10 09:44:47 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Started GreenGramVer3Application in 0.411 seconds (process running for 117.963)
[2024-12-10 09:44:47 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-10 09:45:19 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 28 class path changes (0 additions, 0 deletions, 28 modifications)
[2024-12-10 09:45:19 INFO Thread-7] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-10 09:45:19 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.13 with PID 2968 (D:\Students\jang jin seong\GreenGramVer3\build\classes\java\main started by Administrator in D:\Students\jang jin seong\GreenGramVer3)
[2024-12-10 09:45:19 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-10 09:45:19 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-10 09:45:19 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-10 09:45:19 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-10 09:45:19 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-10 09:45:19 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-10 09:45:19 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 192 ms
[2024-12-10 09:45:19 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MFU 생성자: D:\Students\jang jin seong\download\greengram_ver3
[2024-12-10 09:45:19 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-10 09:45:19 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-10 09:45:19 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-10 09:45:19 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-10 09:45:19 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Started GreenGramVer3Application in 0.346 seconds (process running for 149.535)
[2024-12-10 09:45:19 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-10 09:45:59 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 28 class path changes (0 additions, 0 deletions, 28 modifications)
[2024-12-10 09:45:59 INFO Thread-11] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-10 09:46:00 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.13 with PID 2968 (D:\Students\jang jin seong\GreenGramVer3\build\classes\java\main started by Administrator in D:\Students\jang jin seong\GreenGramVer3)
[2024-12-10 09:46:00 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-10 09:46:00 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-10 09:46:00 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-10 09:46:00 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-10 09:46:00 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-10 09:46:00 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-10 09:46:00 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 178 ms
[2024-12-10 09:46:00 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MFU 생성자: D:\Students\jang jin seong\download\greengram_ver3
[2024-12-10 09:46:00 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-10 09:46:00 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-10 09:46:00 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-10 09:46:00 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-10 09:46:00 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Started GreenGramVer3Application in 0.327 seconds (process running for 190.282)
[2024-12-10 09:46:00 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-10 09:47:09 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 4 class path changes (0 additions, 0 deletions, 4 modifications)
[2024-12-10 09:47:09 INFO Thread-15] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-10 09:47:09 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.13 with PID 2968 (D:\Students\jang jin seong\GreenGramVer3\build\classes\java\main started by Administrator in D:\Students\jang jin seong\GreenGramVer3)
[2024-12-10 09:47:09 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-10 09:47:09 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-10 09:47:09 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-10 09:47:09 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-10 09:47:09 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-10 09:47:09 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-10 09:47:09 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 186 ms
[2024-12-10 09:47:09 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MFU 생성자: D:\Students\jang jin seong\download\greengram_ver3
[2024-12-10 09:47:09 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-10 09:47:09 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-10 09:47:09 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-10 09:47:09 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-10 09:47:09 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Started GreenGramVer3Application in 0.333 seconds (process running for 259.606)
[2024-12-10 09:47:09 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-10 09:47:16 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 4 class path changes (0 additions, 0 deletions, 4 modifications)
[2024-12-10 09:47:16 INFO Thread-19] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-10 09:47:16 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.13 with PID 2968 (D:\Students\jang jin seong\GreenGramVer3\build\classes\java\main started by Administrator in D:\Students\jang jin seong\GreenGramVer3)
[2024-12-10 09:47:16 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-10 09:47:16 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-10 09:47:16 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-10 09:47:16 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-10 09:47:16 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-10 09:47:16 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-10 09:47:16 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 174 ms
[2024-12-10 09:47:16 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MFU 생성자: D:\Students\jang jin seong\download\greengram_ver3
[2024-12-10 09:47:16 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-10 09:47:17 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-10 09:47:17 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-10 09:47:17 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-10 09:47:17 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Started GreenGramVer3Application in 0.318 seconds (process running for 266.987)
[2024-12-10 09:47:17 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-10 09:48:17 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
[2024-12-10 09:48:17 INFO Thread-23] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-10 09:48:17 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.13 with PID 2968 (D:\Students\jang jin seong\GreenGramVer3\build\classes\java\main started by Administrator in D:\Students\jang jin seong\GreenGramVer3)
[2024-12-10 09:48:17 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-10 09:48:18 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-10 09:48:18 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-10 09:48:18 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-10 09:48:18 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-10 09:48:18 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-10 09:48:18 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 189 ms
[2024-12-10 09:48:18 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MFU 생성자: D:\Students\jang jin seong\download\greengram_ver3
[2024-12-10 09:48:18 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-10 09:48:18 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-10 09:48:18 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-10 09:48:18 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-10 09:48:18 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Started GreenGramVer3Application in 0.336 seconds (process running for 328.146)
[2024-12-10 09:48:18 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-10 09:48:50 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.13 with PID 4660 (D:\Students\jang jin seong\GreenGramVer3\build\classes\java\main started by Administrator in D:\Students\jang jin seong\GreenGramVer3)
[2024-12-10 09:48:50 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-10 09:48:50 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-10 09:48:50 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-10 09:48:51 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-10 09:48:51 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-10 09:48:51 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-10 09:48:51 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-10 09:48:51 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-10 09:48:51 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 1050 ms
[2024-12-10 09:48:51 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MFU 생성자: D:\Students\jang jin seong\download\greengram_ver3
[2024-12-10 09:48:51 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-10 09:48:52 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-10 09:48:52 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-10 09:48:52 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-10 09:48:52 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Started GreenGramVer3Application in 1.981 seconds (process running for 2.35)
[2024-12-10 09:48:57 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-10 09:48:57 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-10 09:48:57 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-10 09:48:57 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-10 09:48:57 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@3c61a009
[2024-12-10 09:48:57 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-10 09:48:57 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE B, C, D
        FROM feed A
        LEFT JOIN feed_like B
        ON A.feed_id = B.feed_id
        LEFT JOIN feed_comment C
        ON A.feed_id = C.feed_id
        LEFT JOIN feed_pic D
        ON A.feed_id = D.feed_id
        WHERE A.feed_id = 32
        AND A.writer_user_id = 1
 {executed in 1 msec}
[2024-12-10 09:48:57 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM feed
        WHERE feed_id = 32
        AND writer_user_id = 1
 {executed in 0 msec}
[2024-12-10 09:49:18 INFO http-nio-8080-exec-4] [com.green.greengram.feed.FeedController] feedC postFeed p: FeedPostReq(contents=??, location=머말하는거냐, writerUserId=1, feedId=0)
[2024-12-10 09:49:18 INFO http-nio-8080-exec-4] [com.green.greengram.feed.FeedService] service FeedPostReq(contents=??, location=머말하는거냐, writerUserId=1, feedId=0)
[2024-12-10 09:49:18 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. insert into feed
        set writer_user_id = 1,
            contents = '??',
            location = '머말하는거냐'
 {executed in 0 msec}
[2024-12-10 09:49:18 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: insert into feed
        set writer_user_id = 1,
            contents = '??',
            location = '머말하는거냐'
 {executed in 0 msec}
[2024-12-10 09:49:18 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|34        |
|----------|

[2024-12-10 09:49:18 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. insert into feed_pic
        (feed_id, pic)
        values
         (  
            34 ,'da3fd470-513f-4cfe-9688-e50c0201cccf.jpg'
         )
 {executed in 1 msec}
[2024-12-10 09:49:23 INFO http-nio-8080-exec-5] [com.green.greengram.feed.model.FeedGetReq] FeedGetReq 1,null,1
[2024-12-10 09:49:23 INFO http-nio-8080-exec-5] [com.green.greengram.feed.FeedController] feedC getFeedList p: FeedGetReq(super=Paging(page=1, size=20, sIdx=0), signedUserId=1, profileUserId=null, likeFeed=false)
[2024-12-10 09:49:23 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, writer_user_id AS writerUserId,
        if(nick_name IS NULL , uid, nick_name) AS writerNm,
        pic AS writerPic, contents, location, a.created_at AS createdAt,
        if(c.feed_id IS NULL ,0 , 1) AS isLike
        FROM feed A
        JOIN user B
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c
        ON a.feed_id = c.feed_id
        AND c.user_id = 1

        ORDER BY a.feed_id DESC
        LIMIT 0,20
 {executed in 1 msec}
[2024-12-10 09:49:23 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|feed_id |writer_user_id |writernm |pic                                      |contents     |location |created_at          |islike |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|34      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |??           |머말하는거냐   |2024-12-10 09:49:18 |0      |
|33      |9              |머        |null                                     |D            |D        |2024-12-06 13:04:38 |1      |
|31      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |???          |사진어디감    |2024-12-06 12:38:20 |0      |
|27      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |I am panguin |남극       |2024-11-29 17:07:59 |0      |
|26      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |I am panguin |남극       |2024-11-29 16:46:01 |1      |
|25      |5              |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |4123         |213      |2024-11-29 16:32:31 |0      |
|24      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |31231        |123      |2024-11-29 16:01:53 |0      |
|23      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |4754         |444      |2024-11-29 16:00:03 |0      |
|22      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |aaa          |aa       |2024-11-29 15:58:25 |0      |
|14      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |null         |null     |2024-11-29 10:51:21 |1      |
|13      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |null         |null     |2024-11-29 10:51:14 |1      |
|12      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |null         |null     |2024-11-29 10:42:17 |1      |
|11      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |123          |33123    |2024-11-29 10:42:01 |0      |
|9       |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |21123        |3        |2024-11-29 10:37:22 |0      |
|7       |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |null         |null     |2024-11-28 17:20:59 |1      |
|6       |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |             |         |2024-11-28 17:15:01 |0      |
|5       |4              |33       |9a566777-52ff-49d4-8e16-3a4b7024c8bd.jpg |z            |;;       |2024-12-09 09:45:50 |1      |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|

[2024-12-10 09:49:23 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 34
 {executed in 0 msec}
[2024-12-10 09:49:23 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|da3fd470-513f-4cfe-9688-e50c0201cccf.jpg |
|-----------------------------------------|

[2024-12-10 09:49:23 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 34
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:49:23 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 09:49:23 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 33
 {executed in 0 msec}
[2024-12-10 09:49:23 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|690fa432-d879-4a2e-b395-60f2ca27eb1f.jpg |
|-----------------------------------------|

[2024-12-10 09:49:23 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 33
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:49:23 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 09:49:23 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 31
 {executed in 1 msec}
[2024-12-10 09:49:23 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ba4e898f-67e9-43fa-85dd-a576f142c147.jpg |
|-----------------------------------------|

[2024-12-10 09:49:23 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 31
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:49:23 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 09:49:23 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 27
 {executed in 0 msec}
[2024-12-10 09:49:23 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5a0d637a-00c7-441f-a9fa-c0dc68af2602.jpg |
|-----------------------------------------|

[2024-12-10 09:49:23 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 27
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:49:23 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|1       |41              |5       |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |
|1       |40              |4       |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |
|1       |37              |3       |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |
|1       |36              |2       |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-10 09:49:23 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 26
 {executed in 1 msec}
[2024-12-10 09:49:23 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3e5fe979-fe9c-4ed6-9ad7-c1dbf4f2538f.jpg |
|-----------------------------------------|

[2024-12-10 09:49:23 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 26
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:49:23 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|1       |9               |s       |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |
|5       |8               |123     |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-10 09:49:23 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 25
 {executed in 0 msec}
[2024-12-10 09:49:23 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|8213634a-99df-42d8-963e-87bc120cc8a7.jpg |
|-----------------------------------------|

[2024-12-10 09:49:23 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 25
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-10 09:49:23 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 09:49:23 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 24
 {executed in 0 msec}
[2024-12-10 09:49:23 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|dfe6f2c1-3753-4a6a-aff4-0de7fa2786b8.jpg |
|-----------------------------------------|

[2024-12-10 09:49:23 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 24
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-10 09:49:23 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 09:49:23 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 23
 {executed in 0 msec}
[2024-12-10 09:49:23 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f3e6375d-35d8-4a4a-a976-26ca5c6abaac.jpg |
|-----------------------------------------|

[2024-12-10 09:49:23 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 23
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:49:23 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 09:49:23 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 22
 {executed in 0 msec}
[2024-12-10 09:49:23 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e97360ca-fe79-48c3-acaa-cd71042a0a78.tif |
|-----------------------------------------|

[2024-12-10 09:49:23 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 22
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:49:23 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 09:49:23 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 14
 {executed in 0 msec}
[2024-12-10 09:49:23 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a3709fe6-3e0d-4f04-8cef-1cc328c4fc0c.jpg |
|ada457b9-68aa-4a78-b0c8-c5035af844e2.jpg |
|-----------------------------------------|

[2024-12-10 09:49:23 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 14
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:49:23 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 09:49:23 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 13
 {executed in 0 msec}
[2024-12-10 09:49:23 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6fe5de58-57ef-47e7-80c7-49c0506ca143.jpg |
|920ca8e8-5dc2-4844-aa7f-d7782e94d380.jpg |
|-----------------------------------------|

[2024-12-10 09:49:23 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 13
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:49:23 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 09:49:23 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 12
 {executed in 0 msec}
[2024-12-10 09:49:23 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|84e77be4-2b62-4f40-8f8b-0803e1080449.jpg |
|84f31709-40aa-40eb-a7e7-da0219067927.jpg |
|-----------------------------------------|

[2024-12-10 09:49:23 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 12
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:49:23 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 09:49:23 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 11
 {executed in 0 msec}
[2024-12-10 09:49:23 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3fc51a83-46ea-43ca-a85b-6fad4794a2bd.jpg |
|49906eb9-a412-4428-a629-baccbe152c75.jpg |
|-----------------------------------------|

[2024-12-10 09:49:23 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 11
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:49:23 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 09:49:23 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 9
 {executed in 0 msec}
[2024-12-10 09:49:23 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|34669219-c5d3-4d84-a277-fd8c2b8bca4f.jpg |
|f1ed44ba-1254-4232-9a0d-65037abe1e9c.jpg |
|-----------------------------------------|

[2024-12-10 09:49:23 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 9
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-10 09:49:23 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 09:49:23 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 7
 {executed in 0 msec}
[2024-12-10 09:49:23 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|14ecfa41-07fc-40d0-b50b-3fe95a840992.jpg |
|2694c9a6-a7b3-4800-ac73-0c853e16a152.jpg |
|-----------------------------------------|

[2024-12-10 09:49:23 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 7
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-10 09:49:23 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 09:49:23 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 6
 {executed in 0 msec}
[2024-12-10 09:49:23 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3c31d519-96b0-49bd-8657-d1eac4fb3fc1.jpg |
|-----------------------------------------|

[2024-12-10 09:49:23 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 6
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:49:23 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 09:49:23 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 5
 {executed in 0 msec}
[2024-12-10 09:49:23 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-10 09:49:23 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 5
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:49:23 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 09:49:32 INFO http-nio-8080-exec-3] [com.green.greengram.feed.model.FeedGetReq] FeedGetReq 1,null,1
[2024-12-10 09:49:32 INFO http-nio-8080-exec-3] [com.green.greengram.feed.FeedController] feedC getFeedList p: FeedGetReq(super=Paging(page=1, size=20, sIdx=0), signedUserId=1, profileUserId=1, likeFeed=false)
[2024-12-10 09:49:32 INFO http-nio-8080-exec-7] [com.green.greengram.user.UserController] userController > getUserInfo > p :UserInfoGetReq(signedUserId=1, profileUserId=1)
[2024-12-10 09:49:32 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, writer_user_id AS writerUserId,
        if(nick_name IS NULL , uid, nick_name) AS writerNm,
        pic AS writerPic, contents, location, a.created_at AS createdAt,
        if(c.feed_id IS NULL ,0 , 1) AS isLike
        FROM feed A
        JOIN user B
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c
        ON a.feed_id = c.feed_id
        AND c.user_id = 1

                    where b.user_id = 1

        ORDER BY a.feed_id DESC
        LIMIT 0,20
 {executed in 0 msec}
[2024-12-10 09:49:32 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.user_id as userId, A.pic, A.created_at AS createdAt
        , IF(nick_name IS NULL, uid, nick_name) AS nickName
        , COUNT(DISTINCT B.from_user_id, B.to_user_id) AS `follower`
        , COUNT(DISTINCT C.from_user_id, C.to_user_id) AS `following`
        , IFNULL(D.feedCnt, 0) AS feedCount
        , IFNULL(D.likeCnt, 0) AS myFeedLikeCount
        , SUM(DISTINCT if(B.from_user_id = 1, 1, 0))
        + SUM(DISTINCT if(C.to_user_id = 1, 2, 0)) AS followState
        FROM user A
        LEFT JOIN (
        SELECT H.writer_user_id
        , COUNT(DISTINCT H.feed_id) AS feedCnt
        , COUNT(I.user_id) AS likeCnt
        FROM feed H
        LEFT JOIN feed_like I
        ON H.feed_id = I.feed_id
        WHERE H.writer_user_id = 1
        ) D
        ON A.user_id = D.writer_user_id
        LEFT JOIN user_follow B
        ON A.user_id = B.to_user_id
        LEFT JOIN user_follow C
        ON A.user_id = C.from_user_id
        WHERE A.user_id = 1
 {executed in 1 msec}
[2024-12-10 09:49:32 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|user_id |pic                                      |created_at          |nickname |follower |following |feedcount |myfeedlikecount |followstate |
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|1       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |2024-11-28 12:39:42 |33       |1        |3         |14        |9               |0           |
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|

[2024-12-10 09:49:32 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|feed_id |writer_user_id |writernm |pic                                      |contents     |location |created_at          |islike |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|34      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |??           |머말하는거냐   |2024-12-10 09:49:18 |0      |
|31      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |???          |사진어디감    |2024-12-06 12:38:20 |0      |
|27      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |I am panguin |남극       |2024-11-29 17:07:59 |0      |
|26      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |I am panguin |남극       |2024-11-29 16:46:01 |1      |
|24      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |31231        |123      |2024-11-29 16:01:53 |0      |
|23      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |4754         |444      |2024-11-29 16:00:03 |0      |
|22      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |aaa          |aa       |2024-11-29 15:58:25 |0      |
|14      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |null         |null     |2024-11-29 10:51:21 |1      |
|13      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |null         |null     |2024-11-29 10:51:14 |1      |
|12      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |null         |null     |2024-11-29 10:42:17 |1      |
|11      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |123          |33123    |2024-11-29 10:42:01 |0      |
|9       |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |21123        |3        |2024-11-29 10:37:22 |0      |
|7       |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |null         |null     |2024-11-28 17:20:59 |1      |
|6       |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |             |         |2024-11-28 17:15:01 |0      |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|

[2024-12-10 09:49:32 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 34
 {executed in 0 msec}
[2024-12-10 09:49:32 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|da3fd470-513f-4cfe-9688-e50c0201cccf.jpg |
|-----------------------------------------|

[2024-12-10 09:49:32 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 34
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-10 09:49:32 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 09:49:32 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 31
 {executed in 1 msec}
[2024-12-10 09:49:32 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ba4e898f-67e9-43fa-85dd-a576f142c147.jpg |
|-----------------------------------------|

[2024-12-10 09:49:32 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 31
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:49:32 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 09:49:32 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 27
 {executed in 0 msec}
[2024-12-10 09:49:32 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5a0d637a-00c7-441f-a9fa-c0dc68af2602.jpg |
|-----------------------------------------|

[2024-12-10 09:49:32 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 27
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:49:32 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|1       |41              |5       |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |
|1       |40              |4       |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |
|1       |37              |3       |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |
|1       |36              |2       |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-10 09:49:32 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 26
 {executed in 0 msec}
[2024-12-10 09:49:32 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3e5fe979-fe9c-4ed6-9ad7-c1dbf4f2538f.jpg |
|-----------------------------------------|

[2024-12-10 09:49:32 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 26
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:49:32 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|1       |9               |s       |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |
|5       |8               |123     |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-10 09:49:32 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 24
 {executed in 1 msec}
[2024-12-10 09:49:32 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|dfe6f2c1-3753-4a6a-aff4-0de7fa2786b8.jpg |
|-----------------------------------------|

[2024-12-10 09:49:32 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 24
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:49:32 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 09:49:32 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 23
 {executed in 0 msec}
[2024-12-10 09:49:32 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f3e6375d-35d8-4a4a-a976-26ca5c6abaac.jpg |
|-----------------------------------------|

[2024-12-10 09:49:32 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 23
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:49:32 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 09:49:32 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 22
 {executed in 1 msec}
[2024-12-10 09:49:32 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e97360ca-fe79-48c3-acaa-cd71042a0a78.tif |
|-----------------------------------------|

[2024-12-10 09:49:32 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 22
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:49:32 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 09:49:32 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 14
 {executed in 0 msec}
[2024-12-10 09:49:32 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a3709fe6-3e0d-4f04-8cef-1cc328c4fc0c.jpg |
|ada457b9-68aa-4a78-b0c8-c5035af844e2.jpg |
|-----------------------------------------|

[2024-12-10 09:49:32 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 14
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:49:32 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 09:49:32 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 13
 {executed in 0 msec}
[2024-12-10 09:49:32 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6fe5de58-57ef-47e7-80c7-49c0506ca143.jpg |
|920ca8e8-5dc2-4844-aa7f-d7782e94d380.jpg |
|-----------------------------------------|

[2024-12-10 09:49:32 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 13
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:49:32 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 09:49:32 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 12
 {executed in 1 msec}
[2024-12-10 09:49:32 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|84e77be4-2b62-4f40-8f8b-0803e1080449.jpg |
|84f31709-40aa-40eb-a7e7-da0219067927.jpg |
|-----------------------------------------|

[2024-12-10 09:49:32 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 12
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:49:32 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 09:49:32 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 11
 {executed in 1 msec}
[2024-12-10 09:49:32 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3fc51a83-46ea-43ca-a85b-6fad4794a2bd.jpg |
|49906eb9-a412-4428-a629-baccbe152c75.jpg |
|-----------------------------------------|

[2024-12-10 09:49:32 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 11
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:49:32 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 09:49:32 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 9
 {executed in 1 msec}
[2024-12-10 09:49:32 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|34669219-c5d3-4d84-a277-fd8c2b8bca4f.jpg |
|f1ed44ba-1254-4232-9a0d-65037abe1e9c.jpg |
|-----------------------------------------|

[2024-12-10 09:49:32 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 9
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:49:32 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 09:49:32 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 7
 {executed in 1 msec}
[2024-12-10 09:49:32 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|14ecfa41-07fc-40d0-b50b-3fe95a840992.jpg |
|2694c9a6-a7b3-4800-ac73-0c853e16a152.jpg |
|-----------------------------------------|

[2024-12-10 09:49:32 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 7
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:49:32 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 09:49:32 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 6
 {executed in 1 msec}
[2024-12-10 09:49:32 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3c31d519-96b0-49bd-8657-d1eac4fb3fc1.jpg |
|-----------------------------------------|

[2024-12-10 09:49:32 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 6
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-10 09:49:32 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 09:50:44 INFO http-nio-8080-exec-4] [com.green.greengram.feed.FeedController] feedC postFeed p: FeedPostReq(contents=15131, location=1532, writerUserId=1, feedId=0)
[2024-12-10 09:50:44 INFO http-nio-8080-exec-4] [com.green.greengram.feed.FeedService] service FeedPostReq(contents=15131, location=1532, writerUserId=1, feedId=0)
[2024-12-10 09:50:44 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. insert into feed
        set writer_user_id = 1,
            contents = '15131',
            location = '1532'
 {executed in 1 msec}
[2024-12-10 09:50:44 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: insert into feed
        set writer_user_id = 1,
            contents = '15131',
            location = '1532'
 {executed in 0 msec}
[2024-12-10 09:50:44 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|35        |
|----------|

[2024-12-10 09:50:44 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. insert into feed_pic
        (feed_id, pic)
        values
         (  
            35 ,'38e0ee97-73ae-4b4a-8f82-23e79d91a3ae.jpg'
         )
 {executed in 0 msec}
[2024-12-10 09:50:50 INFO http-nio-8080-exec-3] [com.green.greengram.feed.model.FeedGetReq] FeedGetReq 1,null,1
[2024-12-10 09:50:50 INFO http-nio-8080-exec-3] [com.green.greengram.feed.FeedController] feedC getFeedList p: FeedGetReq(super=Paging(page=1, size=20, sIdx=0), signedUserId=1, profileUserId=null, likeFeed=false)
[2024-12-10 09:50:50 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, writer_user_id AS writerUserId,
        if(nick_name IS NULL , uid, nick_name) AS writerNm,
        pic AS writerPic, contents, location, a.created_at AS createdAt,
        if(c.feed_id IS NULL ,0 , 1) AS isLike
        FROM feed A
        JOIN user B
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c
        ON a.feed_id = c.feed_id
        AND c.user_id = 1

        ORDER BY a.feed_id DESC
        LIMIT 0,20
 {executed in 1 msec}
[2024-12-10 09:50:50 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|feed_id |writer_user_id |writernm |pic                                      |contents     |location |created_at          |islike |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|35      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |15131        |1532     |2024-12-10 09:50:44 |0      |
|34      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |??           |머말하는거냐   |2024-12-10 09:49:18 |0      |
|33      |9              |머        |null                                     |D            |D        |2024-12-06 13:04:38 |1      |
|31      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |???          |사진어디감    |2024-12-06 12:38:20 |0      |
|27      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |I am panguin |남극       |2024-11-29 17:07:59 |0      |
|26      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |I am panguin |남극       |2024-11-29 16:46:01 |1      |
|25      |5              |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |4123         |213      |2024-11-29 16:32:31 |0      |
|24      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |31231        |123      |2024-11-29 16:01:53 |0      |
|23      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |4754         |444      |2024-11-29 16:00:03 |0      |
|22      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |aaa          |aa       |2024-11-29 15:58:25 |0      |
|14      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |null         |null     |2024-11-29 10:51:21 |1      |
|13      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |null         |null     |2024-11-29 10:51:14 |1      |
|12      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |null         |null     |2024-11-29 10:42:17 |1      |
|11      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |123          |33123    |2024-11-29 10:42:01 |0      |
|9       |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |21123        |3        |2024-11-29 10:37:22 |0      |
|7       |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |null         |null     |2024-11-28 17:20:59 |1      |
|6       |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |             |         |2024-11-28 17:15:01 |0      |
|5       |4              |33       |9a566777-52ff-49d4-8e16-3a4b7024c8bd.jpg |z            |;;       |2024-12-09 09:45:50 |1      |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|

[2024-12-10 09:50:50 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 35
 {executed in 0 msec}
[2024-12-10 09:50:50 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|38e0ee97-73ae-4b4a-8f82-23e79d91a3ae.jpg |
|-----------------------------------------|

[2024-12-10 09:50:50 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 35
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:50:50 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 09:50:50 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 34
 {executed in 1 msec}
[2024-12-10 09:50:50 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|da3fd470-513f-4cfe-9688-e50c0201cccf.jpg |
|-----------------------------------------|

[2024-12-10 09:50:50 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 34
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:50:50 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 09:50:50 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 33
 {executed in 0 msec}
[2024-12-10 09:50:50 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|690fa432-d879-4a2e-b395-60f2ca27eb1f.jpg |
|-----------------------------------------|

[2024-12-10 09:50:50 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 33
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-10 09:50:50 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 09:50:50 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 31
 {executed in 0 msec}
[2024-12-10 09:50:50 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ba4e898f-67e9-43fa-85dd-a576f142c147.jpg |
|-----------------------------------------|

[2024-12-10 09:50:50 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 31
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-10 09:50:50 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 09:50:50 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 27
 {executed in 0 msec}
[2024-12-10 09:50:50 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5a0d637a-00c7-441f-a9fa-c0dc68af2602.jpg |
|-----------------------------------------|

[2024-12-10 09:50:50 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 27
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-10 09:50:50 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|1       |41              |5       |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |
|1       |40              |4       |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |
|1       |37              |3       |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |
|1       |36              |2       |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-10 09:50:50 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 26
 {executed in 0 msec}
[2024-12-10 09:50:50 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3e5fe979-fe9c-4ed6-9ad7-c1dbf4f2538f.jpg |
|-----------------------------------------|

[2024-12-10 09:50:50 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 26
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:50:50 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|1       |9               |s       |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |
|5       |8               |123     |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-10 09:50:50 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 25
 {executed in 0 msec}
[2024-12-10 09:50:50 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|8213634a-99df-42d8-963e-87bc120cc8a7.jpg |
|-----------------------------------------|

[2024-12-10 09:50:50 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 25
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:50:50 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 09:50:50 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 24
 {executed in 0 msec}
[2024-12-10 09:50:50 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|dfe6f2c1-3753-4a6a-aff4-0de7fa2786b8.jpg |
|-----------------------------------------|

[2024-12-10 09:50:50 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 24
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:50:50 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 09:50:50 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 23
 {executed in 0 msec}
[2024-12-10 09:50:50 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f3e6375d-35d8-4a4a-a976-26ca5c6abaac.jpg |
|-----------------------------------------|

[2024-12-10 09:50:50 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 23
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-10 09:50:50 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 09:50:50 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 22
 {executed in 0 msec}
[2024-12-10 09:50:50 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e97360ca-fe79-48c3-acaa-cd71042a0a78.tif |
|-----------------------------------------|

[2024-12-10 09:50:50 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 22
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:50:50 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 09:50:50 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 14
 {executed in 0 msec}
[2024-12-10 09:50:50 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a3709fe6-3e0d-4f04-8cef-1cc328c4fc0c.jpg |
|ada457b9-68aa-4a78-b0c8-c5035af844e2.jpg |
|-----------------------------------------|

[2024-12-10 09:50:50 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 14
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:50:50 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 09:50:50 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 13
 {executed in 1 msec}
[2024-12-10 09:50:50 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6fe5de58-57ef-47e7-80c7-49c0506ca143.jpg |
|920ca8e8-5dc2-4844-aa7f-d7782e94d380.jpg |
|-----------------------------------------|

[2024-12-10 09:50:50 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 13
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:50:50 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 09:50:50 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 12
 {executed in 0 msec}
[2024-12-10 09:50:50 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|84e77be4-2b62-4f40-8f8b-0803e1080449.jpg |
|84f31709-40aa-40eb-a7e7-da0219067927.jpg |
|-----------------------------------------|

[2024-12-10 09:50:50 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 12
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:50:50 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 09:50:50 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 11
 {executed in 0 msec}
[2024-12-10 09:50:50 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3fc51a83-46ea-43ca-a85b-6fad4794a2bd.jpg |
|49906eb9-a412-4428-a629-baccbe152c75.jpg |
|-----------------------------------------|

[2024-12-10 09:50:50 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 11
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:50:50 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 09:50:50 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 9
 {executed in 0 msec}
[2024-12-10 09:50:50 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|34669219-c5d3-4d84-a277-fd8c2b8bca4f.jpg |
|f1ed44ba-1254-4232-9a0d-65037abe1e9c.jpg |
|-----------------------------------------|

[2024-12-10 09:50:50 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 9
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-10 09:50:50 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 09:50:50 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 7
 {executed in 0 msec}
[2024-12-10 09:50:50 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|14ecfa41-07fc-40d0-b50b-3fe95a840992.jpg |
|2694c9a6-a7b3-4800-ac73-0c853e16a152.jpg |
|-----------------------------------------|

[2024-12-10 09:50:50 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 7
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-10 09:50:50 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 09:50:50 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 6
 {executed in 0 msec}
[2024-12-10 09:50:50 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3c31d519-96b0-49bd-8657-d1eac4fb3fc1.jpg |
|-----------------------------------------|

[2024-12-10 09:50:50 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 6
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:50:50 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 09:50:50 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 5
 {executed in 0 msec}
[2024-12-10 09:50:50 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-10 09:50:50 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 5
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:50:50 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 09:50:54 INFO http-nio-8080-exec-10] [com.green.greengram.user.UserController] userController > getUserInfo > p :UserInfoGetReq(signedUserId=1, profileUserId=1)
[2024-12-10 09:50:54 INFO http-nio-8080-exec-7] [com.green.greengram.feed.model.FeedGetReq] FeedGetReq 1,null,1
[2024-12-10 09:50:54 INFO http-nio-8080-exec-7] [com.green.greengram.feed.FeedController] feedC getFeedList p: FeedGetReq(super=Paging(page=1, size=20, sIdx=0), signedUserId=1, profileUserId=1, likeFeed=false)
[2024-12-10 09:50:54 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.user_id as userId, A.pic, A.created_at AS createdAt
        , IF(nick_name IS NULL, uid, nick_name) AS nickName
        , COUNT(DISTINCT B.from_user_id, B.to_user_id) AS `follower`
        , COUNT(DISTINCT C.from_user_id, C.to_user_id) AS `following`
        , IFNULL(D.feedCnt, 0) AS feedCount
        , IFNULL(D.likeCnt, 0) AS myFeedLikeCount
        , SUM(DISTINCT if(B.from_user_id = 1, 1, 0))
        + SUM(DISTINCT if(C.to_user_id = 1, 2, 0)) AS followState
        FROM user A
        LEFT JOIN (
        SELECT H.writer_user_id
        , COUNT(DISTINCT H.feed_id) AS feedCnt
        , COUNT(I.user_id) AS likeCnt
        FROM feed H
        LEFT JOIN feed_like I
        ON H.feed_id = I.feed_id
        WHERE H.writer_user_id = 1
        ) D
        ON A.user_id = D.writer_user_id
        LEFT JOIN user_follow B
        ON A.user_id = B.to_user_id
        LEFT JOIN user_follow C
        ON A.user_id = C.from_user_id
        WHERE A.user_id = 1
 {executed in 1 msec}
[2024-12-10 09:50:54 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_id AS feedId, writer_user_id AS writerUserId,
        if(nick_name IS NULL , uid, nick_name) AS writerNm,
        pic AS writerPic, contents, location, a.created_at AS createdAt,
        if(c.feed_id IS NULL ,0 , 1) AS isLike
        FROM feed A
        JOIN user B
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c
        ON a.feed_id = c.feed_id
        AND c.user_id = 1

                    where b.user_id = 1

        ORDER BY a.feed_id DESC
        LIMIT 0,20
 {executed in 1 msec}
[2024-12-10 09:50:54 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|user_id |pic                                      |created_at          |nickname |follower |following |feedcount |myfeedlikecount |followstate |
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|1       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |2024-11-28 12:39:42 |33       |1        |3         |15        |9               |0           |
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|

[2024-12-10 09:50:54 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|feed_id |writer_user_id |writernm |pic                                      |contents     |location |created_at          |islike |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|35      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |15131        |1532     |2024-12-10 09:50:44 |0      |
|34      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |??           |머말하는거냐   |2024-12-10 09:49:18 |0      |
|31      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |???          |사진어디감    |2024-12-06 12:38:20 |0      |
|27      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |I am panguin |남극       |2024-11-29 17:07:59 |0      |
|26      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |I am panguin |남극       |2024-11-29 16:46:01 |1      |
|24      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |31231        |123      |2024-11-29 16:01:53 |0      |
|23      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |4754         |444      |2024-11-29 16:00:03 |0      |
|22      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |aaa          |aa       |2024-11-29 15:58:25 |0      |
|14      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |null         |null     |2024-11-29 10:51:21 |1      |
|13      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |null         |null     |2024-11-29 10:51:14 |1      |
|12      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |null         |null     |2024-11-29 10:42:17 |1      |
|11      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |123          |33123    |2024-11-29 10:42:01 |0      |
|9       |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |21123        |3        |2024-11-29 10:37:22 |0      |
|7       |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |null         |null     |2024-11-28 17:20:59 |1      |
|6       |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |             |         |2024-11-28 17:15:01 |0      |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|

[2024-12-10 09:50:54 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. select pic
        from feed_pic
        where feed_id = 35
 {executed in 0 msec}
[2024-12-10 09:50:54 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|38e0ee97-73ae-4b4a-8f82-23e79d91a3ae.jpg |
|-----------------------------------------|

[2024-12-10 09:50:54 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 35
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:50:54 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 09:50:54 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. select pic
        from feed_pic
        where feed_id = 34
 {executed in 0 msec}
[2024-12-10 09:50:54 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|da3fd470-513f-4cfe-9688-e50c0201cccf.jpg |
|-----------------------------------------|

[2024-12-10 09:50:54 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 34
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-10 09:50:54 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 09:50:54 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. select pic
        from feed_pic
        where feed_id = 31
 {executed in 0 msec}
[2024-12-10 09:50:54 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ba4e898f-67e9-43fa-85dd-a576f142c147.jpg |
|-----------------------------------------|

[2024-12-10 09:50:54 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 31
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:50:54 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 09:50:54 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. select pic
        from feed_pic
        where feed_id = 27
 {executed in 0 msec}
[2024-12-10 09:50:54 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5a0d637a-00c7-441f-a9fa-c0dc68af2602.jpg |
|-----------------------------------------|

[2024-12-10 09:50:54 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 27
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:50:54 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|1       |41              |5       |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |
|1       |40              |4       |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |
|1       |37              |3       |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |
|1       |36              |2       |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-10 09:50:54 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. select pic
        from feed_pic
        where feed_id = 26
 {executed in 0 msec}
[2024-12-10 09:50:54 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3e5fe979-fe9c-4ed6-9ad7-c1dbf4f2538f.jpg |
|-----------------------------------------|

[2024-12-10 09:50:54 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 26
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-10 09:50:54 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|1       |9               |s       |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |
|5       |8               |123     |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-10 09:50:54 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. select pic
        from feed_pic
        where feed_id = 24
 {executed in 0 msec}
[2024-12-10 09:50:54 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|dfe6f2c1-3753-4a6a-aff4-0de7fa2786b8.jpg |
|-----------------------------------------|

[2024-12-10 09:50:54 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 24
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-10 09:50:54 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 09:50:54 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. select pic
        from feed_pic
        where feed_id = 23
 {executed in 0 msec}
[2024-12-10 09:50:54 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f3e6375d-35d8-4a4a-a976-26ca5c6abaac.jpg |
|-----------------------------------------|

[2024-12-10 09:50:54 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 23
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-10 09:50:54 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 09:50:54 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. select pic
        from feed_pic
        where feed_id = 22
 {executed in 0 msec}
[2024-12-10 09:50:54 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e97360ca-fe79-48c3-acaa-cd71042a0a78.tif |
|-----------------------------------------|

[2024-12-10 09:50:54 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 22
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:50:54 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 09:50:54 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. select pic
        from feed_pic
        where feed_id = 14
 {executed in 0 msec}
[2024-12-10 09:50:54 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a3709fe6-3e0d-4f04-8cef-1cc328c4fc0c.jpg |
|ada457b9-68aa-4a78-b0c8-c5035af844e2.jpg |
|-----------------------------------------|

[2024-12-10 09:50:54 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 14
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-10 09:50:54 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 09:50:54 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. select pic
        from feed_pic
        where feed_id = 13
 {executed in 0 msec}
[2024-12-10 09:50:54 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6fe5de58-57ef-47e7-80c7-49c0506ca143.jpg |
|920ca8e8-5dc2-4844-aa7f-d7782e94d380.jpg |
|-----------------------------------------|

[2024-12-10 09:50:54 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 13
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-10 09:50:54 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 09:50:54 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. select pic
        from feed_pic
        where feed_id = 12
 {executed in 0 msec}
[2024-12-10 09:50:54 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|84e77be4-2b62-4f40-8f8b-0803e1080449.jpg |
|84f31709-40aa-40eb-a7e7-da0219067927.jpg |
|-----------------------------------------|

[2024-12-10 09:50:54 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 12
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:50:54 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 09:50:54 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. select pic
        from feed_pic
        where feed_id = 11
 {executed in 0 msec}
[2024-12-10 09:50:54 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3fc51a83-46ea-43ca-a85b-6fad4794a2bd.jpg |
|49906eb9-a412-4428-a629-baccbe152c75.jpg |
|-----------------------------------------|

[2024-12-10 09:50:54 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 11
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:50:54 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 09:50:54 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. select pic
        from feed_pic
        where feed_id = 9
 {executed in 0 msec}
[2024-12-10 09:50:54 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|34669219-c5d3-4d84-a277-fd8c2b8bca4f.jpg |
|f1ed44ba-1254-4232-9a0d-65037abe1e9c.jpg |
|-----------------------------------------|

[2024-12-10 09:50:54 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 9
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-10 09:50:54 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 09:50:54 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. select pic
        from feed_pic
        where feed_id = 7
 {executed in 0 msec}
[2024-12-10 09:50:54 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|14ecfa41-07fc-40d0-b50b-3fe95a840992.jpg |
|2694c9a6-a7b3-4800-ac73-0c853e16a152.jpg |
|-----------------------------------------|

[2024-12-10 09:50:54 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 7
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:50:54 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 09:50:54 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. select pic
        from feed_pic
        where feed_id = 6
 {executed in 0 msec}
[2024-12-10 09:50:54 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3c31d519-96b0-49bd-8657-d1eac4fb3fc1.jpg |
|-----------------------------------------|

[2024-12-10 09:50:54 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 6
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-10 09:50:54 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 09:51:48 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-10 09:51:48 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-10 10:38:14 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.13 with PID 5144 (D:\Students\jang jin seong\GreenGramVer3\build\classes\java\main started by Administrator in D:\Students\jang jin seong\GreenGramVer3)
[2024-12-10 10:38:14 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-10 10:38:14 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-10 10:38:14 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-10 10:38:15 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-10 10:38:15 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-10 10:38:15 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-10 10:38:15 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-10 10:38:15 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-10 10:38:15 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 855 ms
[2024-12-10 10:38:15 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MFU 생성자: D:\Students\jang jin seong\download\greengram_ver3
[2024-12-10 10:38:15 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-10 10:38:16 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-10 10:38:16 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-10 10:38:16 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-10 10:38:16 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Started GreenGramVer3Application in 1.851 seconds (process running for 2.499)
[2024-12-10 10:38:28 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-10 10:38:28 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-10 10:38:28 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-10 10:38:28 INFO http-nio-8080-exec-6] [com.green.greengram.feed.model.FeedGetReq] FeedGetReq 1,null,1
[2024-12-10 10:38:28 INFO http-nio-8080-exec-6] [com.green.greengram.feed.FeedController] feedC getFeedList p: FeedGetReq(super=Paging(page=1, size=20, sIdx=0), signedUserId=1, profileUserId=null, likeFeed=false)
[2024-12-10 10:38:28 INFO http-nio-8080-exec-6] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-10 10:38:28 INFO http-nio-8080-exec-6] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@73d1bdfe
[2024-12-10 10:38:28 INFO http-nio-8080-exec-6] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-10 10:38:28 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, writer_user_id AS writerUserId,
        if(nick_name IS NULL , uid, nick_name) AS writerNm,
        pic AS writerPic, contents, location, a.created_at AS createdAt,
        if(c.feed_id IS NULL ,0 , 1) AS isLike
        FROM feed A
        JOIN user B
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c
        ON a.feed_id = c.feed_id
        AND c.user_id = 1

        ORDER BY a.feed_id DESC
        LIMIT 0,20
 {executed in 0 msec}
[2024-12-10 10:38:28 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|feed_id |writer_user_id |writernm |pic                                      |contents     |location |created_at          |islike |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|35      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |15131        |1532     |2024-12-10 09:50:44 |0      |
|34      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |??           |머말하는거냐   |2024-12-10 09:49:18 |0      |
|33      |9              |머        |null                                     |D            |D        |2024-12-06 13:04:38 |1      |
|31      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |???          |사진어디감    |2024-12-06 12:38:20 |0      |
|27      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |I am panguin |남극       |2024-11-29 17:07:59 |0      |
|26      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |I am panguin |남극       |2024-11-29 16:46:01 |1      |
|25      |5              |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |4123         |213      |2024-11-29 16:32:31 |0      |
|24      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |31231        |123      |2024-11-29 16:01:53 |0      |
|23      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |4754         |444      |2024-11-29 16:00:03 |0      |
|22      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |aaa          |aa       |2024-11-29 15:58:25 |0      |
|14      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |null         |null     |2024-11-29 10:51:21 |1      |
|13      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |null         |null     |2024-11-29 10:51:14 |1      |
|12      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |null         |null     |2024-11-29 10:42:17 |1      |
|11      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |123          |33123    |2024-11-29 10:42:01 |0      |
|9       |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |21123        |3        |2024-11-29 10:37:22 |0      |
|7       |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |null         |null     |2024-11-28 17:20:59 |1      |
|6       |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |             |         |2024-11-28 17:15:01 |0      |
|5       |4              |33       |9a566777-52ff-49d4-8e16-3a4b7024c8bd.jpg |z            |;;       |2024-12-09 09:45:50 |1      |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|

[2024-12-10 10:38:28 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 35
 {executed in 1 msec}
[2024-12-10 10:38:28 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|38e0ee97-73ae-4b4a-8f82-23e79d91a3ae.jpg |
|-----------------------------------------|

[2024-12-10 10:38:28 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 35
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:38:28 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 10:38:28 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 34
 {executed in 0 msec}
[2024-12-10 10:38:28 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|da3fd470-513f-4cfe-9688-e50c0201cccf.jpg |
|-----------------------------------------|

[2024-12-10 10:38:28 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 34
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:38:28 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 10:38:28 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 33
 {executed in 0 msec}
[2024-12-10 10:38:28 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|690fa432-d879-4a2e-b395-60f2ca27eb1f.jpg |
|-----------------------------------------|

[2024-12-10 10:38:28 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 33
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:38:28 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 10:38:28 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 31
 {executed in 0 msec}
[2024-12-10 10:38:28 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ba4e898f-67e9-43fa-85dd-a576f142c147.jpg |
|-----------------------------------------|

[2024-12-10 10:38:28 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 31
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:38:28 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 10:38:28 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 27
 {executed in 0 msec}
[2024-12-10 10:38:28 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5a0d637a-00c7-441f-a9fa-c0dc68af2602.jpg |
|-----------------------------------------|

[2024-12-10 10:38:28 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 27
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:38:28 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|1       |41              |5       |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |
|1       |40              |4       |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |
|1       |37              |3       |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |
|1       |36              |2       |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-10 10:38:28 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 26
 {executed in 0 msec}
[2024-12-10 10:38:28 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3e5fe979-fe9c-4ed6-9ad7-c1dbf4f2538f.jpg |
|-----------------------------------------|

[2024-12-10 10:38:28 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 26
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-10 10:38:28 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|1       |9               |s       |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |
|5       |8               |123     |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-10 10:38:28 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 25
 {executed in 0 msec}
[2024-12-10 10:38:28 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|8213634a-99df-42d8-963e-87bc120cc8a7.jpg |
|-----------------------------------------|

[2024-12-10 10:38:28 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 25
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:38:28 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 10:38:28 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 24
 {executed in 0 msec}
[2024-12-10 10:38:28 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|dfe6f2c1-3753-4a6a-aff4-0de7fa2786b8.jpg |
|-----------------------------------------|

[2024-12-10 10:38:28 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 24
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:38:28 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 10:38:28 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 23
 {executed in 0 msec}
[2024-12-10 10:38:28 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f3e6375d-35d8-4a4a-a976-26ca5c6abaac.jpg |
|-----------------------------------------|

[2024-12-10 10:38:28 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 23
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:38:28 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 10:38:28 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 22
 {executed in 0 msec}
[2024-12-10 10:38:28 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e97360ca-fe79-48c3-acaa-cd71042a0a78.tif |
|-----------------------------------------|

[2024-12-10 10:38:28 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 22
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-10 10:38:28 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 10:38:28 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 14
 {executed in 0 msec}
[2024-12-10 10:38:28 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a3709fe6-3e0d-4f04-8cef-1cc328c4fc0c.jpg |
|ada457b9-68aa-4a78-b0c8-c5035af844e2.jpg |
|-----------------------------------------|

[2024-12-10 10:38:28 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 14
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:38:28 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 10:38:28 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 13
 {executed in 1 msec}
[2024-12-10 10:38:28 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6fe5de58-57ef-47e7-80c7-49c0506ca143.jpg |
|920ca8e8-5dc2-4844-aa7f-d7782e94d380.jpg |
|-----------------------------------------|

[2024-12-10 10:38:28 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 13
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:38:28 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 10:38:28 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 12
 {executed in 0 msec}
[2024-12-10 10:38:28 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|84e77be4-2b62-4f40-8f8b-0803e1080449.jpg |
|84f31709-40aa-40eb-a7e7-da0219067927.jpg |
|-----------------------------------------|

[2024-12-10 10:38:28 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 12
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:38:28 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 10:38:28 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 11
 {executed in 0 msec}
[2024-12-10 10:38:28 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3fc51a83-46ea-43ca-a85b-6fad4794a2bd.jpg |
|49906eb9-a412-4428-a629-baccbe152c75.jpg |
|-----------------------------------------|

[2024-12-10 10:38:28 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 11
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:38:28 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 10:38:28 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 9
 {executed in 0 msec}
[2024-12-10 10:38:28 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|34669219-c5d3-4d84-a277-fd8c2b8bca4f.jpg |
|f1ed44ba-1254-4232-9a0d-65037abe1e9c.jpg |
|-----------------------------------------|

[2024-12-10 10:38:28 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 9
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:38:28 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 10:38:28 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 7
 {executed in 1 msec}
[2024-12-10 10:38:28 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|14ecfa41-07fc-40d0-b50b-3fe95a840992.jpg |
|2694c9a6-a7b3-4800-ac73-0c853e16a152.jpg |
|-----------------------------------------|

[2024-12-10 10:38:28 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 7
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:38:28 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 10:38:28 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 6
 {executed in 0 msec}
[2024-12-10 10:38:28 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3c31d519-96b0-49bd-8657-d1eac4fb3fc1.jpg |
|-----------------------------------------|

[2024-12-10 10:38:28 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 6
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:38:28 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 10:38:28 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 5
 {executed in 0 msec}
[2024-12-10 10:38:28 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-10 10:38:28 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 5
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:38:28 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 10:38:31 INFO http-nio-8080-exec-8] [com.green.greengram.feed.model.FeedGetReq] FeedGetReq 1,null,1
[2024-12-10 10:38:31 INFO http-nio-8080-exec-8] [com.green.greengram.feed.FeedController] feedC getFeedList p: FeedGetReq(super=Paging(page=1, size=20, sIdx=0), signedUserId=1, profileUserId=1, likeFeed=false)
[2024-12-10 10:38:31 INFO http-nio-8080-exec-7] [com.green.greengram.user.UserController] userController > getUserInfo > p :UserInfoGetReq(signedUserId=1, profileUserId=1)
[2024-12-10 10:38:31 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, writer_user_id AS writerUserId,
        if(nick_name IS NULL , uid, nick_name) AS writerNm,
        pic AS writerPic, contents, location, a.created_at AS createdAt,
        if(c.feed_id IS NULL ,0 , 1) AS isLike
        FROM feed A
        JOIN user B
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c
        ON a.feed_id = c.feed_id
        AND c.user_id = 1

                    where b.user_id = 1

        ORDER BY a.feed_id DESC
        LIMIT 0,20
 {executed in 0 msec}
[2024-12-10 10:38:31 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.user_id as userId, A.pic, A.created_at AS createdAt
        , IF(nick_name IS NULL, uid, nick_name) AS nickName
        , COUNT(DISTINCT B.from_user_id, B.to_user_id) AS `follower`
        , COUNT(DISTINCT C.from_user_id, C.to_user_id) AS `following`
        , IFNULL(D.feedCnt, 0) AS feedCount
        , IFNULL(D.likeCnt, 0) AS myFeedLikeCount
        , SUM(DISTINCT if(B.from_user_id = 1, 1, 0))
        + SUM(DISTINCT if(C.to_user_id = 1, 2, 0)) AS followState
        FROM user A
        LEFT JOIN (
        SELECT H.writer_user_id
        , COUNT(DISTINCT H.feed_id) AS feedCnt
        , COUNT(I.user_id) AS likeCnt
        FROM feed H
        LEFT JOIN feed_like I
        ON H.feed_id = I.feed_id
        WHERE H.writer_user_id = 1
        ) D
        ON A.user_id = D.writer_user_id
        LEFT JOIN user_follow B
        ON A.user_id = B.to_user_id
        LEFT JOIN user_follow C
        ON A.user_id = C.from_user_id
        WHERE A.user_id = 1
 {executed in 1 msec}
[2024-12-10 10:38:31 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|feed_id |writer_user_id |writernm |pic                                      |contents     |location |created_at          |islike |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|35      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |15131        |1532     |2024-12-10 09:50:44 |0      |
|34      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |??           |머말하는거냐   |2024-12-10 09:49:18 |0      |
|31      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |???          |사진어디감    |2024-12-06 12:38:20 |0      |
|27      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |I am panguin |남극       |2024-11-29 17:07:59 |0      |
|26      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |I am panguin |남극       |2024-11-29 16:46:01 |1      |
|24      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |31231        |123      |2024-11-29 16:01:53 |0      |
|23      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |4754         |444      |2024-11-29 16:00:03 |0      |
|22      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |aaa          |aa       |2024-11-29 15:58:25 |0      |
|14      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |null         |null     |2024-11-29 10:51:21 |1      |
|13      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |null         |null     |2024-11-29 10:51:14 |1      |
|12      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |null         |null     |2024-11-29 10:42:17 |1      |
|11      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |123          |33123    |2024-11-29 10:42:01 |0      |
|9       |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |21123        |3        |2024-11-29 10:37:22 |0      |
|7       |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |null         |null     |2024-11-28 17:20:59 |1      |
|6       |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |             |         |2024-11-28 17:15:01 |0      |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|

[2024-12-10 10:38:31 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|user_id |pic                                      |created_at          |nickname |follower |following |feedcount |myfeedlikecount |followstate |
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|1       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |2024-11-28 12:39:42 |33       |1        |3         |15        |9               |0           |
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|

[2024-12-10 10:38:31 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 35
 {executed in 0 msec}
[2024-12-10 10:38:31 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|38e0ee97-73ae-4b4a-8f82-23e79d91a3ae.jpg |
|-----------------------------------------|

[2024-12-10 10:38:31 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 35
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:38:31 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 10:38:31 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 34
 {executed in 0 msec}
[2024-12-10 10:38:31 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|da3fd470-513f-4cfe-9688-e50c0201cccf.jpg |
|-----------------------------------------|

[2024-12-10 10:38:31 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 34
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:38:31 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 10:38:31 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 31
 {executed in 0 msec}
[2024-12-10 10:38:31 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ba4e898f-67e9-43fa-85dd-a576f142c147.jpg |
|-----------------------------------------|

[2024-12-10 10:38:31 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 31
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:38:31 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 10:38:31 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 27
 {executed in 1 msec}
[2024-12-10 10:38:31 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5a0d637a-00c7-441f-a9fa-c0dc68af2602.jpg |
|-----------------------------------------|

[2024-12-10 10:38:31 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 27
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:38:31 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|1       |41              |5       |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |
|1       |40              |4       |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |
|1       |37              |3       |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |
|1       |36              |2       |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-10 10:38:31 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 26
 {executed in 0 msec}
[2024-12-10 10:38:31 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3e5fe979-fe9c-4ed6-9ad7-c1dbf4f2538f.jpg |
|-----------------------------------------|

[2024-12-10 10:38:31 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 26
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:38:31 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|1       |9               |s       |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |
|5       |8               |123     |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-10 10:38:31 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 24
 {executed in 0 msec}
[2024-12-10 10:38:31 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|dfe6f2c1-3753-4a6a-aff4-0de7fa2786b8.jpg |
|-----------------------------------------|

[2024-12-10 10:38:31 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 24
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:38:31 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 10:38:31 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 23
 {executed in 0 msec}
[2024-12-10 10:38:31 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f3e6375d-35d8-4a4a-a976-26ca5c6abaac.jpg |
|-----------------------------------------|

[2024-12-10 10:38:31 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 23
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:38:31 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 10:38:31 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 22
 {executed in 0 msec}
[2024-12-10 10:38:31 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e97360ca-fe79-48c3-acaa-cd71042a0a78.tif |
|-----------------------------------------|

[2024-12-10 10:38:31 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 22
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:38:31 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 10:38:31 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 14
 {executed in 0 msec}
[2024-12-10 10:38:31 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a3709fe6-3e0d-4f04-8cef-1cc328c4fc0c.jpg |
|ada457b9-68aa-4a78-b0c8-c5035af844e2.jpg |
|-----------------------------------------|

[2024-12-10 10:38:31 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 14
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-10 10:38:31 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 10:38:31 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 13
 {executed in 0 msec}
[2024-12-10 10:38:31 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6fe5de58-57ef-47e7-80c7-49c0506ca143.jpg |
|920ca8e8-5dc2-4844-aa7f-d7782e94d380.jpg |
|-----------------------------------------|

[2024-12-10 10:38:31 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 13
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:38:31 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 10:38:31 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 12
 {executed in 0 msec}
[2024-12-10 10:38:31 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|84e77be4-2b62-4f40-8f8b-0803e1080449.jpg |
|84f31709-40aa-40eb-a7e7-da0219067927.jpg |
|-----------------------------------------|

[2024-12-10 10:38:31 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 12
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:38:31 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 10:38:31 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 11
 {executed in 0 msec}
[2024-12-10 10:38:31 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3fc51a83-46ea-43ca-a85b-6fad4794a2bd.jpg |
|49906eb9-a412-4428-a629-baccbe152c75.jpg |
|-----------------------------------------|

[2024-12-10 10:38:31 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 11
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:38:31 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 10:38:31 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 9
 {executed in 1 msec}
[2024-12-10 10:38:31 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|34669219-c5d3-4d84-a277-fd8c2b8bca4f.jpg |
|f1ed44ba-1254-4232-9a0d-65037abe1e9c.jpg |
|-----------------------------------------|

[2024-12-10 10:38:31 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 9
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:38:31 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 10:38:31 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 7
 {executed in 1 msec}
[2024-12-10 10:38:31 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|14ecfa41-07fc-40d0-b50b-3fe95a840992.jpg |
|2694c9a6-a7b3-4800-ac73-0c853e16a152.jpg |
|-----------------------------------------|

[2024-12-10 10:38:31 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 7
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:38:31 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 10:38:31 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 6
 {executed in 0 msec}
[2024-12-10 10:38:31 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3c31d519-96b0-49bd-8657-d1eac4fb3fc1.jpg |
|-----------------------------------------|

[2024-12-10 10:38:31 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 6
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:38:31 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 10:38:40 INFO http-nio-8080-exec-6] [com.green.greengram.feed.FeedController] feedC postFeed p: FeedPostReq(contents=444444444444, location=1111111111, writerUserId=1, feedId=0)
[2024-12-10 10:38:40 INFO http-nio-8080-exec-6] [com.green.greengram.feed.FeedService] service FeedPostReq(contents=444444444444, location=1111111111, writerUserId=1, feedId=0)
[2024-12-10 10:38:40 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. insert into feed
        set writer_user_id = 1,
            contents = '444444444444',
            location = '1111111111'
 {executed in 0 msec}
[2024-12-10 10:38:40 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: insert into feed
        set writer_user_id = 1,
            contents = '444444444444',
            location = '1111111111'
 {executed in 0 msec}
[2024-12-10 10:38:40 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|36        |
|----------|

[2024-12-10 10:38:40 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. insert into feed_pic
        (feed_id, pic)
        values
         (  
            36 ,'22af326e-5605-4b0c-be1f-ea8e88b76f24.jpg'
         )
 {executed in 0 msec}
[2024-12-10 10:38:44 INFO http-nio-8080-exec-4] [com.green.greengram.feed.model.FeedGetReq] FeedGetReq 1,null,1
[2024-12-10 10:38:44 INFO http-nio-8080-exec-4] [com.green.greengram.feed.FeedController] feedC getFeedList p: FeedGetReq(super=Paging(page=1, size=20, sIdx=0), signedUserId=1, profileUserId=null, likeFeed=false)
[2024-12-10 10:38:44 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, writer_user_id AS writerUserId,
        if(nick_name IS NULL , uid, nick_name) AS writerNm,
        pic AS writerPic, contents, location, a.created_at AS createdAt,
        if(c.feed_id IS NULL ,0 , 1) AS isLike
        FROM feed A
        JOIN user B
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c
        ON a.feed_id = c.feed_id
        AND c.user_id = 1

        ORDER BY a.feed_id DESC
        LIMIT 0,20
 {executed in 0 msec}
[2024-12-10 10:38:44 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|---------------|---------|-----------------------------------------|-------------|-----------|--------------------|-------|
|feed_id |writer_user_id |writernm |pic                                      |contents     |location   |created_at          |islike |
|--------|---------------|---------|-----------------------------------------|-------------|-----------|--------------------|-------|
|36      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |444444444444 |1111111111 |2024-12-10 10:38:40 |0      |
|35      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |15131        |1532       |2024-12-10 09:50:44 |0      |
|34      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |??           |머말하는거냐     |2024-12-10 09:49:18 |0      |
|33      |9              |머        |null                                     |D            |D          |2024-12-06 13:04:38 |1      |
|31      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |???          |사진어디감      |2024-12-06 12:38:20 |0      |
|27      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |I am panguin |남극         |2024-11-29 17:07:59 |0      |
|26      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |I am panguin |남극         |2024-11-29 16:46:01 |1      |
|25      |5              |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |4123         |213        |2024-11-29 16:32:31 |0      |
|24      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |31231        |123        |2024-11-29 16:01:53 |0      |
|23      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |4754         |444        |2024-11-29 16:00:03 |0      |
|22      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |aaa          |aa         |2024-11-29 15:58:25 |0      |
|14      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |null         |null       |2024-11-29 10:51:21 |1      |
|13      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |null         |null       |2024-11-29 10:51:14 |1      |
|12      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |null         |null       |2024-11-29 10:42:17 |1      |
|11      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |123          |33123      |2024-11-29 10:42:01 |0      |
|9       |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |21123        |3          |2024-11-29 10:37:22 |0      |
|7       |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |null         |null       |2024-11-28 17:20:59 |1      |
|6       |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |             |           |2024-11-28 17:15:01 |0      |
|5       |4              |33       |9a566777-52ff-49d4-8e16-3a4b7024c8bd.jpg |z            |;;         |2024-12-09 09:45:50 |1      |
|--------|---------------|---------|-----------------------------------------|-------------|-----------|--------------------|-------|

[2024-12-10 10:38:44 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 36
 {executed in 0 msec}
[2024-12-10 10:38:44 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|22af326e-5605-4b0c-be1f-ea8e88b76f24.jpg |
|-----------------------------------------|

[2024-12-10 10:38:44 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 36
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:38:44 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 10:38:44 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 35
 {executed in 0 msec}
[2024-12-10 10:38:44 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|38e0ee97-73ae-4b4a-8f82-23e79d91a3ae.jpg |
|-----------------------------------------|

[2024-12-10 10:38:44 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 35
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-10 10:38:44 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 10:38:44 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 34
 {executed in 0 msec}
[2024-12-10 10:38:44 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|da3fd470-513f-4cfe-9688-e50c0201cccf.jpg |
|-----------------------------------------|

[2024-12-10 10:38:44 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 34
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-10 10:38:44 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 10:38:44 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 33
 {executed in 0 msec}
[2024-12-10 10:38:44 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|690fa432-d879-4a2e-b395-60f2ca27eb1f.jpg |
|-----------------------------------------|

[2024-12-10 10:38:44 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 33
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:38:44 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 10:38:44 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 31
 {executed in 0 msec}
[2024-12-10 10:38:44 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ba4e898f-67e9-43fa-85dd-a576f142c147.jpg |
|-----------------------------------------|

[2024-12-10 10:38:44 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 31
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-10 10:38:44 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 10:38:44 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 27
 {executed in 1 msec}
[2024-12-10 10:38:44 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5a0d637a-00c7-441f-a9fa-c0dc68af2602.jpg |
|-----------------------------------------|

[2024-12-10 10:38:44 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 27
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-10 10:38:44 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|1       |41              |5       |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |
|1       |40              |4       |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |
|1       |37              |3       |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |
|1       |36              |2       |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-10 10:38:44 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 26
 {executed in 0 msec}
[2024-12-10 10:38:44 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3e5fe979-fe9c-4ed6-9ad7-c1dbf4f2538f.jpg |
|-----------------------------------------|

[2024-12-10 10:38:44 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 26
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:38:44 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|1       |9               |s       |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |
|5       |8               |123     |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-10 10:38:44 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 25
 {executed in 1 msec}
[2024-12-10 10:38:44 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|8213634a-99df-42d8-963e-87bc120cc8a7.jpg |
|-----------------------------------------|

[2024-12-10 10:38:44 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 25
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:38:44 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 10:38:44 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 24
 {executed in 0 msec}
[2024-12-10 10:38:44 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|dfe6f2c1-3753-4a6a-aff4-0de7fa2786b8.jpg |
|-----------------------------------------|

[2024-12-10 10:38:44 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 24
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-10 10:38:44 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 10:38:44 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 23
 {executed in 1 msec}
[2024-12-10 10:38:44 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f3e6375d-35d8-4a4a-a976-26ca5c6abaac.jpg |
|-----------------------------------------|

[2024-12-10 10:38:44 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 23
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:38:44 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 10:38:44 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 22
 {executed in 1 msec}
[2024-12-10 10:38:44 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e97360ca-fe79-48c3-acaa-cd71042a0a78.tif |
|-----------------------------------------|

[2024-12-10 10:38:44 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 22
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:38:44 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 10:38:44 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 14
 {executed in 1 msec}
[2024-12-10 10:38:44 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a3709fe6-3e0d-4f04-8cef-1cc328c4fc0c.jpg |
|ada457b9-68aa-4a78-b0c8-c5035af844e2.jpg |
|-----------------------------------------|

[2024-12-10 10:38:44 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 14
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:38:44 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 10:38:44 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 13
 {executed in 0 msec}
[2024-12-10 10:38:44 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6fe5de58-57ef-47e7-80c7-49c0506ca143.jpg |
|920ca8e8-5dc2-4844-aa7f-d7782e94d380.jpg |
|-----------------------------------------|

[2024-12-10 10:38:44 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 13
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:38:44 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 10:38:44 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 12
 {executed in 0 msec}
[2024-12-10 10:38:44 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|84e77be4-2b62-4f40-8f8b-0803e1080449.jpg |
|84f31709-40aa-40eb-a7e7-da0219067927.jpg |
|-----------------------------------------|

[2024-12-10 10:38:44 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 12
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:38:44 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 10:38:44 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 11
 {executed in 0 msec}
[2024-12-10 10:38:44 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3fc51a83-46ea-43ca-a85b-6fad4794a2bd.jpg |
|49906eb9-a412-4428-a629-baccbe152c75.jpg |
|-----------------------------------------|

[2024-12-10 10:38:44 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 11
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:38:44 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 10:38:44 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 9
 {executed in 0 msec}
[2024-12-10 10:38:44 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|34669219-c5d3-4d84-a277-fd8c2b8bca4f.jpg |
|f1ed44ba-1254-4232-9a0d-65037abe1e9c.jpg |
|-----------------------------------------|

[2024-12-10 10:38:44 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 9
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-10 10:38:44 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 10:38:44 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 7
 {executed in 0 msec}
[2024-12-10 10:38:44 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|14ecfa41-07fc-40d0-b50b-3fe95a840992.jpg |
|2694c9a6-a7b3-4800-ac73-0c853e16a152.jpg |
|-----------------------------------------|

[2024-12-10 10:38:44 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 7
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:38:44 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 10:38:44 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 6
 {executed in 0 msec}
[2024-12-10 10:38:44 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3c31d519-96b0-49bd-8657-d1eac4fb3fc1.jpg |
|-----------------------------------------|

[2024-12-10 10:38:44 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 6
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:38:44 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 10:38:44 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 5
 {executed in 0 msec}
[2024-12-10 10:38:44 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-10 10:38:44 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 5
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:38:44 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 10:38:51 INFO http-nio-8080-exec-7] [com.green.greengram.user.UserController] userController > getUserInfo > p :UserInfoGetReq(signedUserId=1, profileUserId=5)
[2024-12-10 10:38:51 INFO http-nio-8080-exec-10] [com.green.greengram.feed.model.FeedGetReq] FeedGetReq 1,null,1
[2024-12-10 10:38:51 INFO http-nio-8080-exec-10] [com.green.greengram.feed.FeedController] feedC getFeedList p: FeedGetReq(super=Paging(page=1, size=20, sIdx=0), signedUserId=1, profileUserId=5, likeFeed=false)
[2024-12-10 10:38:51 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.user_id as userId, A.pic, A.created_at AS createdAt
        , IF(nick_name IS NULL, uid, nick_name) AS nickName
        , COUNT(DISTINCT B.from_user_id, B.to_user_id) AS `follower`
        , COUNT(DISTINCT C.from_user_id, C.to_user_id) AS `following`
        , IFNULL(D.feedCnt, 0) AS feedCount
        , IFNULL(D.likeCnt, 0) AS myFeedLikeCount
        , SUM(DISTINCT if(B.from_user_id = 1, 1, 0))
        + SUM(DISTINCT if(C.to_user_id = 1, 2, 0)) AS followState
        FROM user A
        LEFT JOIN (
        SELECT H.writer_user_id
        , COUNT(DISTINCT H.feed_id) AS feedCnt
        , COUNT(I.user_id) AS likeCnt
        FROM feed H
        LEFT JOIN feed_like I
        ON H.feed_id = I.feed_id
        WHERE H.writer_user_id = 5
        ) D
        ON A.user_id = D.writer_user_id
        LEFT JOIN user_follow B
        ON A.user_id = B.to_user_id
        LEFT JOIN user_follow C
        ON A.user_id = C.from_user_id
        WHERE A.user_id = 5
 {executed in 0 msec}
[2024-12-10 10:38:51 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, writer_user_id AS writerUserId,
        if(nick_name IS NULL , uid, nick_name) AS writerNm,
        pic AS writerPic, contents, location, a.created_at AS createdAt,
        if(c.feed_id IS NULL ,0 , 1) AS isLike
        FROM feed A
        JOIN user B
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c
        ON a.feed_id = c.feed_id
        AND c.user_id = 1

                    where b.user_id = 5

        ORDER BY a.feed_id DESC
        LIMIT 0,20
 {executed in 0 msec}
[2024-12-10 10:38:51 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|---------------|---------|-----------------------------------------|---------|---------|--------------------|-------|
|feed_id |writer_user_id |writernm |pic                                      |contents |location |created_at          |islike |
|--------|---------------|---------|-----------------------------------------|---------|---------|--------------------|-------|
|25      |5              |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |4123     |213      |2024-11-29 16:32:31 |0      |
|--------|---------------|---------|-----------------------------------------|---------|---------|--------------------|-------|

[2024-12-10 10:38:51 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|user_id |pic                                      |created_at          |nickname |follower |following |feedcount |myfeedlikecount |followstate |
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|5       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |2024-11-29 16:32:14 |66       |1        |0         |1         |0               |0           |
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|

[2024-12-10 10:38:51 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 25
 {executed in 1 msec}
[2024-12-10 10:38:51 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|8213634a-99df-42d8-963e-87bc120cc8a7.jpg |
|-----------------------------------------|

[2024-12-10 10:38:51 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 25
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-10 10:38:51 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 10:38:51 INFO http-nio-8080-exec-6] [com.green.greengram.feed.model.FeedGetReq] FeedGetReq 1,null,1
[2024-12-10 10:38:51 INFO http-nio-8080-exec-6] [com.green.greengram.feed.FeedController] feedC getFeedList p: FeedGetReq(super=Paging(page=1, size=20, sIdx=0), signedUserId=1, profileUserId=5, likeFeed=false)
[2024-12-10 10:38:51 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, writer_user_id AS writerUserId,
        if(nick_name IS NULL , uid, nick_name) AS writerNm,
        pic AS writerPic, contents, location, a.created_at AS createdAt,
        if(c.feed_id IS NULL ,0 , 1) AS isLike
        FROM feed A
        JOIN user B
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c
        ON a.feed_id = c.feed_id
        AND c.user_id = 1

                    where b.user_id = 5

        ORDER BY a.feed_id DESC
        LIMIT 0,20
 {executed in 0 msec}
[2024-12-10 10:38:51 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|---------------|---------|-----------------------------------------|---------|---------|--------------------|-------|
|feed_id |writer_user_id |writernm |pic                                      |contents |location |created_at          |islike |
|--------|---------------|---------|-----------------------------------------|---------|---------|--------------------|-------|
|25      |5              |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |4123     |213      |2024-11-29 16:32:31 |0      |
|--------|---------------|---------|-----------------------------------------|---------|---------|--------------------|-------|

[2024-12-10 10:38:51 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 25
 {executed in 1 msec}
[2024-12-10 10:38:51 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|8213634a-99df-42d8-963e-87bc120cc8a7.jpg |
|-----------------------------------------|

[2024-12-10 10:38:51 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 25
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-10 10:38:51 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 10:38:56 INFO http-nio-8080-exec-9] [com.green.greengram.user.UserController] userController > getUserInfo > p :UserInfoGetReq(signedUserId=1, profileUserId=1)
[2024-12-10 10:38:56 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.user_id as userId, A.pic, A.created_at AS createdAt
        , IF(nick_name IS NULL, uid, nick_name) AS nickName
        , COUNT(DISTINCT B.from_user_id, B.to_user_id) AS `follower`
        , COUNT(DISTINCT C.from_user_id, C.to_user_id) AS `following`
        , IFNULL(D.feedCnt, 0) AS feedCount
        , IFNULL(D.likeCnt, 0) AS myFeedLikeCount
        , SUM(DISTINCT if(B.from_user_id = 1, 1, 0))
        + SUM(DISTINCT if(C.to_user_id = 1, 2, 0)) AS followState
        FROM user A
        LEFT JOIN (
        SELECT H.writer_user_id
        , COUNT(DISTINCT H.feed_id) AS feedCnt
        , COUNT(I.user_id) AS likeCnt
        FROM feed H
        LEFT JOIN feed_like I
        ON H.feed_id = I.feed_id
        WHERE H.writer_user_id = 1
        ) D
        ON A.user_id = D.writer_user_id
        LEFT JOIN user_follow B
        ON A.user_id = B.to_user_id
        LEFT JOIN user_follow C
        ON A.user_id = C.from_user_id
        WHERE A.user_id = 1
 {executed in 1 msec}
[2024-12-10 10:38:56 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|user_id |pic                                      |created_at          |nickname |follower |following |feedcount |myfeedlikecount |followstate |
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|1       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |2024-11-28 12:39:42 |33       |1        |3         |16        |9               |0           |
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|

[2024-12-10 10:38:56 INFO http-nio-8080-exec-4] [com.green.greengram.feed.model.FeedGetReq] FeedGetReq 1,null,1
[2024-12-10 10:38:56 INFO http-nio-8080-exec-4] [com.green.greengram.feed.FeedController] feedC getFeedList p: FeedGetReq(super=Paging(page=1, size=20, sIdx=0), signedUserId=1, profileUserId=1, likeFeed=false)
[2024-12-10 10:38:56 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, writer_user_id AS writerUserId,
        if(nick_name IS NULL , uid, nick_name) AS writerNm,
        pic AS writerPic, contents, location, a.created_at AS createdAt,
        if(c.feed_id IS NULL ,0 , 1) AS isLike
        FROM feed A
        JOIN user B
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c
        ON a.feed_id = c.feed_id
        AND c.user_id = 1

                    where b.user_id = 1

        ORDER BY a.feed_id DESC
        LIMIT 0,20
 {executed in 1 msec}
[2024-12-10 10:38:56 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|---------------|---------|-----------------------------------------|-------------|-----------|--------------------|-------|
|feed_id |writer_user_id |writernm |pic                                      |contents     |location   |created_at          |islike |
|--------|---------------|---------|-----------------------------------------|-------------|-----------|--------------------|-------|
|36      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |444444444444 |1111111111 |2024-12-10 10:38:40 |0      |
|35      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |15131        |1532       |2024-12-10 09:50:44 |0      |
|34      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |??           |머말하는거냐     |2024-12-10 09:49:18 |0      |
|31      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |???          |사진어디감      |2024-12-06 12:38:20 |0      |
|27      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |I am panguin |남극         |2024-11-29 17:07:59 |0      |
|26      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |I am panguin |남극         |2024-11-29 16:46:01 |1      |
|24      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |31231        |123        |2024-11-29 16:01:53 |0      |
|23      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |4754         |444        |2024-11-29 16:00:03 |0      |
|22      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |aaa          |aa         |2024-11-29 15:58:25 |0      |
|14      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |null         |null       |2024-11-29 10:51:21 |1      |
|13      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |null         |null       |2024-11-29 10:51:14 |1      |
|12      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |null         |null       |2024-11-29 10:42:17 |1      |
|11      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |123          |33123      |2024-11-29 10:42:01 |0      |
|9       |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |21123        |3          |2024-11-29 10:37:22 |0      |
|7       |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |null         |null       |2024-11-28 17:20:59 |1      |
|6       |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |             |           |2024-11-28 17:15:01 |0      |
|--------|---------------|---------|-----------------------------------------|-------------|-----------|--------------------|-------|

[2024-12-10 10:38:56 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 36
 {executed in 0 msec}
[2024-12-10 10:38:56 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|22af326e-5605-4b0c-be1f-ea8e88b76f24.jpg |
|-----------------------------------------|

[2024-12-10 10:38:56 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 36
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-10 10:38:56 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 10:38:56 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 35
 {executed in 0 msec}
[2024-12-10 10:38:56 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|38e0ee97-73ae-4b4a-8f82-23e79d91a3ae.jpg |
|-----------------------------------------|

[2024-12-10 10:38:56 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 35
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-10 10:38:56 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 10:38:56 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 34
 {executed in 1 msec}
[2024-12-10 10:38:56 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|da3fd470-513f-4cfe-9688-e50c0201cccf.jpg |
|-----------------------------------------|

[2024-12-10 10:38:56 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 34
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:38:56 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 10:38:56 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 31
 {executed in 0 msec}
[2024-12-10 10:38:56 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ba4e898f-67e9-43fa-85dd-a576f142c147.jpg |
|-----------------------------------------|

[2024-12-10 10:38:56 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 31
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:38:56 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 10:38:56 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 27
 {executed in 0 msec}
[2024-12-10 10:38:56 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5a0d637a-00c7-441f-a9fa-c0dc68af2602.jpg |
|-----------------------------------------|

[2024-12-10 10:38:56 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 27
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:38:56 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|1       |41              |5       |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |
|1       |40              |4       |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |
|1       |37              |3       |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |
|1       |36              |2       |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-10 10:38:56 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 26
 {executed in 0 msec}
[2024-12-10 10:38:56 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3e5fe979-fe9c-4ed6-9ad7-c1dbf4f2538f.jpg |
|-----------------------------------------|

[2024-12-10 10:38:56 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 26
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:38:56 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|1       |9               |s       |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |
|5       |8               |123     |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-10 10:38:56 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 24
 {executed in 1 msec}
[2024-12-10 10:38:56 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|dfe6f2c1-3753-4a6a-aff4-0de7fa2786b8.jpg |
|-----------------------------------------|

[2024-12-10 10:38:56 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 24
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:38:56 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 10:38:56 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 23
 {executed in 0 msec}
[2024-12-10 10:38:56 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f3e6375d-35d8-4a4a-a976-26ca5c6abaac.jpg |
|-----------------------------------------|

[2024-12-10 10:38:56 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 23
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:38:56 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 10:38:56 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 22
 {executed in 0 msec}
[2024-12-10 10:38:56 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e97360ca-fe79-48c3-acaa-cd71042a0a78.tif |
|-----------------------------------------|

[2024-12-10 10:38:56 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 22
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:38:56 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 10:38:56 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 14
 {executed in 0 msec}
[2024-12-10 10:38:56 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a3709fe6-3e0d-4f04-8cef-1cc328c4fc0c.jpg |
|ada457b9-68aa-4a78-b0c8-c5035af844e2.jpg |
|-----------------------------------------|

[2024-12-10 10:38:56 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 14
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:38:56 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 10:38:56 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 13
 {executed in 1 msec}
[2024-12-10 10:38:56 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6fe5de58-57ef-47e7-80c7-49c0506ca143.jpg |
|920ca8e8-5dc2-4844-aa7f-d7782e94d380.jpg |
|-----------------------------------------|

[2024-12-10 10:38:56 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 13
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:38:56 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 10:38:56 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 12
 {executed in 1 msec}
[2024-12-10 10:38:56 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|84e77be4-2b62-4f40-8f8b-0803e1080449.jpg |
|84f31709-40aa-40eb-a7e7-da0219067927.jpg |
|-----------------------------------------|

[2024-12-10 10:38:56 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 12
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:38:56 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 10:38:56 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 11
 {executed in 0 msec}
[2024-12-10 10:38:56 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3fc51a83-46ea-43ca-a85b-6fad4794a2bd.jpg |
|49906eb9-a412-4428-a629-baccbe152c75.jpg |
|-----------------------------------------|

[2024-12-10 10:38:56 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 11
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:38:56 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 10:38:56 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 9
 {executed in 0 msec}
[2024-12-10 10:38:56 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|34669219-c5d3-4d84-a277-fd8c2b8bca4f.jpg |
|f1ed44ba-1254-4232-9a0d-65037abe1e9c.jpg |
|-----------------------------------------|

[2024-12-10 10:38:56 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 9
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:38:56 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 10:38:56 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 7
 {executed in 0 msec}
[2024-12-10 10:38:56 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|14ecfa41-07fc-40d0-b50b-3fe95a840992.jpg |
|2694c9a6-a7b3-4800-ac73-0c853e16a152.jpg |
|-----------------------------------------|

[2024-12-10 10:38:56 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 7
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-10 10:38:56 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 10:38:56 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 6
 {executed in 0 msec}
[2024-12-10 10:38:56 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3c31d519-96b0-49bd-8657-d1eac4fb3fc1.jpg |
|-----------------------------------------|

[2024-12-10 10:38:56 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 6
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-10 10:38:56 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 10:39:00 INFO http-nio-8080-exec-2] [com.green.greengram.feed.model.FeedGetReq] FeedGetReq 1,null,1
[2024-12-10 10:39:00 INFO http-nio-8080-exec-2] [com.green.greengram.feed.FeedController] feedC getFeedList p: FeedGetReq(super=Paging(page=1, size=20, sIdx=0), signedUserId=1, profileUserId=null, likeFeed=false)
[2024-12-10 10:39:00 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, writer_user_id AS writerUserId,
        if(nick_name IS NULL , uid, nick_name) AS writerNm,
        pic AS writerPic, contents, location, a.created_at AS createdAt,
        if(c.feed_id IS NULL ,0 , 1) AS isLike
        FROM feed A
        JOIN user B
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c
        ON a.feed_id = c.feed_id
        AND c.user_id = 1

        ORDER BY a.feed_id DESC
        LIMIT 0,20
 {executed in 0 msec}
[2024-12-10 10:39:00 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|---------------|---------|-----------------------------------------|-------------|-----------|--------------------|-------|
|feed_id |writer_user_id |writernm |pic                                      |contents     |location   |created_at          |islike |
|--------|---------------|---------|-----------------------------------------|-------------|-----------|--------------------|-------|
|36      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |444444444444 |1111111111 |2024-12-10 10:38:40 |0      |
|35      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |15131        |1532       |2024-12-10 09:50:44 |0      |
|34      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |??           |머말하는거냐     |2024-12-10 09:49:18 |0      |
|33      |9              |머        |null                                     |D            |D          |2024-12-06 13:04:38 |1      |
|31      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |???          |사진어디감      |2024-12-06 12:38:20 |0      |
|27      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |I am panguin |남극         |2024-11-29 17:07:59 |0      |
|26      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |I am panguin |남극         |2024-11-29 16:46:01 |1      |
|25      |5              |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |4123         |213        |2024-11-29 16:32:31 |0      |
|24      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |31231        |123        |2024-11-29 16:01:53 |0      |
|23      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |4754         |444        |2024-11-29 16:00:03 |0      |
|22      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |aaa          |aa         |2024-11-29 15:58:25 |0      |
|14      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |null         |null       |2024-11-29 10:51:21 |1      |
|13      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |null         |null       |2024-11-29 10:51:14 |1      |
|12      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |null         |null       |2024-11-29 10:42:17 |1      |
|11      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |123          |33123      |2024-11-29 10:42:01 |0      |
|9       |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |21123        |3          |2024-11-29 10:37:22 |0      |
|7       |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |null         |null       |2024-11-28 17:20:59 |1      |
|6       |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |             |           |2024-11-28 17:15:01 |0      |
|5       |4              |33       |9a566777-52ff-49d4-8e16-3a4b7024c8bd.jpg |z            |;;         |2024-12-09 09:45:50 |1      |
|--------|---------------|---------|-----------------------------------------|-------------|-----------|--------------------|-------|

[2024-12-10 10:39:00 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 36
 {executed in 0 msec}
[2024-12-10 10:39:00 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|22af326e-5605-4b0c-be1f-ea8e88b76f24.jpg |
|-----------------------------------------|

[2024-12-10 10:39:00 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 36
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:39:00 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 10:39:00 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 35
 {executed in 0 msec}
[2024-12-10 10:39:00 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|38e0ee97-73ae-4b4a-8f82-23e79d91a3ae.jpg |
|-----------------------------------------|

[2024-12-10 10:39:00 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 35
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-10 10:39:00 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 10:39:00 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 34
 {executed in 0 msec}
[2024-12-10 10:39:00 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|da3fd470-513f-4cfe-9688-e50c0201cccf.jpg |
|-----------------------------------------|

[2024-12-10 10:39:00 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 34
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:39:00 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 10:39:00 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 33
 {executed in 0 msec}
[2024-12-10 10:39:00 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|690fa432-d879-4a2e-b395-60f2ca27eb1f.jpg |
|-----------------------------------------|

[2024-12-10 10:39:00 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 33
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:39:00 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 10:39:00 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 31
 {executed in 0 msec}
[2024-12-10 10:39:00 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ba4e898f-67e9-43fa-85dd-a576f142c147.jpg |
|-----------------------------------------|

[2024-12-10 10:39:00 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 31
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-10 10:39:00 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 10:39:00 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 27
 {executed in 0 msec}
[2024-12-10 10:39:00 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5a0d637a-00c7-441f-a9fa-c0dc68af2602.jpg |
|-----------------------------------------|

[2024-12-10 10:39:00 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 27
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:39:00 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|1       |41              |5       |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |
|1       |40              |4       |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |
|1       |37              |3       |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |
|1       |36              |2       |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-10 10:39:00 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 26
 {executed in 1 msec}
[2024-12-10 10:39:00 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3e5fe979-fe9c-4ed6-9ad7-c1dbf4f2538f.jpg |
|-----------------------------------------|

[2024-12-10 10:39:00 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 26
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:39:00 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|1       |9               |s       |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |
|5       |8               |123     |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-10 10:39:00 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 25
 {executed in 1 msec}
[2024-12-10 10:39:00 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|8213634a-99df-42d8-963e-87bc120cc8a7.jpg |
|-----------------------------------------|

[2024-12-10 10:39:00 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 25
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-10 10:39:00 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 10:39:00 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 24
 {executed in 0 msec}
[2024-12-10 10:39:00 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|dfe6f2c1-3753-4a6a-aff4-0de7fa2786b8.jpg |
|-----------------------------------------|

[2024-12-10 10:39:00 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 24
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-10 10:39:00 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 10:39:00 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 23
 {executed in 0 msec}
[2024-12-10 10:39:00 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f3e6375d-35d8-4a4a-a976-26ca5c6abaac.jpg |
|-----------------------------------------|

[2024-12-10 10:39:00 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 23
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:39:00 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 10:39:00 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 22
 {executed in 0 msec}
[2024-12-10 10:39:00 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e97360ca-fe79-48c3-acaa-cd71042a0a78.tif |
|-----------------------------------------|

[2024-12-10 10:39:00 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 22
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:39:00 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 10:39:00 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 14
 {executed in 1 msec}
[2024-12-10 10:39:00 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a3709fe6-3e0d-4f04-8cef-1cc328c4fc0c.jpg |
|ada457b9-68aa-4a78-b0c8-c5035af844e2.jpg |
|-----------------------------------------|

[2024-12-10 10:39:00 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 14
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:39:00 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 10:39:00 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 13
 {executed in 0 msec}
[2024-12-10 10:39:00 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6fe5de58-57ef-47e7-80c7-49c0506ca143.jpg |
|920ca8e8-5dc2-4844-aa7f-d7782e94d380.jpg |
|-----------------------------------------|

[2024-12-10 10:39:00 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 13
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:39:00 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 10:39:00 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 12
 {executed in 0 msec}
[2024-12-10 10:39:00 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|84e77be4-2b62-4f40-8f8b-0803e1080449.jpg |
|84f31709-40aa-40eb-a7e7-da0219067927.jpg |
|-----------------------------------------|

[2024-12-10 10:39:00 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 12
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:39:00 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 10:39:00 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 11
 {executed in 0 msec}
[2024-12-10 10:39:00 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3fc51a83-46ea-43ca-a85b-6fad4794a2bd.jpg |
|49906eb9-a412-4428-a629-baccbe152c75.jpg |
|-----------------------------------------|

[2024-12-10 10:39:00 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 11
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:39:00 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 10:39:00 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 9
 {executed in 0 msec}
[2024-12-10 10:39:00 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|34669219-c5d3-4d84-a277-fd8c2b8bca4f.jpg |
|f1ed44ba-1254-4232-9a0d-65037abe1e9c.jpg |
|-----------------------------------------|

[2024-12-10 10:39:00 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 9
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:39:00 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 10:39:00 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 7
 {executed in 1 msec}
[2024-12-10 10:39:00 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|14ecfa41-07fc-40d0-b50b-3fe95a840992.jpg |
|2694c9a6-a7b3-4800-ac73-0c853e16a152.jpg |
|-----------------------------------------|

[2024-12-10 10:39:00 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 7
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:39:00 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 10:39:00 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 6
 {executed in 0 msec}
[2024-12-10 10:39:00 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3c31d519-96b0-49bd-8657-d1eac4fb3fc1.jpg |
|-----------------------------------------|

[2024-12-10 10:39:00 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 6
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:39:00 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 10:39:00 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 5
 {executed in 0 msec}
[2024-12-10 10:39:00 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-10 10:39:00 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 5
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:39:00 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 10:40:15 INFO http-nio-8080-exec-3] [com.green.greengram.user.UserController] userController > getUserInfo > p :UserInfoGetReq(signedUserId=1, profileUserId=1)
[2024-12-10 10:40:15 INFO http-nio-8080-exec-4] [com.green.greengram.feed.model.FeedGetReq] FeedGetReq 1,null,1
[2024-12-10 10:40:15 INFO http-nio-8080-exec-4] [com.green.greengram.feed.FeedController] feedC getFeedList p: FeedGetReq(super=Paging(page=1, size=20, sIdx=0), signedUserId=1, profileUserId=1, likeFeed=false)
[2024-12-10 10:40:15 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.user_id as userId, A.pic, A.created_at AS createdAt
        , IF(nick_name IS NULL, uid, nick_name) AS nickName
        , COUNT(DISTINCT B.from_user_id, B.to_user_id) AS `follower`
        , COUNT(DISTINCT C.from_user_id, C.to_user_id) AS `following`
        , IFNULL(D.feedCnt, 0) AS feedCount
        , IFNULL(D.likeCnt, 0) AS myFeedLikeCount
        , SUM(DISTINCT if(B.from_user_id = 1, 1, 0))
        + SUM(DISTINCT if(C.to_user_id = 1, 2, 0)) AS followState
        FROM user A
        LEFT JOIN (
        SELECT H.writer_user_id
        , COUNT(DISTINCT H.feed_id) AS feedCnt
        , COUNT(I.user_id) AS likeCnt
        FROM feed H
        LEFT JOIN feed_like I
        ON H.feed_id = I.feed_id
        WHERE H.writer_user_id = 1
        ) D
        ON A.user_id = D.writer_user_id
        LEFT JOIN user_follow B
        ON A.user_id = B.to_user_id
        LEFT JOIN user_follow C
        ON A.user_id = C.from_user_id
        WHERE A.user_id = 1
 {executed in 0 msec}
[2024-12-10 10:40:15 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_id AS feedId, writer_user_id AS writerUserId,
        if(nick_name IS NULL , uid, nick_name) AS writerNm,
        pic AS writerPic, contents, location, a.created_at AS createdAt,
        if(c.feed_id IS NULL ,0 , 1) AS isLike
        FROM feed A
        JOIN user B
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c
        ON a.feed_id = c.feed_id
        AND c.user_id = 1

                    where b.user_id = 1

        ORDER BY a.feed_id DESC
        LIMIT 0,20
 {executed in 0 msec}
[2024-12-10 10:40:15 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|user_id |pic                                      |created_at          |nickname |follower |following |feedcount |myfeedlikecount |followstate |
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|1       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |2024-11-28 12:39:42 |33       |1        |3         |16        |9               |0           |
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|

[2024-12-10 10:40:15 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|---------------|---------|-----------------------------------------|-------------|-----------|--------------------|-------|
|feed_id |writer_user_id |writernm |pic                                      |contents     |location   |created_at          |islike |
|--------|---------------|---------|-----------------------------------------|-------------|-----------|--------------------|-------|
|36      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |444444444444 |1111111111 |2024-12-10 10:38:40 |0      |
|35      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |15131        |1532       |2024-12-10 09:50:44 |0      |
|34      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |??           |머말하는거냐     |2024-12-10 09:49:18 |0      |
|31      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |???          |사진어디감      |2024-12-06 12:38:20 |0      |
|27      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |I am panguin |남극         |2024-11-29 17:07:59 |0      |
|26      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |I am panguin |남극         |2024-11-29 16:46:01 |1      |
|24      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |31231        |123        |2024-11-29 16:01:53 |0      |
|23      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |4754         |444        |2024-11-29 16:00:03 |0      |
|22      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |aaa          |aa         |2024-11-29 15:58:25 |0      |
|14      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |null         |null       |2024-11-29 10:51:21 |1      |
|13      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |null         |null       |2024-11-29 10:51:14 |1      |
|12      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |null         |null       |2024-11-29 10:42:17 |1      |
|11      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |123          |33123      |2024-11-29 10:42:01 |0      |
|9       |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |21123        |3          |2024-11-29 10:37:22 |0      |
|7       |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |null         |null       |2024-11-28 17:20:59 |1      |
|6       |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |             |           |2024-11-28 17:15:01 |0      |
|--------|---------------|---------|-----------------------------------------|-------------|-----------|--------------------|-------|

[2024-12-10 10:40:15 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. select pic
        from feed_pic
        where feed_id = 36
 {executed in 0 msec}
[2024-12-10 10:40:15 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|22af326e-5605-4b0c-be1f-ea8e88b76f24.jpg |
|-----------------------------------------|

[2024-12-10 10:40:15 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 36
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-10 10:40:15 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 10:40:15 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. select pic
        from feed_pic
        where feed_id = 35
 {executed in 0 msec}
[2024-12-10 10:40:15 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|38e0ee97-73ae-4b4a-8f82-23e79d91a3ae.jpg |
|-----------------------------------------|

[2024-12-10 10:40:15 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 35
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-10 10:40:15 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 10:40:15 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. select pic
        from feed_pic
        where feed_id = 34
 {executed in 0 msec}
[2024-12-10 10:40:15 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|da3fd470-513f-4cfe-9688-e50c0201cccf.jpg |
|-----------------------------------------|

[2024-12-10 10:40:15 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 34
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:40:15 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 10:40:15 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. select pic
        from feed_pic
        where feed_id = 31
 {executed in 0 msec}
[2024-12-10 10:40:15 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ba4e898f-67e9-43fa-85dd-a576f142c147.jpg |
|-----------------------------------------|

[2024-12-10 10:40:15 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 31
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:40:15 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 10:40:15 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. select pic
        from feed_pic
        where feed_id = 27
 {executed in 1 msec}
[2024-12-10 10:40:15 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5a0d637a-00c7-441f-a9fa-c0dc68af2602.jpg |
|-----------------------------------------|

[2024-12-10 10:40:15 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 27
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:40:15 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|1       |41              |5       |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |
|1       |40              |4       |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |
|1       |37              |3       |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |
|1       |36              |2       |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-10 10:40:15 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. select pic
        from feed_pic
        where feed_id = 26
 {executed in 1 msec}
[2024-12-10 10:40:15 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3e5fe979-fe9c-4ed6-9ad7-c1dbf4f2538f.jpg |
|-----------------------------------------|

[2024-12-10 10:40:15 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 26
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:40:15 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|1       |9               |s       |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |
|5       |8               |123     |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-10 10:40:15 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. select pic
        from feed_pic
        where feed_id = 24
 {executed in 0 msec}
[2024-12-10 10:40:15 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|dfe6f2c1-3753-4a6a-aff4-0de7fa2786b8.jpg |
|-----------------------------------------|

[2024-12-10 10:40:15 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 24
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:40:15 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 10:40:15 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. select pic
        from feed_pic
        where feed_id = 23
 {executed in 0 msec}
[2024-12-10 10:40:15 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f3e6375d-35d8-4a4a-a976-26ca5c6abaac.jpg |
|-----------------------------------------|

[2024-12-10 10:40:15 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 23
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-10 10:40:15 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 10:40:15 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. select pic
        from feed_pic
        where feed_id = 22
 {executed in 0 msec}
[2024-12-10 10:40:15 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e97360ca-fe79-48c3-acaa-cd71042a0a78.tif |
|-----------------------------------------|

[2024-12-10 10:40:15 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 22
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:40:15 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 10:40:15 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. select pic
        from feed_pic
        where feed_id = 14
 {executed in 0 msec}
[2024-12-10 10:40:15 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a3709fe6-3e0d-4f04-8cef-1cc328c4fc0c.jpg |
|ada457b9-68aa-4a78-b0c8-c5035af844e2.jpg |
|-----------------------------------------|

[2024-12-10 10:40:15 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 14
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-10 10:40:15 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 10:40:15 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. select pic
        from feed_pic
        where feed_id = 13
 {executed in 0 msec}
[2024-12-10 10:40:15 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6fe5de58-57ef-47e7-80c7-49c0506ca143.jpg |
|920ca8e8-5dc2-4844-aa7f-d7782e94d380.jpg |
|-----------------------------------------|

[2024-12-10 10:40:15 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 13
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-10 10:40:15 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 10:40:15 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. select pic
        from feed_pic
        where feed_id = 12
 {executed in 0 msec}
[2024-12-10 10:40:15 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|84e77be4-2b62-4f40-8f8b-0803e1080449.jpg |
|84f31709-40aa-40eb-a7e7-da0219067927.jpg |
|-----------------------------------------|

[2024-12-10 10:40:15 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 12
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:40:15 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 10:40:15 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. select pic
        from feed_pic
        where feed_id = 11
 {executed in 0 msec}
[2024-12-10 10:40:15 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3fc51a83-46ea-43ca-a85b-6fad4794a2bd.jpg |
|49906eb9-a412-4428-a629-baccbe152c75.jpg |
|-----------------------------------------|

[2024-12-10 10:40:15 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 11
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:40:15 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 10:40:15 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. select pic
        from feed_pic
        where feed_id = 9
 {executed in 0 msec}
[2024-12-10 10:40:15 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|34669219-c5d3-4d84-a277-fd8c2b8bca4f.jpg |
|f1ed44ba-1254-4232-9a0d-65037abe1e9c.jpg |
|-----------------------------------------|

[2024-12-10 10:40:15 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 9
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:40:15 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 10:40:15 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. select pic
        from feed_pic
        where feed_id = 7
 {executed in 0 msec}
[2024-12-10 10:40:15 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|14ecfa41-07fc-40d0-b50b-3fe95a840992.jpg |
|2694c9a6-a7b3-4800-ac73-0c853e16a152.jpg |
|-----------------------------------------|

[2024-12-10 10:40:15 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 7
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:40:15 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 10:40:15 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. select pic
        from feed_pic
        where feed_id = 6
 {executed in 0 msec}
[2024-12-10 10:40:15 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3c31d519-96b0-49bd-8657-d1eac4fb3fc1.jpg |
|-----------------------------------------|

[2024-12-10 10:40:15 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 6
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:40:15 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 10:40:18 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE B, C, D
        FROM feed A
        LEFT JOIN feed_like B
        ON A.feed_id = B.feed_id
        LEFT JOIN feed_comment C
        ON A.feed_id = C.feed_id
        LEFT JOIN feed_pic D
        ON A.feed_id = D.feed_id
        WHERE A.feed_id = 36
        AND A.writer_user_id = 1
 {executed in 1 msec}
[2024-12-10 10:40:18 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM feed
        WHERE feed_id = 36
        AND writer_user_id = 1
 {executed in 0 msec}
[2024-12-10 10:40:26 INFO http-nio-8080-exec-7] [com.green.greengram.feed.FeedController] feedC postFeed p: FeedPostReq(contents=112344, location=12344, writerUserId=1, feedId=0)
[2024-12-10 10:40:26 INFO http-nio-8080-exec-7] [com.green.greengram.feed.FeedService] service FeedPostReq(contents=112344, location=12344, writerUserId=1, feedId=0)
[2024-12-10 10:40:26 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. insert into feed
        set writer_user_id = 1,
            contents = '112344',
            location = '12344'
 {executed in 0 msec}
[2024-12-10 10:40:26 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
2. getGeneratedKeys on query: insert into feed
        set writer_user_id = 1,
            contents = '112344',
            location = '12344'
 {executed in 0 msec}
[2024-12-10 10:40:26 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|37        |
|----------|

[2024-12-10 10:40:26 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. insert into feed_pic
        (feed_id, pic)
        values
         (  
            37 ,'ea67e6e6-971c-456b-8677-8819b3a481a3.jpg'
         )
 {executed in 0 msec}
[2024-12-10 10:40:29 INFO http-nio-8080-exec-6] [com.green.greengram.feed.model.FeedGetReq] FeedGetReq 1,null,1
[2024-12-10 10:40:29 INFO http-nio-8080-exec-6] [com.green.greengram.feed.FeedController] feedC getFeedList p: FeedGetReq(super=Paging(page=1, size=20, sIdx=0), signedUserId=1, profileUserId=null, likeFeed=false)
[2024-12-10 10:40:29 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, writer_user_id AS writerUserId,
        if(nick_name IS NULL , uid, nick_name) AS writerNm,
        pic AS writerPic, contents, location, a.created_at AS createdAt,
        if(c.feed_id IS NULL ,0 , 1) AS isLike
        FROM feed A
        JOIN user B
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c
        ON a.feed_id = c.feed_id
        AND c.user_id = 1

        ORDER BY a.feed_id DESC
        LIMIT 0,20
 {executed in 0 msec}
[2024-12-10 10:40:29 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|feed_id |writer_user_id |writernm |pic                                      |contents     |location |created_at          |islike |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|37      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |112344       |12344    |2024-12-10 10:40:26 |0      |
|35      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |15131        |1532     |2024-12-10 09:50:44 |0      |
|34      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |??           |머말하는거냐   |2024-12-10 09:49:18 |0      |
|33      |9              |머        |null                                     |D            |D        |2024-12-06 13:04:38 |1      |
|31      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |???          |사진어디감    |2024-12-06 12:38:20 |0      |
|27      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |I am panguin |남극       |2024-11-29 17:07:59 |0      |
|26      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |I am panguin |남극       |2024-11-29 16:46:01 |1      |
|25      |5              |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |4123         |213      |2024-11-29 16:32:31 |0      |
|24      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |31231        |123      |2024-11-29 16:01:53 |0      |
|23      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |4754         |444      |2024-11-29 16:00:03 |0      |
|22      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |aaa          |aa       |2024-11-29 15:58:25 |0      |
|14      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |null         |null     |2024-11-29 10:51:21 |1      |
|13      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |null         |null     |2024-11-29 10:51:14 |1      |
|12      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |null         |null     |2024-11-29 10:42:17 |1      |
|11      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |123          |33123    |2024-11-29 10:42:01 |0      |
|9       |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |21123        |3        |2024-11-29 10:37:22 |0      |
|7       |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |null         |null     |2024-11-28 17:20:59 |1      |
|6       |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |             |         |2024-11-28 17:15:01 |0      |
|5       |4              |33       |9a566777-52ff-49d4-8e16-3a4b7024c8bd.jpg |z            |;;       |2024-12-09 09:45:50 |1      |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|

[2024-12-10 10:40:29 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 37
 {executed in 0 msec}
[2024-12-10 10:40:29 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ea67e6e6-971c-456b-8677-8819b3a481a3.jpg |
|-----------------------------------------|

[2024-12-10 10:40:29 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 37
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-10 10:40:29 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 10:40:29 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 35
 {executed in 0 msec}
[2024-12-10 10:40:29 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|38e0ee97-73ae-4b4a-8f82-23e79d91a3ae.jpg |
|-----------------------------------------|

[2024-12-10 10:40:29 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 35
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-10 10:40:29 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 10:40:29 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 34
 {executed in 0 msec}
[2024-12-10 10:40:29 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|da3fd470-513f-4cfe-9688-e50c0201cccf.jpg |
|-----------------------------------------|

[2024-12-10 10:40:29 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 34
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:40:29 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 10:40:29 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 33
 {executed in 1 msec}
[2024-12-10 10:40:29 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|690fa432-d879-4a2e-b395-60f2ca27eb1f.jpg |
|-----------------------------------------|

[2024-12-10 10:40:29 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 33
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:40:29 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 10:40:29 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 31
 {executed in 0 msec}
[2024-12-10 10:40:29 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ba4e898f-67e9-43fa-85dd-a576f142c147.jpg |
|-----------------------------------------|

[2024-12-10 10:40:29 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 31
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:40:29 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 10:40:29 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 27
 {executed in 0 msec}
[2024-12-10 10:40:29 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5a0d637a-00c7-441f-a9fa-c0dc68af2602.jpg |
|-----------------------------------------|

[2024-12-10 10:40:29 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 27
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-10 10:40:29 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|1       |41              |5       |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |
|1       |40              |4       |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |
|1       |37              |3       |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |
|1       |36              |2       |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-10 10:40:29 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 26
 {executed in 0 msec}
[2024-12-10 10:40:29 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3e5fe979-fe9c-4ed6-9ad7-c1dbf4f2538f.jpg |
|-----------------------------------------|

[2024-12-10 10:40:29 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 26
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:40:29 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|1       |9               |s       |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |
|5       |8               |123     |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-10 10:40:29 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 25
 {executed in 0 msec}
[2024-12-10 10:40:29 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|8213634a-99df-42d8-963e-87bc120cc8a7.jpg |
|-----------------------------------------|

[2024-12-10 10:40:29 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 25
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:40:29 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 10:40:29 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 24
 {executed in 1 msec}
[2024-12-10 10:40:29 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|dfe6f2c1-3753-4a6a-aff4-0de7fa2786b8.jpg |
|-----------------------------------------|

[2024-12-10 10:40:29 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 24
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:40:29 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 10:40:29 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 23
 {executed in 0 msec}
[2024-12-10 10:40:29 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f3e6375d-35d8-4a4a-a976-26ca5c6abaac.jpg |
|-----------------------------------------|

[2024-12-10 10:40:29 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 23
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:40:29 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 10:40:29 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 22
 {executed in 0 msec}
[2024-12-10 10:40:29 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e97360ca-fe79-48c3-acaa-cd71042a0a78.tif |
|-----------------------------------------|

[2024-12-10 10:40:29 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 22
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:40:29 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 10:40:29 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 14
 {executed in 0 msec}
[2024-12-10 10:40:29 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a3709fe6-3e0d-4f04-8cef-1cc328c4fc0c.jpg |
|ada457b9-68aa-4a78-b0c8-c5035af844e2.jpg |
|-----------------------------------------|

[2024-12-10 10:40:29 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 14
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:40:29 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 10:40:29 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 13
 {executed in 0 msec}
[2024-12-10 10:40:29 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6fe5de58-57ef-47e7-80c7-49c0506ca143.jpg |
|920ca8e8-5dc2-4844-aa7f-d7782e94d380.jpg |
|-----------------------------------------|

[2024-12-10 10:40:29 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 13
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:40:29 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 10:40:29 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 12
 {executed in 1 msec}
[2024-12-10 10:40:29 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|84e77be4-2b62-4f40-8f8b-0803e1080449.jpg |
|84f31709-40aa-40eb-a7e7-da0219067927.jpg |
|-----------------------------------------|

[2024-12-10 10:40:29 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 12
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:40:29 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 10:40:29 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 11
 {executed in 0 msec}
[2024-12-10 10:40:29 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3fc51a83-46ea-43ca-a85b-6fad4794a2bd.jpg |
|49906eb9-a412-4428-a629-baccbe152c75.jpg |
|-----------------------------------------|

[2024-12-10 10:40:29 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 11
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:40:29 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 10:40:29 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 9
 {executed in 0 msec}
[2024-12-10 10:40:29 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|34669219-c5d3-4d84-a277-fd8c2b8bca4f.jpg |
|f1ed44ba-1254-4232-9a0d-65037abe1e9c.jpg |
|-----------------------------------------|

[2024-12-10 10:40:29 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 9
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:40:29 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 10:40:29 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 7
 {executed in 0 msec}
[2024-12-10 10:40:29 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|14ecfa41-07fc-40d0-b50b-3fe95a840992.jpg |
|2694c9a6-a7b3-4800-ac73-0c853e16a152.jpg |
|-----------------------------------------|

[2024-12-10 10:40:29 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 7
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:40:29 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 10:40:29 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 6
 {executed in 1 msec}
[2024-12-10 10:40:29 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3c31d519-96b0-49bd-8657-d1eac4fb3fc1.jpg |
|-----------------------------------------|

[2024-12-10 10:40:29 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 6
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:40:29 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 10:40:29 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 5
 {executed in 0 msec}
[2024-12-10 10:40:29 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-10 10:40:29 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 5
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:40:29 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 10:43:17 INFO http-nio-8080-exec-2] [com.green.greengram.user.UserController] userController > getUserInfo > p :UserInfoGetReq(signedUserId=1, profileUserId=1)
[2024-12-10 10:43:17 INFO http-nio-8080-exec-7] [com.green.greengram.feed.model.FeedGetReq] FeedGetReq 1,null,1
[2024-12-10 10:43:17 INFO http-nio-8080-exec-7] [com.green.greengram.feed.FeedController] feedC getFeedList p: FeedGetReq(super=Paging(page=1, size=20, sIdx=0), signedUserId=1, profileUserId=1, likeFeed=false)
[2024-12-10 10:43:17 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.user_id as userId, A.pic, A.created_at AS createdAt
        , IF(nick_name IS NULL, uid, nick_name) AS nickName
        , COUNT(DISTINCT B.from_user_id, B.to_user_id) AS `follower`
        , COUNT(DISTINCT C.from_user_id, C.to_user_id) AS `following`
        , IFNULL(D.feedCnt, 0) AS feedCount
        , IFNULL(D.likeCnt, 0) AS myFeedLikeCount
        , SUM(DISTINCT if(B.from_user_id = 1, 1, 0))
        + SUM(DISTINCT if(C.to_user_id = 1, 2, 0)) AS followState
        FROM user A
        LEFT JOIN (
        SELECT H.writer_user_id
        , COUNT(DISTINCT H.feed_id) AS feedCnt
        , COUNT(I.user_id) AS likeCnt
        FROM feed H
        LEFT JOIN feed_like I
        ON H.feed_id = I.feed_id
        WHERE H.writer_user_id = 1
        ) D
        ON A.user_id = D.writer_user_id
        LEFT JOIN user_follow B
        ON A.user_id = B.to_user_id
        LEFT JOIN user_follow C
        ON A.user_id = C.from_user_id
        WHERE A.user_id = 1
 {executed in 1 msec}
[2024-12-10 10:43:17 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_id AS feedId, writer_user_id AS writerUserId,
        if(nick_name IS NULL , uid, nick_name) AS writerNm,
        pic AS writerPic, contents, location, a.created_at AS createdAt,
        if(c.feed_id IS NULL ,0 , 1) AS isLike
        FROM feed A
        JOIN user B
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c
        ON a.feed_id = c.feed_id
        AND c.user_id = 1

                    where b.user_id = 1

        ORDER BY a.feed_id DESC
        LIMIT 0,20
 {executed in 1 msec}
[2024-12-10 10:43:17 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|user_id |pic                                      |created_at          |nickname |follower |following |feedcount |myfeedlikecount |followstate |
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|1       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |2024-11-28 12:39:42 |33       |1        |3         |16        |9               |0           |
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|

[2024-12-10 10:43:17 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|feed_id |writer_user_id |writernm |pic                                      |contents     |location |created_at          |islike |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|37      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |112344       |12344    |2024-12-10 10:40:26 |0      |
|35      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |15131        |1532     |2024-12-10 09:50:44 |0      |
|34      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |??           |머말하는거냐   |2024-12-10 09:49:18 |0      |
|31      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |???          |사진어디감    |2024-12-06 12:38:20 |0      |
|27      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |I am panguin |남극       |2024-11-29 17:07:59 |0      |
|26      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |I am panguin |남극       |2024-11-29 16:46:01 |1      |
|24      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |31231        |123      |2024-11-29 16:01:53 |0      |
|23      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |4754         |444      |2024-11-29 16:00:03 |0      |
|22      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |aaa          |aa       |2024-11-29 15:58:25 |0      |
|14      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |null         |null     |2024-11-29 10:51:21 |1      |
|13      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |null         |null     |2024-11-29 10:51:14 |1      |
|12      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |null         |null     |2024-11-29 10:42:17 |1      |
|11      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |123          |33123    |2024-11-29 10:42:01 |0      |
|9       |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |21123        |3        |2024-11-29 10:37:22 |0      |
|7       |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |null         |null     |2024-11-28 17:20:59 |1      |
|6       |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |             |         |2024-11-28 17:15:01 |0      |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|

[2024-12-10 10:43:17 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. select pic
        from feed_pic
        where feed_id = 37
 {executed in 0 msec}
[2024-12-10 10:43:17 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ea67e6e6-971c-456b-8677-8819b3a481a3.jpg |
|-----------------------------------------|

[2024-12-10 10:43:17 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 37
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:43:17 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 10:43:17 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. select pic
        from feed_pic
        where feed_id = 35
 {executed in 1 msec}
[2024-12-10 10:43:17 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|38e0ee97-73ae-4b4a-8f82-23e79d91a3ae.jpg |
|-----------------------------------------|

[2024-12-10 10:43:17 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 35
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:43:17 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 10:43:17 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. select pic
        from feed_pic
        where feed_id = 34
 {executed in 0 msec}
[2024-12-10 10:43:17 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|da3fd470-513f-4cfe-9688-e50c0201cccf.jpg |
|-----------------------------------------|

[2024-12-10 10:43:17 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 34
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:43:17 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 10:43:17 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. select pic
        from feed_pic
        where feed_id = 31
 {executed in 0 msec}
[2024-12-10 10:43:17 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ba4e898f-67e9-43fa-85dd-a576f142c147.jpg |
|-----------------------------------------|

[2024-12-10 10:43:17 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 31
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:43:17 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 10:43:17 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. select pic
        from feed_pic
        where feed_id = 27
 {executed in 0 msec}
[2024-12-10 10:43:17 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5a0d637a-00c7-441f-a9fa-c0dc68af2602.jpg |
|-----------------------------------------|

[2024-12-10 10:43:17 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 27
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:43:17 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|1       |41              |5       |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |
|1       |40              |4       |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |
|1       |37              |3       |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |
|1       |36              |2       |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-10 10:43:17 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. select pic
        from feed_pic
        where feed_id = 26
 {executed in 0 msec}
[2024-12-10 10:43:17 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3e5fe979-fe9c-4ed6-9ad7-c1dbf4f2538f.jpg |
|-----------------------------------------|

[2024-12-10 10:43:17 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 26
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:43:17 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|1       |9               |s       |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |
|5       |8               |123     |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-10 10:43:17 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. select pic
        from feed_pic
        where feed_id = 24
 {executed in 0 msec}
[2024-12-10 10:43:17 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|dfe6f2c1-3753-4a6a-aff4-0de7fa2786b8.jpg |
|-----------------------------------------|

[2024-12-10 10:43:17 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 24
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:43:17 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 10:43:17 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. select pic
        from feed_pic
        where feed_id = 23
 {executed in 0 msec}
[2024-12-10 10:43:17 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f3e6375d-35d8-4a4a-a976-26ca5c6abaac.jpg |
|-----------------------------------------|

[2024-12-10 10:43:17 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 23
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:43:17 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 10:43:17 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. select pic
        from feed_pic
        where feed_id = 22
 {executed in 0 msec}
[2024-12-10 10:43:17 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e97360ca-fe79-48c3-acaa-cd71042a0a78.tif |
|-----------------------------------------|

[2024-12-10 10:43:17 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 22
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:43:17 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 10:43:17 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. select pic
        from feed_pic
        where feed_id = 14
 {executed in 0 msec}
[2024-12-10 10:43:17 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a3709fe6-3e0d-4f04-8cef-1cc328c4fc0c.jpg |
|ada457b9-68aa-4a78-b0c8-c5035af844e2.jpg |
|-----------------------------------------|

[2024-12-10 10:43:17 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 14
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:43:17 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 10:43:17 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. select pic
        from feed_pic
        where feed_id = 13
 {executed in 0 msec}
[2024-12-10 10:43:17 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6fe5de58-57ef-47e7-80c7-49c0506ca143.jpg |
|920ca8e8-5dc2-4844-aa7f-d7782e94d380.jpg |
|-----------------------------------------|

[2024-12-10 10:43:17 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 13
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:43:17 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 10:43:17 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. select pic
        from feed_pic
        where feed_id = 12
 {executed in 0 msec}
[2024-12-10 10:43:17 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|84e77be4-2b62-4f40-8f8b-0803e1080449.jpg |
|84f31709-40aa-40eb-a7e7-da0219067927.jpg |
|-----------------------------------------|

[2024-12-10 10:43:17 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 12
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-10 10:43:17 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 10:43:17 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. select pic
        from feed_pic
        where feed_id = 11
 {executed in 0 msec}
[2024-12-10 10:43:17 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3fc51a83-46ea-43ca-a85b-6fad4794a2bd.jpg |
|49906eb9-a412-4428-a629-baccbe152c75.jpg |
|-----------------------------------------|

[2024-12-10 10:43:17 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 11
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:43:17 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 10:43:17 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. select pic
        from feed_pic
        where feed_id = 9
 {executed in 0 msec}
[2024-12-10 10:43:17 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|34669219-c5d3-4d84-a277-fd8c2b8bca4f.jpg |
|f1ed44ba-1254-4232-9a0d-65037abe1e9c.jpg |
|-----------------------------------------|

[2024-12-10 10:43:17 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 9
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:43:17 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 10:43:17 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. select pic
        from feed_pic
        where feed_id = 7
 {executed in 0 msec}
[2024-12-10 10:43:17 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|14ecfa41-07fc-40d0-b50b-3fe95a840992.jpg |
|2694c9a6-a7b3-4800-ac73-0c853e16a152.jpg |
|-----------------------------------------|

[2024-12-10 10:43:17 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 7
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:43:17 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 10:43:17 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. select pic
        from feed_pic
        where feed_id = 6
 {executed in 0 msec}
[2024-12-10 10:43:17 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3c31d519-96b0-49bd-8657-d1eac4fb3fc1.jpg |
|-----------------------------------------|

[2024-12-10 10:43:17 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 6
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:43:17 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 10:43:23 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE B, C, D
        FROM feed A
        LEFT JOIN feed_like B
        ON A.feed_id = B.feed_id
        LEFT JOIN feed_comment C
        ON A.feed_id = C.feed_id
        LEFT JOIN feed_pic D
        ON A.feed_id = D.feed_id
        WHERE A.feed_id = 37
        AND A.writer_user_id = 1
 {executed in 0 msec}
[2024-12-10 10:43:23 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM feed
        WHERE feed_id = 37
        AND writer_user_id = 1
 {executed in 0 msec}
[2024-12-10 10:44:13 INFO http-nio-8080-exec-6] [com.green.greengram.user.UserController] userController > pathUserPic > p : UserPicPatchReq(signedUserId=1, pic=null, picName=null)
[2024-12-10 10:44:13 ERRORhttp-nio-8080-exec-6] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.NullPointerException: Cannot invoke "org.springframework.web.multipart.MultipartFile.transferTo(java.io.File)" because "mf" is null] with root cause
java.lang.NullPointerException: Cannot invoke "org.springframework.web.multipart.MultipartFile.transferTo(java.io.File)" because "mf" is null
	at com.green.greengram.common.MyFileUtils.transferTo(MyFileUtils.java:66)
	at com.green.greengram.user.UserService.patchUserPic(UserService.java:104)
	at com.green.greengram.user.UserController.patchUserPic(UserController.java:61)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:888)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-10 10:45:26 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-10 10:45:26 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-10 10:45:28 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.13 with PID 11340 (D:\Students\jang jin seong\GreenGramVer3\build\classes\java\main started by Administrator in D:\Students\jang jin seong\GreenGramVer3)
[2024-12-10 10:45:28 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-10 10:45:28 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-10 10:45:28 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-10 10:45:29 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-10 10:45:29 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-10 10:45:29 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-10 10:45:29 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-10 10:45:29 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-10 10:45:29 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 939 ms
[2024-12-10 10:45:29 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MFU 생성자: D:\Students\jang jin seong\download\greengram_ver3
[2024-12-10 10:45:29 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-10 10:45:29 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-10 10:45:29 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-10 10:45:29 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-10 10:45:29 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Started GreenGramVer3Application in 1.834 seconds (process running for 2.235)
[2024-12-10 10:45:30 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-10 10:45:30 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-10 10:45:30 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-10 10:45:31 INFO http-nio-8080-exec-6] [com.green.greengram.feed.model.FeedGetReq] FeedGetReq 1,null,1
[2024-12-10 10:45:31 INFO http-nio-8080-exec-6] [com.green.greengram.feed.FeedController] feedC getFeedList p: FeedGetReq(super=Paging(page=1, size=20, sIdx=0), signedUserId=1, profileUserId=null, likeFeed=false)
[2024-12-10 10:45:31 INFO http-nio-8080-exec-6] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-10 10:45:31 INFO http-nio-8080-exec-6] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@57515d67
[2024-12-10 10:45:31 INFO http-nio-8080-exec-6] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-10 10:45:31 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, writer_user_id AS writerUserId,
        if(nick_name IS NULL , uid, nick_name) AS writerNm,
        pic AS writerPic, contents, location, a.created_at AS createdAt,
        if(c.feed_id IS NULL ,0 , 1) AS isLike
        FROM feed A
        JOIN user B
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c
        ON a.feed_id = c.feed_id
        AND c.user_id = 1

        ORDER BY a.feed_id DESC
        LIMIT 0,20
 {executed in 1 msec}
[2024-12-10 10:45:31 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|feed_id |writer_user_id |writernm |pic                                      |contents     |location |created_at          |islike |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|35      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |15131        |1532     |2024-12-10 09:50:44 |0      |
|34      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |??           |머말하는거냐   |2024-12-10 09:49:18 |0      |
|33      |9              |머        |null                                     |D            |D        |2024-12-06 13:04:38 |1      |
|31      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |???          |사진어디감    |2024-12-06 12:38:20 |0      |
|27      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |I am panguin |남극       |2024-11-29 17:07:59 |0      |
|26      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |I am panguin |남극       |2024-11-29 16:46:01 |1      |
|25      |5              |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |4123         |213      |2024-11-29 16:32:31 |0      |
|24      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |31231        |123      |2024-11-29 16:01:53 |0      |
|23      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |4754         |444      |2024-11-29 16:00:03 |0      |
|22      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |aaa          |aa       |2024-11-29 15:58:25 |0      |
|14      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |null         |null     |2024-11-29 10:51:21 |1      |
|13      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |null         |null     |2024-11-29 10:51:14 |1      |
|12      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |null         |null     |2024-11-29 10:42:17 |1      |
|11      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |123          |33123    |2024-11-29 10:42:01 |0      |
|9       |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |21123        |3        |2024-11-29 10:37:22 |0      |
|7       |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |null         |null     |2024-11-28 17:20:59 |1      |
|6       |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |             |         |2024-11-28 17:15:01 |0      |
|5       |4              |33       |9a566777-52ff-49d4-8e16-3a4b7024c8bd.jpg |z            |;;       |2024-12-09 09:45:50 |1      |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|

[2024-12-10 10:45:31 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 35
 {executed in 0 msec}
[2024-12-10 10:45:31 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|38e0ee97-73ae-4b4a-8f82-23e79d91a3ae.jpg |
|-----------------------------------------|

[2024-12-10 10:45:31 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 35
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:45:31 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 10:45:31 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 34
 {executed in 0 msec}
[2024-12-10 10:45:31 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|da3fd470-513f-4cfe-9688-e50c0201cccf.jpg |
|-----------------------------------------|

[2024-12-10 10:45:31 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 34
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:45:31 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 10:45:31 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 33
 {executed in 1 msec}
[2024-12-10 10:45:31 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|690fa432-d879-4a2e-b395-60f2ca27eb1f.jpg |
|-----------------------------------------|

[2024-12-10 10:45:31 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 33
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:45:31 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 10:45:31 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 31
 {executed in 0 msec}
[2024-12-10 10:45:31 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ba4e898f-67e9-43fa-85dd-a576f142c147.jpg |
|-----------------------------------------|

[2024-12-10 10:45:31 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 31
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:45:31 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 10:45:31 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 27
 {executed in 0 msec}
[2024-12-10 10:45:31 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5a0d637a-00c7-441f-a9fa-c0dc68af2602.jpg |
|-----------------------------------------|

[2024-12-10 10:45:31 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 27
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:45:31 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|1       |41              |5       |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |
|1       |40              |4       |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |
|1       |37              |3       |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |
|1       |36              |2       |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-10 10:45:31 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 26
 {executed in 0 msec}
[2024-12-10 10:45:31 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3e5fe979-fe9c-4ed6-9ad7-c1dbf4f2538f.jpg |
|-----------------------------------------|

[2024-12-10 10:45:31 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 26
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-10 10:45:31 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|1       |9               |s       |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |
|5       |8               |123     |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-10 10:45:31 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 25
 {executed in 0 msec}
[2024-12-10 10:45:31 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|8213634a-99df-42d8-963e-87bc120cc8a7.jpg |
|-----------------------------------------|

[2024-12-10 10:45:31 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 25
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:45:31 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 10:45:31 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 24
 {executed in 0 msec}
[2024-12-10 10:45:31 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|dfe6f2c1-3753-4a6a-aff4-0de7fa2786b8.jpg |
|-----------------------------------------|

[2024-12-10 10:45:31 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 24
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:45:31 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 10:45:31 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 23
 {executed in 0 msec}
[2024-12-10 10:45:31 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f3e6375d-35d8-4a4a-a976-26ca5c6abaac.jpg |
|-----------------------------------------|

[2024-12-10 10:45:31 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 23
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:45:31 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 10:45:31 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 22
 {executed in 1 msec}
[2024-12-10 10:45:31 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e97360ca-fe79-48c3-acaa-cd71042a0a78.tif |
|-----------------------------------------|

[2024-12-10 10:45:31 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 22
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:45:31 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 10:45:31 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 14
 {executed in 1 msec}
[2024-12-10 10:45:31 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a3709fe6-3e0d-4f04-8cef-1cc328c4fc0c.jpg |
|ada457b9-68aa-4a78-b0c8-c5035af844e2.jpg |
|-----------------------------------------|

[2024-12-10 10:45:31 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 14
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:45:31 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 10:45:31 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 13
 {executed in 1 msec}
[2024-12-10 10:45:31 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6fe5de58-57ef-47e7-80c7-49c0506ca143.jpg |
|920ca8e8-5dc2-4844-aa7f-d7782e94d380.jpg |
|-----------------------------------------|

[2024-12-10 10:45:31 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 13
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:45:31 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 10:45:31 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 12
 {executed in 0 msec}
[2024-12-10 10:45:31 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|84e77be4-2b62-4f40-8f8b-0803e1080449.jpg |
|84f31709-40aa-40eb-a7e7-da0219067927.jpg |
|-----------------------------------------|

[2024-12-10 10:45:31 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 12
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:45:31 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 10:45:31 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 11
 {executed in 0 msec}
[2024-12-10 10:45:31 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3fc51a83-46ea-43ca-a85b-6fad4794a2bd.jpg |
|49906eb9-a412-4428-a629-baccbe152c75.jpg |
|-----------------------------------------|

[2024-12-10 10:45:31 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 11
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:45:31 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 10:45:31 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 9
 {executed in 0 msec}
[2024-12-10 10:45:31 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|34669219-c5d3-4d84-a277-fd8c2b8bca4f.jpg |
|f1ed44ba-1254-4232-9a0d-65037abe1e9c.jpg |
|-----------------------------------------|

[2024-12-10 10:45:31 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 9
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:45:31 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 10:45:31 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 7
 {executed in 0 msec}
[2024-12-10 10:45:31 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|14ecfa41-07fc-40d0-b50b-3fe95a840992.jpg |
|2694c9a6-a7b3-4800-ac73-0c853e16a152.jpg |
|-----------------------------------------|

[2024-12-10 10:45:31 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 7
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:45:31 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 10:45:31 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 6
 {executed in 0 msec}
[2024-12-10 10:45:31 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3c31d519-96b0-49bd-8657-d1eac4fb3fc1.jpg |
|-----------------------------------------|

[2024-12-10 10:45:31 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 6
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:45:31 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 10:45:31 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 5
 {executed in 0 msec}
[2024-12-10 10:45:31 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-10 10:45:31 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 5
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:45:31 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 10:45:34 INFO http-nio-8080-exec-2] [com.green.greengram.feed.model.FeedGetReq] FeedGetReq 1,null,1
[2024-12-10 10:45:34 INFO http-nio-8080-exec-2] [com.green.greengram.feed.FeedController] feedC getFeedList p: FeedGetReq(super=Paging(page=1, size=20, sIdx=0), signedUserId=1, profileUserId=1, likeFeed=false)
[2024-12-10 10:45:34 INFO http-nio-8080-exec-3] [com.green.greengram.user.UserController] userController > getUserInfo > p :UserInfoGetReq(signedUserId=1, profileUserId=1)
[2024-12-10 10:45:34 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, writer_user_id AS writerUserId,
        if(nick_name IS NULL , uid, nick_name) AS writerNm,
        pic AS writerPic, contents, location, a.created_at AS createdAt,
        if(c.feed_id IS NULL ,0 , 1) AS isLike
        FROM feed A
        JOIN user B
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c
        ON a.feed_id = c.feed_id
        AND c.user_id = 1

                    where b.user_id = 1

        ORDER BY a.feed_id DESC
        LIMIT 0,20
 {executed in 0 msec}
[2024-12-10 10:45:34 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.user_id as userId, A.pic, A.created_at AS createdAt
        , IF(nick_name IS NULL, uid, nick_name) AS nickName
        , COUNT(DISTINCT B.from_user_id, B.to_user_id) AS `follower`
        , COUNT(DISTINCT C.from_user_id, C.to_user_id) AS `following`
        , IFNULL(D.feedCnt, 0) AS feedCount
        , IFNULL(D.likeCnt, 0) AS myFeedLikeCount
        , SUM(DISTINCT if(B.from_user_id = 1, 1, 0))
        + SUM(DISTINCT if(C.to_user_id = 1, 2, 0)) AS followState
        FROM user A
        LEFT JOIN (
        SELECT H.writer_user_id
        , COUNT(DISTINCT H.feed_id) AS feedCnt
        , COUNT(I.user_id) AS likeCnt
        FROM feed H
        LEFT JOIN feed_like I
        ON H.feed_id = I.feed_id
        WHERE H.writer_user_id = 1
        ) D
        ON A.user_id = D.writer_user_id
        LEFT JOIN user_follow B
        ON A.user_id = B.to_user_id
        LEFT JOIN user_follow C
        ON A.user_id = C.from_user_id
        WHERE A.user_id = 1
 {executed in 1 msec}
[2024-12-10 10:45:34 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|user_id |pic                                      |created_at          |nickname |follower |following |feedcount |myfeedlikecount |followstate |
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|1       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |2024-11-28 12:39:42 |33       |1        |3         |15        |9               |0           |
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|

[2024-12-10 10:45:34 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|feed_id |writer_user_id |writernm |pic                                      |contents     |location |created_at          |islike |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|35      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |15131        |1532     |2024-12-10 09:50:44 |0      |
|34      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |??           |머말하는거냐   |2024-12-10 09:49:18 |0      |
|31      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |???          |사진어디감    |2024-12-06 12:38:20 |0      |
|27      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |I am panguin |남극       |2024-11-29 17:07:59 |0      |
|26      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |I am panguin |남극       |2024-11-29 16:46:01 |1      |
|24      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |31231        |123      |2024-11-29 16:01:53 |0      |
|23      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |4754         |444      |2024-11-29 16:00:03 |0      |
|22      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |aaa          |aa       |2024-11-29 15:58:25 |0      |
|14      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |null         |null     |2024-11-29 10:51:21 |1      |
|13      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |null         |null     |2024-11-29 10:51:14 |1      |
|12      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |null         |null     |2024-11-29 10:42:17 |1      |
|11      |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |123          |33123    |2024-11-29 10:42:01 |0      |
|9       |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |21123        |3        |2024-11-29 10:37:22 |0      |
|7       |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |null         |null     |2024-11-28 17:20:59 |1      |
|6       |1              |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |             |         |2024-11-28 17:15:01 |0      |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|

[2024-12-10 10:45:34 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 35
 {executed in 0 msec}
[2024-12-10 10:45:34 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|38e0ee97-73ae-4b4a-8f82-23e79d91a3ae.jpg |
|-----------------------------------------|

[2024-12-10 10:45:34 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 35
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-10 10:45:34 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 10:45:34 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 34
 {executed in 0 msec}
[2024-12-10 10:45:34 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|da3fd470-513f-4cfe-9688-e50c0201cccf.jpg |
|-----------------------------------------|

[2024-12-10 10:45:34 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 34
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:45:34 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 10:45:34 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 31
 {executed in 0 msec}
[2024-12-10 10:45:34 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ba4e898f-67e9-43fa-85dd-a576f142c147.jpg |
|-----------------------------------------|

[2024-12-10 10:45:34 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 31
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-10 10:45:34 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 10:45:34 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 27
 {executed in 1 msec}
[2024-12-10 10:45:34 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5a0d637a-00c7-441f-a9fa-c0dc68af2602.jpg |
|-----------------------------------------|

[2024-12-10 10:45:34 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 27
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-10 10:45:34 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|1       |41              |5       |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |
|1       |40              |4       |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |
|1       |37              |3       |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |
|1       |36              |2       |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-10 10:45:34 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 26
 {executed in 0 msec}
[2024-12-10 10:45:34 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3e5fe979-fe9c-4ed6-9ad7-c1dbf4f2538f.jpg |
|-----------------------------------------|

[2024-12-10 10:45:34 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 26
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:45:34 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|1       |9               |s       |33       |37798d83-eecc-4be8-a1fc-ea2740cb0268.jpg |
|5       |8               |123     |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-10 10:45:34 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 24
 {executed in 1 msec}
[2024-12-10 10:45:34 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|dfe6f2c1-3753-4a6a-aff4-0de7fa2786b8.jpg |
|-----------------------------------------|

[2024-12-10 10:45:34 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 24
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:45:34 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 10:45:34 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 23
 {executed in 1 msec}
[2024-12-10 10:45:34 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f3e6375d-35d8-4a4a-a976-26ca5c6abaac.jpg |
|-----------------------------------------|

[2024-12-10 10:45:34 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 23
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:45:34 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 10:45:34 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 22
 {executed in 1 msec}
[2024-12-10 10:45:34 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e97360ca-fe79-48c3-acaa-cd71042a0a78.tif |
|-----------------------------------------|

[2024-12-10 10:45:34 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 22
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:45:34 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 10:45:34 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 14
 {executed in 1 msec}
[2024-12-10 10:45:34 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a3709fe6-3e0d-4f04-8cef-1cc328c4fc0c.jpg |
|ada457b9-68aa-4a78-b0c8-c5035af844e2.jpg |
|-----------------------------------------|

[2024-12-10 10:45:34 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 14
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:45:34 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 10:45:34 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 13
 {executed in 0 msec}
[2024-12-10 10:45:34 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6fe5de58-57ef-47e7-80c7-49c0506ca143.jpg |
|920ca8e8-5dc2-4844-aa7f-d7782e94d380.jpg |
|-----------------------------------------|

[2024-12-10 10:45:34 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 13
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:45:34 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 10:45:34 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 12
 {executed in 0 msec}
[2024-12-10 10:45:34 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|84e77be4-2b62-4f40-8f8b-0803e1080449.jpg |
|84f31709-40aa-40eb-a7e7-da0219067927.jpg |
|-----------------------------------------|

[2024-12-10 10:45:34 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 12
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:45:34 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 10:45:34 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 11
 {executed in 0 msec}
[2024-12-10 10:45:34 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3fc51a83-46ea-43ca-a85b-6fad4794a2bd.jpg |
|49906eb9-a412-4428-a629-baccbe152c75.jpg |
|-----------------------------------------|

[2024-12-10 10:45:34 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 11
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:45:34 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 10:45:34 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 9
 {executed in 0 msec}
[2024-12-10 10:45:34 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|34669219-c5d3-4d84-a277-fd8c2b8bca4f.jpg |
|f1ed44ba-1254-4232-9a0d-65037abe1e9c.jpg |
|-----------------------------------------|

[2024-12-10 10:45:34 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 9
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:45:34 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 10:45:34 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 7
 {executed in 0 msec}
[2024-12-10 10:45:34 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|14ecfa41-07fc-40d0-b50b-3fe95a840992.jpg |
|2694c9a6-a7b3-4800-ac73-0c853e16a152.jpg |
|-----------------------------------------|

[2024-12-10 10:45:34 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 7
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:45:34 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 10:45:34 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 6
 {executed in 1 msec}
[2024-12-10 10:45:34 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3c31d519-96b0-49bd-8657-d1eac4fb3fc1.jpg |
|-----------------------------------------|

[2024-12-10 10:45:34 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 6
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:45:34 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 10:45:36 INFO http-nio-8080-exec-6] [com.green.greengram.user.UserController] userController > pathUserPic > p : UserPicPatchReq(signedUserId=1, pic=null, picName=null)
[2024-12-10 10:45:36 ERRORhttp-nio-8080-exec-6] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.NullPointerException: Cannot invoke "org.springframework.web.multipart.MultipartFile.transferTo(java.io.File)" because "mf" is null] with root cause
java.lang.NullPointerException: Cannot invoke "org.springframework.web.multipart.MultipartFile.transferTo(java.io.File)" because "mf" is null
	at com.green.greengram.common.MyFileUtils.transferTo(MyFileUtils.java:66)
	at com.green.greengram.user.UserService.patchUserPic(UserService.java:104)
	at com.green.greengram.user.UserController.patchUserPic(UserController.java:61)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:888)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-10 10:48:00 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-10 10:48:00 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-10 10:48:02 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.13 with PID 11348 (D:\Students\jang jin seong\GreenGramVer3\build\classes\java\main started by Administrator in D:\Students\jang jin seong\GreenGramVer3)
[2024-12-10 10:48:02 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-10 10:48:02 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-10 10:48:02 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-10 10:48:03 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-10 10:48:03 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-10 10:48:03 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-10 10:48:03 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-10 10:48:03 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-10 10:48:03 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 836 ms
[2024-12-10 10:48:03 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MFU 생성자: D:\Students\jang jin seong\download\greengram_ver3
[2024-12-10 10:48:03 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-10 10:48:03 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-10 10:48:03 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-10 10:48:03 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-10 10:48:03 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Started GreenGramVer3Application in 1.772 seconds (process running for 2.209)
[2024-12-10 10:48:05 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-10 10:48:05 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-10 10:48:05 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-10 10:48:05 INFO http-nio-8080-exec-1] [com.green.greengram.user.UserController] userController > pathUserPic > p : UserPicPatchReq(signedUserId=1, pic=null, picName=null)
[2024-12-10 10:48:05 ERRORhttp-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.NullPointerException: Cannot invoke "org.springframework.web.multipart.MultipartFile.transferTo(java.io.File)" because "mf" is null] with root cause
java.lang.NullPointerException: Cannot invoke "org.springframework.web.multipart.MultipartFile.transferTo(java.io.File)" because "mf" is null
	at com.green.greengram.common.MyFileUtils.transferTo(MyFileUtils.java:66)
	at com.green.greengram.user.UserService.patchUserPic(UserService.java:105)
	at com.green.greengram.user.UserController.patchUserPic(UserController.java:61)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:888)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-10 10:49:50 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.13 with PID 11360 (D:\Students\jang jin seong\GreenGramVer3\build\classes\java\main started by Administrator in D:\Students\jang jin seong\GreenGramVer3)
[2024-12-10 10:49:50 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-10 10:49:50 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-10 10:49:50 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-10 10:49:51 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-10 10:49:51 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-10 10:49:51 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-10 10:49:51 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-10 10:49:51 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-10 10:49:51 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 823 ms
[2024-12-10 10:49:51 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MFU 생성자: D:\Students\jang jin seong\download\greengram_ver3
[2024-12-10 10:49:51 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-10 10:49:51 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-10 10:49:51 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-10 10:49:51 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-10 10:49:51 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Started GreenGramVer3Application in 1.783 seconds (process running for 2.271)
[2024-12-10 10:49:53 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-10 10:49:53 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-10 10:49:53 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 0 ms
[2024-12-10 10:49:53 INFO http-nio-8080-exec-1] [com.green.greengram.user.UserController] userController > pathUserPic > p : UserPicPatchReq(signedUserId=1, pic=null, picName=null)
[2024-12-10 10:49:53 INFO http-nio-8080-exec-1] [com.green.greengram.user.UserService] 서비스 p 값 : UserPicPatchReq(signedUserId=1, pic=null, picName=null)
[2024-12-10 10:49:53 ERRORhttp-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.NullPointerException: Cannot invoke "org.springframework.web.multipart.MultipartFile.transferTo(java.io.File)" because "mf" is null] with root cause
java.lang.NullPointerException: Cannot invoke "org.springframework.web.multipart.MultipartFile.transferTo(java.io.File)" because "mf" is null
	at com.green.greengram.common.MyFileUtils.transferTo(MyFileUtils.java:66)
	at com.green.greengram.user.UserService.patchUserPic(UserService.java:107)
	at com.green.greengram.user.UserController.patchUserPic(UserController.java:61)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:888)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-10 10:51:23 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.13 with PID 11724 (D:\Students\jang jin seong\GreenGramVer3\build\classes\java\main started by Administrator in D:\Students\jang jin seong\GreenGramVer3)
[2024-12-10 10:51:23 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-10 10:51:23 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-10 10:51:23 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-10 10:51:24 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-10 10:51:24 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-10 10:51:24 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-10 10:51:24 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-10 10:51:24 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-10 10:51:24 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 801 ms
[2024-12-10 10:51:24 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MFU 생성자: D:\Students\jang jin seong\download\greengram_ver3
[2024-12-10 10:51:24 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-10 10:51:24 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-10 10:51:24 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-10 10:51:24 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-10 10:51:24 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Started GreenGramVer3Application in 1.797 seconds (process running for 2.236)
[2024-12-10 10:51:27 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-10 10:51:27 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-10 10:51:27 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 0 ms
[2024-12-10 10:51:27 INFO http-nio-8080-exec-1] [com.green.greengram.user.UserController] userController > pathUserPic > p : UserPicPatchReq(signedUserId=1, pic=null, picName=null)
[2024-12-10 10:51:27 INFO http-nio-8080-exec-1] [com.green.greengram.user.UserService] 서비스 p 값 : UserPicPatchReq(signedUserId=1, pic=null, picName=null)
[2024-12-10 10:51:36 INFO http-nio-8080-exec-3] [com.green.greengram.user.UserController] userController > pathUserPic > p : UserPicPatchReq(signedUserId=1, pic=org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@e1ebe3e, picName=null)
[2024-12-10 10:51:36 INFO http-nio-8080-exec-3] [com.green.greengram.user.UserService] 서비스 p 값 : UserPicPatchReq(signedUserId=1, pic=org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@e1ebe3e, picName=null)
[2024-12-10 10:51:36 INFO http-nio-8080-exec-3] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-10 10:51:36 INFO http-nio-8080-exec-3] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@646c86cd
[2024-12-10 10:51:36 INFO http-nio-8080-exec-3] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-10 10:51:36 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. update user
        set pic = 'efb8e328-12f0-486a-a8aa-01ca8c43c238.jpg'
        where user_id = 1
 {executed in 8 msec}
[2024-12-10 10:52:39 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 2 class path changes (0 additions, 0 deletions, 2 modifications)
[2024-12-10 10:52:39 INFO Thread-5] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-10 10:52:39 INFO Thread-5] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-10 10:52:39 INFO Thread-5] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-10 10:52:39 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.13 with PID 11724 (D:\Students\jang jin seong\GreenGramVer3\build\classes\java\main started by Administrator in D:\Students\jang jin seong\GreenGramVer3)
[2024-12-10 10:52:39 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-10 10:52:39 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-10 10:52:39 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-10 10:52:39 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-10 10:52:39 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-10 10:52:39 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-10 10:52:39 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 191 ms
[2024-12-10 10:52:39 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MFU 생성자: D:\Students\jang jin seong\download\greengram_ver3
[2024-12-10 10:52:39 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-10 10:52:39 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-10 10:52:39 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-10 10:52:39 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-10 10:52:39 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Started GreenGramVer3Application in 0.358 seconds (process running for 77.274)
[2024-12-10 10:52:39 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-10 13:10:49 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.13 with PID 12328 (D:\Students\jang jin seong\GreenGramVer3\build\classes\java\main started by Administrator in D:\Students\jang jin seong\GreenGramVer3)
[2024-12-10 13:10:49 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-10 13:10:49 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-10 13:10:49 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-10 13:10:50 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-10 13:10:50 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-10 13:10:50 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-10 13:10:50 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-10 13:10:50 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-10 13:10:50 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 904 ms
[2024-12-10 13:10:50 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MFU 생성자: D:\Students\jang jin seong\download\greengram_ver3
[2024-12-10 13:10:50 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-10 13:10:50 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-10 13:10:50 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-10 13:10:50 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-10 13:10:50 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Started GreenGramVer3Application in 1.808 seconds (process running for 2.192)
[2024-12-10 13:11:06 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-10 13:11:06 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-10 13:11:06 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-10 13:11:06 INFO http-nio-8080-exec-5] [com.green.greengram.feed.model.FeedGetReq] FeedGetReq 1,null,1
[2024-12-10 13:11:06 INFO http-nio-8080-exec-5] [com.green.greengram.feed.FeedController] feedC getFeedList p: FeedGetReq(super=Paging(page=1, size=20, sIdx=0), signedUserId=1, profileUserId=null, likeFeed=false)
[2024-12-10 13:11:06 INFO http-nio-8080-exec-5] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-10 13:11:06 INFO http-nio-8080-exec-5] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@14b317b1
[2024-12-10 13:11:06 INFO http-nio-8080-exec-5] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-10 13:11:06 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, writer_user_id AS writerUserId,
        if(nick_name IS NULL , uid, nick_name) AS writerNm,
        pic AS writerPic, contents, location, a.created_at AS createdAt,
        if(c.feed_id IS NULL ,0 , 1) AS isLike
        FROM feed A
        JOIN user B
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c
        ON a.feed_id = c.feed_id
        AND c.user_id = 1

        ORDER BY a.feed_id DESC
        LIMIT 0,20
 {executed in 0 msec}
[2024-12-10 13:11:06 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|feed_id |writer_user_id |writernm |pic                                      |contents     |location |created_at          |islike |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|35      |1              |33       |efb8e328-12f0-486a-a8aa-01ca8c43c238.jpg |15131        |1532     |2024-12-10 09:50:44 |0      |
|34      |1              |33       |efb8e328-12f0-486a-a8aa-01ca8c43c238.jpg |??           |머말하는거냐   |2024-12-10 09:49:18 |0      |
|33      |9              |머        |null                                     |D            |D        |2024-12-06 13:04:38 |1      |
|31      |1              |33       |efb8e328-12f0-486a-a8aa-01ca8c43c238.jpg |???          |사진어디감    |2024-12-06 12:38:20 |0      |
|27      |1              |33       |efb8e328-12f0-486a-a8aa-01ca8c43c238.jpg |I am panguin |남극       |2024-11-29 17:07:59 |0      |
|26      |1              |33       |efb8e328-12f0-486a-a8aa-01ca8c43c238.jpg |I am panguin |남극       |2024-11-29 16:46:01 |1      |
|25      |5              |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |4123         |213      |2024-11-29 16:32:31 |0      |
|24      |1              |33       |efb8e328-12f0-486a-a8aa-01ca8c43c238.jpg |31231        |123      |2024-11-29 16:01:53 |0      |
|23      |1              |33       |efb8e328-12f0-486a-a8aa-01ca8c43c238.jpg |4754         |444      |2024-11-29 16:00:03 |0      |
|22      |1              |33       |efb8e328-12f0-486a-a8aa-01ca8c43c238.jpg |aaa          |aa       |2024-11-29 15:58:25 |0      |
|14      |1              |33       |efb8e328-12f0-486a-a8aa-01ca8c43c238.jpg |null         |null     |2024-11-29 10:51:21 |1      |
|13      |1              |33       |efb8e328-12f0-486a-a8aa-01ca8c43c238.jpg |null         |null     |2024-11-29 10:51:14 |1      |
|12      |1              |33       |efb8e328-12f0-486a-a8aa-01ca8c43c238.jpg |null         |null     |2024-11-29 10:42:17 |1      |
|11      |1              |33       |efb8e328-12f0-486a-a8aa-01ca8c43c238.jpg |123          |33123    |2024-11-29 10:42:01 |0      |
|9       |1              |33       |efb8e328-12f0-486a-a8aa-01ca8c43c238.jpg |21123        |3        |2024-11-29 10:37:22 |0      |
|7       |1              |33       |efb8e328-12f0-486a-a8aa-01ca8c43c238.jpg |null         |null     |2024-11-28 17:20:59 |1      |
|6       |1              |33       |efb8e328-12f0-486a-a8aa-01ca8c43c238.jpg |             |         |2024-11-28 17:15:01 |0      |
|5       |4              |33       |9a566777-52ff-49d4-8e16-3a4b7024c8bd.jpg |z            |;;       |2024-12-09 09:45:50 |1      |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|

[2024-12-10 13:11:06 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 35
 {executed in 0 msec}
[2024-12-10 13:11:06 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|38e0ee97-73ae-4b4a-8f82-23e79d91a3ae.jpg |
|-----------------------------------------|

[2024-12-10 13:11:06 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 35
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-10 13:11:06 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 13:11:06 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 34
 {executed in 0 msec}
[2024-12-10 13:11:06 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|da3fd470-513f-4cfe-9688-e50c0201cccf.jpg |
|-----------------------------------------|

[2024-12-10 13:11:06 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 34
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 13:11:06 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 13:11:06 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 33
 {executed in 0 msec}
[2024-12-10 13:11:06 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|690fa432-d879-4a2e-b395-60f2ca27eb1f.jpg |
|-----------------------------------------|

[2024-12-10 13:11:06 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 33
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 13:11:06 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 13:11:06 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 31
 {executed in 0 msec}
[2024-12-10 13:11:06 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ba4e898f-67e9-43fa-85dd-a576f142c147.jpg |
|-----------------------------------------|

[2024-12-10 13:11:06 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 31
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 13:11:06 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 13:11:06 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 27
 {executed in 0 msec}
[2024-12-10 13:11:06 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5a0d637a-00c7-441f-a9fa-c0dc68af2602.jpg |
|-----------------------------------------|

[2024-12-10 13:11:06 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 27
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 13:11:06 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|1       |41              |5       |33       |efb8e328-12f0-486a-a8aa-01ca8c43c238.jpg |
|1       |40              |4       |33       |efb8e328-12f0-486a-a8aa-01ca8c43c238.jpg |
|1       |37              |3       |33       |efb8e328-12f0-486a-a8aa-01ca8c43c238.jpg |
|1       |36              |2       |33       |efb8e328-12f0-486a-a8aa-01ca8c43c238.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-10 13:11:06 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 26
 {executed in 0 msec}
[2024-12-10 13:11:06 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3e5fe979-fe9c-4ed6-9ad7-c1dbf4f2538f.jpg |
|-----------------------------------------|

[2024-12-10 13:11:06 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 26
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 13:11:06 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|1       |9               |s       |33       |efb8e328-12f0-486a-a8aa-01ca8c43c238.jpg |
|5       |8               |123     |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-10 13:11:06 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 25
 {executed in 1 msec}
[2024-12-10 13:11:06 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|8213634a-99df-42d8-963e-87bc120cc8a7.jpg |
|-----------------------------------------|

[2024-12-10 13:11:06 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 25
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 13:11:06 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 13:11:06 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 24
 {executed in 0 msec}
[2024-12-10 13:11:06 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|dfe6f2c1-3753-4a6a-aff4-0de7fa2786b8.jpg |
|-----------------------------------------|

[2024-12-10 13:11:06 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 24
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 13:11:06 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 13:11:06 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 23
 {executed in 0 msec}
[2024-12-10 13:11:06 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f3e6375d-35d8-4a4a-a976-26ca5c6abaac.jpg |
|-----------------------------------------|

[2024-12-10 13:11:06 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 23
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 13:11:06 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 13:11:06 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 22
 {executed in 0 msec}
[2024-12-10 13:11:06 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e97360ca-fe79-48c3-acaa-cd71042a0a78.tif |
|-----------------------------------------|

[2024-12-10 13:11:06 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 22
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 13:11:06 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 13:11:06 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 14
 {executed in 0 msec}
[2024-12-10 13:11:06 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a3709fe6-3e0d-4f04-8cef-1cc328c4fc0c.jpg |
|ada457b9-68aa-4a78-b0c8-c5035af844e2.jpg |
|-----------------------------------------|

[2024-12-10 13:11:06 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 14
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 13:11:06 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 13:11:06 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 13
 {executed in 0 msec}
[2024-12-10 13:11:06 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6fe5de58-57ef-47e7-80c7-49c0506ca143.jpg |
|920ca8e8-5dc2-4844-aa7f-d7782e94d380.jpg |
|-----------------------------------------|

[2024-12-10 13:11:06 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 13
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 13:11:06 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 13:11:06 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 12
 {executed in 0 msec}
[2024-12-10 13:11:06 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|84e77be4-2b62-4f40-8f8b-0803e1080449.jpg |
|84f31709-40aa-40eb-a7e7-da0219067927.jpg |
|-----------------------------------------|

[2024-12-10 13:11:06 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 12
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 13:11:06 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 13:11:06 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 11
 {executed in 0 msec}
[2024-12-10 13:11:06 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3fc51a83-46ea-43ca-a85b-6fad4794a2bd.jpg |
|49906eb9-a412-4428-a629-baccbe152c75.jpg |
|-----------------------------------------|

[2024-12-10 13:11:06 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 11
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 13:11:06 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 13:11:06 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 9
 {executed in 0 msec}
[2024-12-10 13:11:06 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|34669219-c5d3-4d84-a277-fd8c2b8bca4f.jpg |
|f1ed44ba-1254-4232-9a0d-65037abe1e9c.jpg |
|-----------------------------------------|

[2024-12-10 13:11:06 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 9
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 13:11:06 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 13:11:06 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 7
 {executed in 0 msec}
[2024-12-10 13:11:06 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|14ecfa41-07fc-40d0-b50b-3fe95a840992.jpg |
|2694c9a6-a7b3-4800-ac73-0c853e16a152.jpg |
|-----------------------------------------|

[2024-12-10 13:11:06 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 7
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 13:11:06 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 13:11:06 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 6
 {executed in 0 msec}
[2024-12-10 13:11:06 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3c31d519-96b0-49bd-8657-d1eac4fb3fc1.jpg |
|-----------------------------------------|

[2024-12-10 13:11:06 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 6
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 13:11:06 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 13:11:06 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 5
 {executed in 0 msec}
[2024-12-10 13:11:06 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-10 13:11:06 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 5
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 13:11:06 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 13:11:10 INFO http-nio-8080-exec-10] [com.green.greengram.feed.model.FeedGetReq] FeedGetReq 1,null,1
[2024-12-10 13:11:10 INFO http-nio-8080-exec-10] [com.green.greengram.feed.FeedController] feedC getFeedList p: FeedGetReq(super=Paging(page=1, size=20, sIdx=0), signedUserId=1, profileUserId=1, likeFeed=false)
[2024-12-10 13:11:10 INFO http-nio-8080-exec-4] [com.green.greengram.user.UserController] userController > getUserInfo > p :UserInfoGetReq(signedUserId=1, profileUserId=1)
[2024-12-10 13:11:10 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, writer_user_id AS writerUserId,
        if(nick_name IS NULL , uid, nick_name) AS writerNm,
        pic AS writerPic, contents, location, a.created_at AS createdAt,
        if(c.feed_id IS NULL ,0 , 1) AS isLike
        FROM feed A
        JOIN user B
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c
        ON a.feed_id = c.feed_id
        AND c.user_id = 1

                    where b.user_id = 1

        ORDER BY a.feed_id DESC
        LIMIT 0,20
 {executed in 1 msec}
[2024-12-10 13:11:10 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.user_id as userId, A.pic, A.created_at AS createdAt
        , IF(nick_name IS NULL, uid, nick_name) AS nickName
        , COUNT(DISTINCT B.from_user_id, B.to_user_id) AS `follower`
        , COUNT(DISTINCT C.from_user_id, C.to_user_id) AS `following`
        , IFNULL(D.feedCnt, 0) AS feedCount
        , IFNULL(D.likeCnt, 0) AS myFeedLikeCount
        , SUM(DISTINCT if(B.from_user_id = 1, 1, 0))
        + SUM(DISTINCT if(C.to_user_id = 1, 2, 0)) AS followState
        FROM user A
        LEFT JOIN (
        SELECT H.writer_user_id
        , COUNT(DISTINCT H.feed_id) AS feedCnt
        , COUNT(I.user_id) AS likeCnt
        FROM feed H
        LEFT JOIN feed_like I
        ON H.feed_id = I.feed_id
        WHERE H.writer_user_id = 1
        ) D
        ON A.user_id = D.writer_user_id
        LEFT JOIN user_follow B
        ON A.user_id = B.to_user_id
        LEFT JOIN user_follow C
        ON A.user_id = C.from_user_id
        WHERE A.user_id = 1
 {executed in 1 msec}
[2024-12-10 13:11:10 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|feed_id |writer_user_id |writernm |pic                                      |contents     |location |created_at          |islike |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|35      |1              |33       |efb8e328-12f0-486a-a8aa-01ca8c43c238.jpg |15131        |1532     |2024-12-10 09:50:44 |0      |
|34      |1              |33       |efb8e328-12f0-486a-a8aa-01ca8c43c238.jpg |??           |머말하는거냐   |2024-12-10 09:49:18 |0      |
|31      |1              |33       |efb8e328-12f0-486a-a8aa-01ca8c43c238.jpg |???          |사진어디감    |2024-12-06 12:38:20 |0      |
|27      |1              |33       |efb8e328-12f0-486a-a8aa-01ca8c43c238.jpg |I am panguin |남극       |2024-11-29 17:07:59 |0      |
|26      |1              |33       |efb8e328-12f0-486a-a8aa-01ca8c43c238.jpg |I am panguin |남극       |2024-11-29 16:46:01 |1      |
|24      |1              |33       |efb8e328-12f0-486a-a8aa-01ca8c43c238.jpg |31231        |123      |2024-11-29 16:01:53 |0      |
|23      |1              |33       |efb8e328-12f0-486a-a8aa-01ca8c43c238.jpg |4754         |444      |2024-11-29 16:00:03 |0      |
|22      |1              |33       |efb8e328-12f0-486a-a8aa-01ca8c43c238.jpg |aaa          |aa       |2024-11-29 15:58:25 |0      |
|14      |1              |33       |efb8e328-12f0-486a-a8aa-01ca8c43c238.jpg |null         |null     |2024-11-29 10:51:21 |1      |
|13      |1              |33       |efb8e328-12f0-486a-a8aa-01ca8c43c238.jpg |null         |null     |2024-11-29 10:51:14 |1      |
|12      |1              |33       |efb8e328-12f0-486a-a8aa-01ca8c43c238.jpg |null         |null     |2024-11-29 10:42:17 |1      |
|11      |1              |33       |efb8e328-12f0-486a-a8aa-01ca8c43c238.jpg |123          |33123    |2024-11-29 10:42:01 |0      |
|9       |1              |33       |efb8e328-12f0-486a-a8aa-01ca8c43c238.jpg |21123        |3        |2024-11-29 10:37:22 |0      |
|7       |1              |33       |efb8e328-12f0-486a-a8aa-01ca8c43c238.jpg |null         |null     |2024-11-28 17:20:59 |1      |
|6       |1              |33       |efb8e328-12f0-486a-a8aa-01ca8c43c238.jpg |             |         |2024-11-28 17:15:01 |0      |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|

[2024-12-10 13:11:10 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|user_id |pic                                      |created_at          |nickname |follower |following |feedcount |myfeedlikecount |followstate |
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|1       |efb8e328-12f0-486a-a8aa-01ca8c43c238.jpg |2024-11-28 12:39:42 |33       |1        |3         |15        |9               |0           |
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|

[2024-12-10 13:11:10 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 35
 {executed in 1 msec}
[2024-12-10 13:11:10 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|38e0ee97-73ae-4b4a-8f82-23e79d91a3ae.jpg |
|-----------------------------------------|

[2024-12-10 13:11:10 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 35
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-10 13:11:10 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 13:11:10 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 34
 {executed in 0 msec}
[2024-12-10 13:11:10 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|da3fd470-513f-4cfe-9688-e50c0201cccf.jpg |
|-----------------------------------------|

[2024-12-10 13:11:10 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 34
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 13:11:10 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 13:11:10 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 31
 {executed in 0 msec}
[2024-12-10 13:11:10 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ba4e898f-67e9-43fa-85dd-a576f142c147.jpg |
|-----------------------------------------|

[2024-12-10 13:11:10 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 31
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 13:11:10 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 13:11:10 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 27
 {executed in 0 msec}
[2024-12-10 13:11:10 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5a0d637a-00c7-441f-a9fa-c0dc68af2602.jpg |
|-----------------------------------------|

[2024-12-10 13:11:10 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 27
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 13:11:10 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|1       |41              |5       |33       |efb8e328-12f0-486a-a8aa-01ca8c43c238.jpg |
|1       |40              |4       |33       |efb8e328-12f0-486a-a8aa-01ca8c43c238.jpg |
|1       |37              |3       |33       |efb8e328-12f0-486a-a8aa-01ca8c43c238.jpg |
|1       |36              |2       |33       |efb8e328-12f0-486a-a8aa-01ca8c43c238.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-10 13:11:10 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 26
 {executed in 1 msec}
[2024-12-10 13:11:10 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3e5fe979-fe9c-4ed6-9ad7-c1dbf4f2538f.jpg |
|-----------------------------------------|

[2024-12-10 13:11:10 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 26
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 13:11:10 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|1       |9               |s       |33       |efb8e328-12f0-486a-a8aa-01ca8c43c238.jpg |
|5       |8               |123     |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-10 13:11:10 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 24
 {executed in 0 msec}
[2024-12-10 13:11:10 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|dfe6f2c1-3753-4a6a-aff4-0de7fa2786b8.jpg |
|-----------------------------------------|

[2024-12-10 13:11:10 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 24
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 13:11:10 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 13:11:10 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 23
 {executed in 0 msec}
[2024-12-10 13:11:10 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f3e6375d-35d8-4a4a-a976-26ca5c6abaac.jpg |
|-----------------------------------------|

[2024-12-10 13:11:10 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 23
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 13:11:10 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 13:11:10 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 22
 {executed in 0 msec}
[2024-12-10 13:11:10 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e97360ca-fe79-48c3-acaa-cd71042a0a78.tif |
|-----------------------------------------|

[2024-12-10 13:11:10 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 22
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 13:11:10 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 13:11:10 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 14
 {executed in 0 msec}
[2024-12-10 13:11:10 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a3709fe6-3e0d-4f04-8cef-1cc328c4fc0c.jpg |
|ada457b9-68aa-4a78-b0c8-c5035af844e2.jpg |
|-----------------------------------------|

[2024-12-10 13:11:10 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 14
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 13:11:10 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 13:11:10 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 13
 {executed in 0 msec}
[2024-12-10 13:11:10 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6fe5de58-57ef-47e7-80c7-49c0506ca143.jpg |
|920ca8e8-5dc2-4844-aa7f-d7782e94d380.jpg |
|-----------------------------------------|

[2024-12-10 13:11:10 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 13
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 13:11:10 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 13:11:10 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 12
 {executed in 0 msec}
[2024-12-10 13:11:10 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|84e77be4-2b62-4f40-8f8b-0803e1080449.jpg |
|84f31709-40aa-40eb-a7e7-da0219067927.jpg |
|-----------------------------------------|

[2024-12-10 13:11:10 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 12
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 13:11:10 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 13:11:10 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 11
 {executed in 0 msec}
[2024-12-10 13:11:10 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3fc51a83-46ea-43ca-a85b-6fad4794a2bd.jpg |
|49906eb9-a412-4428-a629-baccbe152c75.jpg |
|-----------------------------------------|

[2024-12-10 13:11:10 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 11
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-10 13:11:10 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 13:11:10 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 9
 {executed in 1 msec}
[2024-12-10 13:11:10 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|34669219-c5d3-4d84-a277-fd8c2b8bca4f.jpg |
|f1ed44ba-1254-4232-9a0d-65037abe1e9c.jpg |
|-----------------------------------------|

[2024-12-10 13:11:10 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 9
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-10 13:11:10 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 13:11:10 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 7
 {executed in 0 msec}
[2024-12-10 13:11:10 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|14ecfa41-07fc-40d0-b50b-3fe95a840992.jpg |
|2694c9a6-a7b3-4800-ac73-0c853e16a152.jpg |
|-----------------------------------------|

[2024-12-10 13:11:10 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 7
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-10 13:11:10 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 13:11:10 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 6
 {executed in 0 msec}
[2024-12-10 13:11:10 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3c31d519-96b0-49bd-8657-d1eac4fb3fc1.jpg |
|-----------------------------------------|

[2024-12-10 13:11:10 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 6
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-10 13:11:10 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-10 13:11:11 INFO http-nio-8080-exec-9] [com.green.greengram.user.UserController] userController > pathUserPic > p : UserPicPatchReq(signedUserId=1, pic=null, picName=null)
[2024-12-10 13:11:11 INFO http-nio-8080-exec-9] [com.green.greengram.user.UserService] 서비스 p 값 : UserPicPatchReq(signedUserId=1, pic=null, picName=null)
[2024-12-10 13:12:50 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-10 13:12:50 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-10 15:34:05 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.13 with PID 5212 (D:\Students\jang jin seong\GreenGramVer3\build\classes\java\main started by Administrator in D:\Students\jang jin seong\GreenGramVer3)
[2024-12-10 15:34:05 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-10 15:34:05 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-10 15:34:05 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-10 15:34:06 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-10 15:34:06 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-10 15:34:06 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-10 15:34:06 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-10 15:34:06 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-10 15:34:06 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 849 ms
[2024-12-10 15:34:06 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MFU 생성자: D:\Students\jang jin seong\download\greengram_ver3
[2024-12-10 15:34:06 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-10 15:34:06 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-10 15:34:06 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-10 15:34:06 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-10 15:34:06 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Started GreenGramVer3Application in 1.825 seconds (process running for 2.314)
[2024-12-10 15:34:18 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-10 15:34:18 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-10 15:34:18 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 0 ms
[2024-12-10 15:34:18 INFO http-nio-8080-exec-6] [org.springdoc.api.AbstractOpenApiResource] Init duration for springdoc-openapi is: 224 ms
[2024-12-10 15:59:20 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.13 with PID 12664 (D:\Students\jang jin seong\GreenGramVer3\build\classes\java\main started by Administrator in D:\Students\jang jin seong\GreenGramVer3)
[2024-12-10 15:59:20 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-10 15:59:20 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-10 15:59:20 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-10 15:59:21 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-10 15:59:21 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-10 15:59:21 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-10 15:59:21 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-10 15:59:21 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-10 15:59:21 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 830 ms
[2024-12-10 15:59:21 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MFU 생성자: D:\Students\jang jin seong\download\greengram_ver3
[2024-12-10 15:59:21 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-10 15:59:21 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-10 15:59:21 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-10 15:59:21 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-10 15:59:21 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Started GreenGramVer3Application in 1.802 seconds (process running for 2.249)
[2024-12-10 16:04:26 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 2 class path changes (0 additions, 0 deletions, 2 modifications)
[2024-12-10 16:04:26 INFO Thread-5] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-10 16:04:26 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.13 with PID 12664 (D:\Students\jang jin seong\GreenGramVer3\build\classes\java\main started by Administrator in D:\Students\jang jin seong\GreenGramVer3)
[2024-12-10 16:04:26 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-10 16:04:26 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-10 16:04:26 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-10 16:04:26 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-10 16:04:26 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-10 16:04:26 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-10 16:04:26 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 200 ms
[2024-12-10 16:04:26 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MFU 생성자: D:\Students\jang jin seong\download\greengram_ver3
[2024-12-10 16:04:26 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-10 16:04:26 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-10 16:04:26 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-10 16:04:26 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-10 16:04:26 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Started GreenGramVer3Application in 0.364 seconds (process running for 307.193)
[2024-12-10 16:04:26 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-10 16:04:47 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 2 class path changes (0 additions, 0 deletions, 2 modifications)
[2024-12-10 16:04:47 INFO Thread-7] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-10 16:04:47 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.13 with PID 12664 (D:\Students\jang jin seong\GreenGramVer3\build\classes\java\main started by Administrator in D:\Students\jang jin seong\GreenGramVer3)
[2024-12-10 16:04:47 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-10 16:04:48 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-10 16:04:48 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-10 16:04:48 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-10 16:04:48 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-10 16:04:48 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-10 16:04:48 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 182 ms
[2024-12-10 16:04:48 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MFU 생성자: D:\Students\jang jin seong\download\greengram_ver3
[2024-12-10 16:04:48 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-10 16:04:48 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-10 16:04:48 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-10 16:04:48 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-10 16:04:48 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Started GreenGramVer3Application in 0.337 seconds (process running for 328.513)
[2024-12-10 16:04:48 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-10 16:10:01 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 29 class path changes (1 addition, 0 deletions, 28 modifications)
[2024-12-10 16:10:01 INFO Thread-11] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-10 16:10:01 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.13 with PID 12664 (D:\Students\jang jin seong\GreenGramVer3\build\classes\java\main started by Administrator in D:\Students\jang jin seong\GreenGramVer3)
[2024-12-10 16:10:01 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-10 16:10:01 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-10 16:10:01 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-10 16:10:01 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-10 16:10:01 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-10 16:10:01 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-10 16:10:01 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 185 ms
[2024-12-10 16:10:01 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MFU 생성자: D:\Students\jang jin seong\download\greengram_ver3
[2024-12-10 16:10:01 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-10 16:10:01 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-10 16:10:01 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-10 16:10:01 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-10 16:10:01 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Started GreenGramVer3Application in 0.36 seconds (process running for 641.893)
[2024-12-10 16:10:01 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-10 17:30:56 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.13 with PID 7112 (D:\Students\jang jin seong\GreenGramVer3\build\classes\java\main started by Administrator in D:\Students\jang jin seong\GreenGramVer3)
[2024-12-10 17:30:56 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-10 17:30:56 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-10 17:30:56 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-10 17:30:57 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-10 17:30:57 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-10 17:30:57 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-10 17:30:57 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-10 17:30:57 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-10 17:30:57 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 832 ms
[2024-12-10 17:30:57 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MFU 생성자: D:\Students\jang jin seong\download\greengram_ver3
[2024-12-10 17:30:58 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-10 17:30:58 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-10 17:30:58 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-10 17:30:58 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-10 17:30:58 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Started GreenGramVer3Application in 2.152 seconds (process running for 2.808)
[2024-12-10 17:32:15 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-10 17:32:15 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-10 17:32:15 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-10 17:32:15 INFO http-nio-8080-exec-1] [com.green.greengram.feed.model.FeedGetReq] FeedGetReq 1,20,3
[2024-12-10 17:32:15 INFO http-nio-8080-exec-1] [com.green.greengram.feed.FeedController] feedC getFeedList p: FeedGetReq(super=Paging(page=1, size=20, sIdx=0), signedUserId=3, profileUserId=4, likeFeed=false)
[2024-12-10 17:32:16 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-10 17:32:16 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@9b60e3c
[2024-12-10 17:32:16 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-10 17:32:16 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, writer_user_id AS writerUserId,
        if(nick_name IS NULL , uid, nick_name) AS writerNm,
        pic AS writerPic, contents, location, a.created_at AS createdAt,
        if(c.feed_id IS NULL ,0 , 1) AS isLike
        FROM feed A
        JOIN user B
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c
        ON a.feed_id = c.feed_id
        AND c.user_id = 3

                    where b.user_id = 4

        ORDER BY a.feed_id DESC
        LIMIT 0,20
 {executed in 0 msec}
[2024-12-10 17:32:16 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|--------|---------------|---------|-----------------------------------------|---------|---------|--------------------|-------|
|feed_id |writer_user_id |writernm |pic                                      |contents |location |created_at          |islike |
|--------|---------------|---------|-----------------------------------------|---------|---------|--------------------|-------|
|5       |4              |33       |9a566777-52ff-49d4-8e16-3a4b7024c8bd.jpg |z        |;;       |2024-12-09 09:45:50 |1      |
|--------|---------------|---------|-----------------------------------------|---------|---------|--------------------|-------|

[2024-12-10 17:32:16 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select feed_id as feedId, pic
        from feed_pic
        where feed_id in (

            5

        )
 {executed in 0 msec}
[2024-12-10 17:32:16 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|--------|----|
|feed_id |pic |
|--------|----|
|--------|----|

[2024-12-10 17:32:16 INFO http-nio-8080-exec-1] [com.green.greengram.feed.FeedService] feedPicList: []
[2024-12-10 17:32:16 ERRORhttp-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.mybatis.spring.MyBatisSystemException] with root cause
org.apache.ibatis.binding.BindingException: Parameter 'feedId' not found. Available parameters are [feedIds, collection, list]
	at org.apache.ibatis.binding.MapperMethod$ParamMap.get(MapperMethod.java:210)
	at org.apache.ibatis.reflection.wrapper.MapWrapper.get(MapWrapper.java:45)
	at org.apache.ibatis.reflection.MetaObject.getValue(MetaObject.java:116)
	at org.apache.ibatis.executor.BaseExecutor.createCacheKey(BaseExecutor.java:225)
	at org.apache.ibatis.executor.CachingExecutor.createCacheKey(CachingExecutor.java:149)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:89)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy83.selFeedCommentListByFeedIds(Unknown Source)
	at com.green.greengram.feed.FeedService.getFeedList3(FeedService.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengram.feed.FeedService$$SpringCGLIB$$0.getFeedList3(<generated>)
	at com.green.greengram.feed.FeedController.getFeedList3(FeedController.java:55)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-10 17:32:20 INFO http-nio-8080-exec-4] [com.green.greengram.feed.model.FeedGetReq] FeedGetReq 1,20,1
[2024-12-10 17:32:20 INFO http-nio-8080-exec-4] [com.green.greengram.feed.FeedController] feedC getFeedList p: FeedGetReq(super=Paging(page=1, size=20, sIdx=0), signedUserId=1, profileUserId=1, likeFeed=false)
[2024-12-10 17:32:20 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, writer_user_id AS writerUserId,
        if(nick_name IS NULL , uid, nick_name) AS writerNm,
        pic AS writerPic, contents, location, a.created_at AS createdAt,
        if(c.feed_id IS NULL ,0 , 1) AS isLike
        FROM feed A
        JOIN user B
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c
        ON a.feed_id = c.feed_id
        AND c.user_id = 1

                    where b.user_id = 1

        ORDER BY a.feed_id DESC
        LIMIT 0,20
 {executed in 0 msec}
[2024-12-10 17:32:20 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|feed_id |writer_user_id |writernm |pic                                      |contents     |location |created_at          |islike |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|35      |1              |33       |efb8e328-12f0-486a-a8aa-01ca8c43c238.jpg |15131        |1532     |2024-12-10 09:50:44 |0      |
|34      |1              |33       |efb8e328-12f0-486a-a8aa-01ca8c43c238.jpg |??           |머말하는거냐   |2024-12-10 09:49:18 |0      |
|31      |1              |33       |efb8e328-12f0-486a-a8aa-01ca8c43c238.jpg |???          |사진어디감    |2024-12-06 12:38:20 |0      |
|27      |1              |33       |efb8e328-12f0-486a-a8aa-01ca8c43c238.jpg |I am panguin |남극       |2024-11-29 17:07:59 |0      |
|26      |1              |33       |efb8e328-12f0-486a-a8aa-01ca8c43c238.jpg |I am panguin |남극       |2024-11-29 16:46:01 |1      |
|24      |1              |33       |efb8e328-12f0-486a-a8aa-01ca8c43c238.jpg |31231        |123      |2024-11-29 16:01:53 |0      |
|23      |1              |33       |efb8e328-12f0-486a-a8aa-01ca8c43c238.jpg |4754         |444      |2024-11-29 16:00:03 |0      |
|22      |1              |33       |efb8e328-12f0-486a-a8aa-01ca8c43c238.jpg |aaa          |aa       |2024-11-29 15:58:25 |0      |
|14      |1              |33       |efb8e328-12f0-486a-a8aa-01ca8c43c238.jpg |null         |null     |2024-11-29 10:51:21 |1      |
|13      |1              |33       |efb8e328-12f0-486a-a8aa-01ca8c43c238.jpg |null         |null     |2024-11-29 10:51:14 |1      |
|12      |1              |33       |efb8e328-12f0-486a-a8aa-01ca8c43c238.jpg |null         |null     |2024-11-29 10:42:17 |1      |
|11      |1              |33       |efb8e328-12f0-486a-a8aa-01ca8c43c238.jpg |123          |33123    |2024-11-29 10:42:01 |0      |
|9       |1              |33       |efb8e328-12f0-486a-a8aa-01ca8c43c238.jpg |21123        |3        |2024-11-29 10:37:22 |0      |
|7       |1              |33       |efb8e328-12f0-486a-a8aa-01ca8c43c238.jpg |null         |null     |2024-11-28 17:20:59 |1      |
|6       |1              |33       |efb8e328-12f0-486a-a8aa-01ca8c43c238.jpg |             |         |2024-11-28 17:15:01 |0      |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|

[2024-12-10 17:32:20 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select feed_id as feedId, pic
        from feed_pic
        where feed_id in (

            35
         , 
            34
         , 
            31
         , 
            27
         , 
            26
         , 
            24
         , 
            23
         , 
            22
         , 
            14
         , 
            13
         , 
            12
         , 
            11
         , 
            9
         , 
            7
         , 
            6

        )
 {executed in 1 msec}
[2024-12-10 17:32:20 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|-----------------------------------------|
|feed_id |pic                                      |
|--------|-----------------------------------------|
|6       |3c31d519-96b0-49bd-8657-d1eac4fb3fc1.jpg |
|7       |14ecfa41-07fc-40d0-b50b-3fe95a840992.jpg |
|7       |2694c9a6-a7b3-4800-ac73-0c853e16a152.jpg |
|9       |34669219-c5d3-4d84-a277-fd8c2b8bca4f.jpg |
|9       |f1ed44ba-1254-4232-9a0d-65037abe1e9c.jpg |
|11      |3fc51a83-46ea-43ca-a85b-6fad4794a2bd.jpg |
|11      |49906eb9-a412-4428-a629-baccbe152c75.jpg |
|12      |84e77be4-2b62-4f40-8f8b-0803e1080449.jpg |
|12      |84f31709-40aa-40eb-a7e7-da0219067927.jpg |
|13      |6fe5de58-57ef-47e7-80c7-49c0506ca143.jpg |
|13      |920ca8e8-5dc2-4844-aa7f-d7782e94d380.jpg |
|14      |a3709fe6-3e0d-4f04-8cef-1cc328c4fc0c.jpg |
|14      |ada457b9-68aa-4a78-b0c8-c5035af844e2.jpg |
|22      |e97360ca-fe79-48c3-acaa-cd71042a0a78.tif |
|23      |f3e6375d-35d8-4a4a-a976-26ca5c6abaac.jpg |
|24      |dfe6f2c1-3753-4a6a-aff4-0de7fa2786b8.jpg |
|26      |3e5fe979-fe9c-4ed6-9ad7-c1dbf4f2538f.jpg |
|27      |5a0d637a-00c7-441f-a9fa-c0dc68af2602.jpg |
|31      |ba4e898f-67e9-43fa-85dd-a576f142c147.jpg |
|34      |da3fd470-513f-4cfe-9688-e50c0201cccf.jpg |
|35      |38e0ee97-73ae-4b4a-8f82-23e79d91a3ae.jpg |
|--------|-----------------------------------------|

[2024-12-10 17:32:20 INFO http-nio-8080-exec-4] [com.green.greengram.feed.FeedService] feedPicList: [com.green.greengram.feed.model.FeedPicSel@d11abff, com.green.greengram.feed.model.FeedPicSel@16e0277d, com.green.greengram.feed.model.FeedPicSel@b5892fb, com.green.greengram.feed.model.FeedPicSel@1e07a999, com.green.greengram.feed.model.FeedPicSel@1e49a7f5, com.green.greengram.feed.model.FeedPicSel@905a08e, com.green.greengram.feed.model.FeedPicSel@4685241f, com.green.greengram.feed.model.FeedPicSel@656d0637, com.green.greengram.feed.model.FeedPicSel@36c86360, com.green.greengram.feed.model.FeedPicSel@12edb4e7, com.green.greengram.feed.model.FeedPicSel@7d27cf79, com.green.greengram.feed.model.FeedPicSel@70f62254, com.green.greengram.feed.model.FeedPicSel@5508c49, com.green.greengram.feed.model.FeedPicSel@7a655a88, com.green.greengram.feed.model.FeedPicSel@397a1eba, com.green.greengram.feed.model.FeedPicSel@78df6f43, com.green.greengram.feed.model.FeedPicSel@79ec86d5, com.green.greengram.feed.model.FeedPicSel@298d327a, com.green.greengram.feed.model.FeedPicSel@406b763f, com.green.greengram.feed.model.FeedPicSel@43cdac06, com.green.greengram.feed.model.FeedPicSel@5e8a5084]
[2024-12-10 17:32:20 ERRORhttp-nio-8080-exec-4] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.mybatis.spring.MyBatisSystemException] with root cause
org.apache.ibatis.binding.BindingException: Parameter 'feedId' not found. Available parameters are [feedIds, collection, list]
	at org.apache.ibatis.binding.MapperMethod$ParamMap.get(MapperMethod.java:210)
	at org.apache.ibatis.reflection.wrapper.MapWrapper.get(MapWrapper.java:45)
	at org.apache.ibatis.reflection.MetaObject.getValue(MetaObject.java:116)
	at org.apache.ibatis.executor.BaseExecutor.createCacheKey(BaseExecutor.java:225)
	at org.apache.ibatis.executor.CachingExecutor.createCacheKey(CachingExecutor.java:149)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:89)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy83.selFeedCommentListByFeedIds(Unknown Source)
	at com.green.greengram.feed.FeedService.getFeedList3(FeedService.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengram.feed.FeedService$$SpringCGLIB$$0.getFeedList3(<generated>)
	at com.green.greengram.feed.FeedController.getFeedList3(FeedController.java:55)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-10 17:33:22 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-10 17:33:22 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-10 17:33:23 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.13 with PID 2376 (D:\Students\jang jin seong\GreenGramVer3\build\classes\java\main started by Administrator in D:\Students\jang jin seong\GreenGramVer3)
[2024-12-10 17:33:23 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-10 17:33:23 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-10 17:33:23 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-10 17:33:24 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-10 17:33:24 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-10 17:33:24 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-10 17:33:24 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-10 17:33:24 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-10 17:33:24 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 848 ms
[2024-12-10 17:33:24 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MFU 생성자: D:\Students\jang jin seong\download\greengram_ver3
[2024-12-10 17:33:25 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-10 17:33:25 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-10 17:33:25 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-10 17:33:25 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-10 17:33:25 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Started GreenGramVer3Application in 1.764 seconds (process running for 2.213)
[2024-12-10 17:33:27 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-10 17:33:27 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-10 17:33:27 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 0 ms
[2024-12-10 17:33:27 INFO http-nio-8080-exec-1] [com.green.greengram.feed.model.FeedGetReq] FeedGetReq 1,20,1
[2024-12-10 17:33:27 INFO http-nio-8080-exec-1] [com.green.greengram.feed.FeedController] feedC getFeedList p: FeedGetReq(super=Paging(page=1, size=20, sIdx=0), signedUserId=1, profileUserId=1, likeFeed=false)
[2024-12-10 17:33:27 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-10 17:33:27 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@19813eee
[2024-12-10 17:33:27 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-10 17:33:27 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, writer_user_id AS writerUserId,
        if(nick_name IS NULL , uid, nick_name) AS writerNm,
        pic AS writerPic, contents, location, a.created_at AS createdAt,
        if(c.feed_id IS NULL ,0 , 1) AS isLike
        FROM feed A
        JOIN user B
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c
        ON a.feed_id = c.feed_id
        AND c.user_id = 1

                    where b.user_id = 1

        ORDER BY a.feed_id DESC
        LIMIT 0,20
 {executed in 1 msec}
[2024-12-10 17:33:27 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|feed_id |writer_user_id |writernm |pic                                      |contents     |location |created_at          |islike |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|35      |1              |33       |efb8e328-12f0-486a-a8aa-01ca8c43c238.jpg |15131        |1532     |2024-12-10 09:50:44 |0      |
|34      |1              |33       |efb8e328-12f0-486a-a8aa-01ca8c43c238.jpg |??           |머말하는거냐   |2024-12-10 09:49:18 |0      |
|31      |1              |33       |efb8e328-12f0-486a-a8aa-01ca8c43c238.jpg |???          |사진어디감    |2024-12-06 12:38:20 |0      |
|27      |1              |33       |efb8e328-12f0-486a-a8aa-01ca8c43c238.jpg |I am panguin |남극       |2024-11-29 17:07:59 |0      |
|26      |1              |33       |efb8e328-12f0-486a-a8aa-01ca8c43c238.jpg |I am panguin |남극       |2024-11-29 16:46:01 |1      |
|24      |1              |33       |efb8e328-12f0-486a-a8aa-01ca8c43c238.jpg |31231        |123      |2024-11-29 16:01:53 |0      |
|23      |1              |33       |efb8e328-12f0-486a-a8aa-01ca8c43c238.jpg |4754         |444      |2024-11-29 16:00:03 |0      |
|22      |1              |33       |efb8e328-12f0-486a-a8aa-01ca8c43c238.jpg |aaa          |aa       |2024-11-29 15:58:25 |0      |
|14      |1              |33       |efb8e328-12f0-486a-a8aa-01ca8c43c238.jpg |null         |null     |2024-11-29 10:51:21 |1      |
|13      |1              |33       |efb8e328-12f0-486a-a8aa-01ca8c43c238.jpg |null         |null     |2024-11-29 10:51:14 |1      |
|12      |1              |33       |efb8e328-12f0-486a-a8aa-01ca8c43c238.jpg |null         |null     |2024-11-29 10:42:17 |1      |
|11      |1              |33       |efb8e328-12f0-486a-a8aa-01ca8c43c238.jpg |123          |33123    |2024-11-29 10:42:01 |0      |
|9       |1              |33       |efb8e328-12f0-486a-a8aa-01ca8c43c238.jpg |21123        |3        |2024-11-29 10:37:22 |0      |
|7       |1              |33       |efb8e328-12f0-486a-a8aa-01ca8c43c238.jpg |null         |null     |2024-11-28 17:20:59 |1      |
|6       |1              |33       |efb8e328-12f0-486a-a8aa-01ca8c43c238.jpg |             |         |2024-11-28 17:15:01 |0      |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|

[2024-12-10 17:33:27 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select feed_id as feedId, pic
        from feed_pic
        where feed_id in (

            35
         , 
            34
         , 
            31
         , 
            27
         , 
            26
         , 
            24
         , 
            23
         , 
            22
         , 
            14
         , 
            13
         , 
            12
         , 
            11
         , 
            9
         , 
            7
         , 
            6

        )
 {executed in 0 msec}
[2024-12-10 17:33:27 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|--------|-----------------------------------------|
|feed_id |pic                                      |
|--------|-----------------------------------------|
|6       |3c31d519-96b0-49bd-8657-d1eac4fb3fc1.jpg |
|7       |14ecfa41-07fc-40d0-b50b-3fe95a840992.jpg |
|7       |2694c9a6-a7b3-4800-ac73-0c853e16a152.jpg |
|9       |34669219-c5d3-4d84-a277-fd8c2b8bca4f.jpg |
|9       |f1ed44ba-1254-4232-9a0d-65037abe1e9c.jpg |
|11      |3fc51a83-46ea-43ca-a85b-6fad4794a2bd.jpg |
|11      |49906eb9-a412-4428-a629-baccbe152c75.jpg |
|12      |84e77be4-2b62-4f40-8f8b-0803e1080449.jpg |
|12      |84f31709-40aa-40eb-a7e7-da0219067927.jpg |
|13      |6fe5de58-57ef-47e7-80c7-49c0506ca143.jpg |
|13      |920ca8e8-5dc2-4844-aa7f-d7782e94d380.jpg |
|14      |a3709fe6-3e0d-4f04-8cef-1cc328c4fc0c.jpg |
|14      |ada457b9-68aa-4a78-b0c8-c5035af844e2.jpg |
|22      |e97360ca-fe79-48c3-acaa-cd71042a0a78.tif |
|23      |f3e6375d-35d8-4a4a-a976-26ca5c6abaac.jpg |
|24      |dfe6f2c1-3753-4a6a-aff4-0de7fa2786b8.jpg |
|26      |3e5fe979-fe9c-4ed6-9ad7-c1dbf4f2538f.jpg |
|27      |5a0d637a-00c7-441f-a9fa-c0dc68af2602.jpg |
|31      |ba4e898f-67e9-43fa-85dd-a576f142c147.jpg |
|34      |da3fd470-513f-4cfe-9688-e50c0201cccf.jpg |
|35      |38e0ee97-73ae-4b4a-8f82-23e79d91a3ae.jpg |
|--------|-----------------------------------------|

[2024-12-10 17:33:27 INFO http-nio-8080-exec-1] [com.green.greengram.feed.FeedService] feedPicList: [com.green.greengram.feed.model.FeedPicSel@79e59603, com.green.greengram.feed.model.FeedPicSel@5bcaba06, com.green.greengram.feed.model.FeedPicSel@7de2bcd4, com.green.greengram.feed.model.FeedPicSel@138a5605, com.green.greengram.feed.model.FeedPicSel@468a8ff9, com.green.greengram.feed.model.FeedPicSel@489e17a4, com.green.greengram.feed.model.FeedPicSel@2072067f, com.green.greengram.feed.model.FeedPicSel@6109560a, com.green.greengram.feed.model.FeedPicSel@73eef895, com.green.greengram.feed.model.FeedPicSel@4b75f27b, com.green.greengram.feed.model.FeedPicSel@7b044494, com.green.greengram.feed.model.FeedPicSel@5016f4f8, com.green.greengram.feed.model.FeedPicSel@54b8943f, com.green.greengram.feed.model.FeedPicSel@30ba52f9, com.green.greengram.feed.model.FeedPicSel@69c3809e, com.green.greengram.feed.model.FeedPicSel@e15186a, com.green.greengram.feed.model.FeedPicSel@1e9c7cfb, com.green.greengram.feed.model.FeedPicSel@7cd3c84b, com.green.greengram.feed.model.FeedPicSel@9e1703f, com.green.greengram.feed.model.FeedPicSel@2f11ff21, com.green.greengram.feed.model.FeedPicSel@5297359c]
[2024-12-10 17:33:27 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT T.feedId, T.feedCommentId, T.comment
        FROM (
        SELECT ROW_NUMBER() OVER (PARTITION BY A.feed_id ORDER BY A.feed_id, A.feed_comment_id DESC) AS num
        , A.feed_id AS feedId
        , A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id IN (

            35
         , 
            34
         , 
            31
         , 
            27
         , 
            26
         , 
            24
         , 
            23
         , 
            22
         , 
            14
         , 
            13
         , 
            12
         , 
            11
         , 
            9
         , 
            7
         , 
            6

        )
        ) T
        WHERE T.num   <=   4
 {executed in 0 msec}
[2024-12-10 17:33:27 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-------|--------------|--------|
|feedid |feedcommentid |comment |
|-------|--------------|--------|
|26     |9             |s       |
|26     |8             |123     |
|27     |41            |5       |
|27     |40            |4       |
|27     |37            |3       |
|27     |36            |2       |
|-------|--------------|--------|

[2024-12-10 17:38:51 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 2 class path changes (0 additions, 0 deletions, 2 modifications)
[2024-12-10 17:38:51 INFO Thread-5] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-10 17:38:52 INFO Thread-5] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-10 17:38:52 INFO Thread-5] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-10 17:38:52 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.13 with PID 2376 (D:\Students\jang jin seong\GreenGramVer3\build\classes\java\main started by Administrator in D:\Students\jang jin seong\GreenGramVer3)
[2024-12-10 17:38:52 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-10 17:38:52 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-10 17:38:52 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-10 17:38:52 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-10 17:38:52 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-10 17:38:52 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-10 17:38:52 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 221 ms
[2024-12-10 17:38:52 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MFU 생성자: D:\Students\jang jin seong\download\greengram_ver3
[2024-12-10 17:38:52 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-10 17:38:52 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-10 17:38:52 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-10 17:38:52 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-10 17:38:52 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Started GreenGramVer3Application in 0.41 seconds (process running for 329.362)
[2024-12-10 17:38:52 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
