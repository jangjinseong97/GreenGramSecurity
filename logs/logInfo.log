[2024-12-03 09:30:22 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 5428 (D:\Students\jang jin seong\GreenGramVer2\build\classes\java\main started by Administrator in D:\Students\jang jin seong\GreenGramVer2)
[2024-12-03 09:30:22 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-03 09:30:22 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-03 09:30:22 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-03 09:30:23 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-03 09:30:23 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-03 09:30:23 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-03 09:30:23 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-03 09:30:23 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-03 09:30:23 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 945 ms
[2024-12-03 09:30:23 INFO restartedMain] [com.green.greengramver2.common.MyFileUtils] MFU 생성자: D:\Students\jang jin seong\download\greengram_ver2
[2024-12-03 09:30:23 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-03 09:30:24 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-03 09:30:24 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-03 09:30:24 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-03 09:30:24 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Started GreenGramVer2Application in 2.021 seconds (process running for 2.499)
[2024-12-03 09:30:24 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-03 09:30:24 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-03 09:30:24 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-03 09:30:24 INFO http-nio-8080-exec-1] [com.green.greengramver2.feed.model.FeedGetReq] FeedGetReq null,0,0
[2024-12-03 09:30:24 WARN http-nio-8080-exec-1] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public com.green.greengramver2.common.model.ResultResponse<java.util.List<com.green.greengramver2.feed.model.FeedGetRes>> com.green.greengramver2.feed.FeedController.getFeedList(com.green.greengramver2.feed.model.FeedGetReq): [Field error in object 'feedGetReq' on field 'signed_user_id': rejected value [null]; codes [typeMismatch.feedGetReq.signed_user_id,typeMismatch.signed_user_id,typeMismatch.long,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [feedGetReq.signed_user_id,signed_user_id]; arguments []; default message [signed_user_id]]; default message [Failed to convert value of type 'null' to required type 'long'; Failed to convert from type [null] to type [@org.springframework.web.bind.annotation.BindParam @io.swagger.v3.oas.annotations.media.Schema long] for value [null]]] ]
[2024-12-03 09:30:28 INFO http-nio-8080-exec-10] [com.green.greengramver2.feed.model.FeedGetReq] FeedGetReq 1,null,1
[2024-12-03 09:30:28 INFO http-nio-8080-exec-10] [com.green.greengramver2.feed.FeedController] feedC getFeedList p: FeedGetReq(super=Paging(page=1, size=20, sIdx=0), signedUserId=1)
[2024-12-03 09:30:28 INFO http-nio-8080-exec-10] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-03 09:30:29 INFO http-nio-8080-exec-10] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@4dbe6c1f
[2024-12-03 09:30:29 INFO http-nio-8080-exec-10] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-03 09:30:29 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, writer_user_id AS writerUserId,
        if(nick_name IS NULL , uid, nick_name) AS writerNm,
        pic AS writerPic, contents, location, a.created_at AS createdAt,
        if(c.feed_id IS NULL ,0 , 1) AS isLike
        FROM feed A
        JOIN user B
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c
        ON a.feed_id = c.feed_id
        AND c.user_id = 1
        ORDER BY a.feed_id DESC
        LIMIT 0,20
 {executed in 2 msec}
[2024-12-03 09:30:29 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|feed_id |writer_user_id |writernm |pic                                      |contents     |location |created_at          |islike |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|27      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |I am panguin |남극       |2024-11-29 17:07:59 |0      |
|26      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |I am panguin |남극       |2024-11-29 16:46:01 |0      |
|25      |5              |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |4123         |213      |2024-11-29 16:32:31 |0      |
|24      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |31231        |123      |2024-11-29 16:01:53 |0      |
|23      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |4754         |444      |2024-11-29 16:00:03 |0      |
|22      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |aaa          |aa       |2024-11-29 15:58:25 |0      |
|14      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:51:21 |1      |
|13      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:51:14 |1      |
|12      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:42:17 |1      |
|11      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |123          |33123    |2024-11-29 10:42:01 |0      |
|9       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |21123        |3        |2024-11-29 10:37:22 |0      |
|7       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-28 17:20:59 |1      |
|6       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |             |         |2024-11-28 17:15:01 |0      |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|

[2024-12-03 09:30:29 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 27
 {executed in 0 msec}
[2024-12-03 09:30:29 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5a0d637a-00c7-441f-a9fa-c0dc68af2602.jpg |
|-----------------------------------------|

[2024-12-03 09:30:29 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 27
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 09:30:29 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|5       |7               |2       |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |6               |123     |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |5               |ㅇ       |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |4               |ㅇ       |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-03 09:30:29 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 26
 {executed in 1 msec}
[2024-12-03 09:30:29 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3e5fe979-fe9c-4ed6-9ad7-c1dbf4f2538f.jpg |
|-----------------------------------------|

[2024-12-03 09:30:29 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 26
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 09:30:29 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|1       |9               |s       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|5       |8               |123     |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-03 09:30:29 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 25
 {executed in 0 msec}
[2024-12-03 09:30:29 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|8213634a-99df-42d8-963e-87bc120cc8a7.jpg |
|-----------------------------------------|

[2024-12-03 09:30:29 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 25
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 09:30:29 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 09:30:29 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 24
 {executed in 0 msec}
[2024-12-03 09:30:29 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|dfe6f2c1-3753-4a6a-aff4-0de7fa2786b8.jpg |
|-----------------------------------------|

[2024-12-03 09:30:29 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 24
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 09:30:29 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 09:30:29 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 23
 {executed in 0 msec}
[2024-12-03 09:30:29 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f3e6375d-35d8-4a4a-a976-26ca5c6abaac.jpg |
|-----------------------------------------|

[2024-12-03 09:30:29 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 23
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 09:30:29 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 09:30:29 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 22
 {executed in 1 msec}
[2024-12-03 09:30:29 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e97360ca-fe79-48c3-acaa-cd71042a0a78.tif |
|-----------------------------------------|

[2024-12-03 09:30:29 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 22
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 09:30:29 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 09:30:29 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 14
 {executed in 0 msec}
[2024-12-03 09:30:29 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a3709fe6-3e0d-4f04-8cef-1cc328c4fc0c.jpg |
|ada457b9-68aa-4a78-b0c8-c5035af844e2.jpg |
|-----------------------------------------|

[2024-12-03 09:30:29 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 14
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 09:30:29 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 09:30:29 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 13
 {executed in 0 msec}
[2024-12-03 09:30:29 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6fe5de58-57ef-47e7-80c7-49c0506ca143.jpg |
|920ca8e8-5dc2-4844-aa7f-d7782e94d380.jpg |
|-----------------------------------------|

[2024-12-03 09:30:29 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 13
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 09:30:29 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 09:30:29 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 12
 {executed in 0 msec}
[2024-12-03 09:30:29 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|84e77be4-2b62-4f40-8f8b-0803e1080449.jpg |
|84f31709-40aa-40eb-a7e7-da0219067927.jpg |
|-----------------------------------------|

[2024-12-03 09:30:29 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 12
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 09:30:29 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 09:30:29 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 11
 {executed in 1 msec}
[2024-12-03 09:30:29 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3fc51a83-46ea-43ca-a85b-6fad4794a2bd.jpg |
|49906eb9-a412-4428-a629-baccbe152c75.jpg |
|-----------------------------------------|

[2024-12-03 09:30:29 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 11
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 09:30:29 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 09:30:29 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 9
 {executed in 0 msec}
[2024-12-03 09:30:29 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|34669219-c5d3-4d84-a277-fd8c2b8bca4f.jpg |
|f1ed44ba-1254-4232-9a0d-65037abe1e9c.jpg |
|-----------------------------------------|

[2024-12-03 09:30:29 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 9
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 09:30:29 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 09:30:29 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 7
 {executed in 0 msec}
[2024-12-03 09:30:29 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|14ecfa41-07fc-40d0-b50b-3fe95a840992.jpg |
|2694c9a6-a7b3-4800-ac73-0c853e16a152.jpg |
|-----------------------------------------|

[2024-12-03 09:30:29 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 7
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 09:30:29 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 09:30:29 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 6
 {executed in 0 msec}
[2024-12-03 09:30:29 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3c31d519-96b0-49bd-8657-d1eac4fb3fc1.jpg |
|-----------------------------------------|

[2024-12-03 09:30:29 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 6
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 09:30:29 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 09:30:34 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select upw, user_id as userId, pic,
        if(nick_name is null ,uid, nick_name) as nickName
        from user
        where uid = '55'
 {executed in 0 msec}
[2024-12-03 09:30:34 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----|--------|----|---------|
|upw |user_id |pic |nickname |
|----|--------|----|---------|
|----|--------|----|---------|

[2024-12-03 09:30:34 INFO http-nio-8080-exec-6] [com.green.greengramver2.user.UserController] UserSignInRes(pic=null, nickName=null, userId=0, upw=null, msg=아이디 확인)
[2024-12-03 09:30:38 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select upw, user_id as userId, pic,
        if(nick_name is null ,uid, nick_name) as nickName
        from user
        where uid = '44'
 {executed in 0 msec}
[2024-12-03 09:30:38 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-------------------------------------------------------------|--------|-----------------------------------------|---------|
|upw                                                          |user_id |pic                                      |nickname |
|-------------------------------------------------------------|--------|-----------------------------------------|---------|
|$2a$10$Pq002vuCsa/bQIY5BlcQPeYF/IU6P5wlXD4k9EdGHoCM.d72Wv3Pq |5       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |66       |
|-------------------------------------------------------------|--------|-----------------------------------------|---------|

[2024-12-03 09:30:38 INFO http-nio-8080-exec-3] [com.green.greengramver2.user.UserService] com.green.greengramver2.user.model.UserSignInReq@7f9ab536
[2024-12-03 09:30:38 INFO http-nio-8080-exec-3] [com.green.greengramver2.user.UserController] UserSignInRes(pic=d6440a69-541b-4d3c-969a-a6b643fd10de.jpg, nickName=66, userId=5, upw=$2a$10$Pq002vuCsa/bQIY5BlcQPeYF/IU6P5wlXD4k9EdGHoCM.d72Wv3Pq, msg=로그인 성공)
[2024-12-03 09:30:38 INFO http-nio-8080-exec-8] [com.green.greengramver2.feed.model.FeedGetReq] FeedGetReq 1,null,5
[2024-12-03 09:30:38 INFO http-nio-8080-exec-8] [com.green.greengramver2.feed.FeedController] feedC getFeedList p: FeedGetReq(super=Paging(page=1, size=20, sIdx=0), signedUserId=5)
[2024-12-03 09:30:38 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, writer_user_id AS writerUserId,
        if(nick_name IS NULL , uid, nick_name) AS writerNm,
        pic AS writerPic, contents, location, a.created_at AS createdAt,
        if(c.feed_id IS NULL ,0 , 1) AS isLike
        FROM feed A
        JOIN user B
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c
        ON a.feed_id = c.feed_id
        AND c.user_id = 5
        ORDER BY a.feed_id DESC
        LIMIT 0,20
 {executed in 1 msec}
[2024-12-03 09:30:38 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|feed_id |writer_user_id |writernm |pic                                      |contents     |location |created_at          |islike |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|27      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |I am panguin |남극       |2024-11-29 17:07:59 |0      |
|26      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |I am panguin |남극       |2024-11-29 16:46:01 |0      |
|25      |5              |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |4123         |213      |2024-11-29 16:32:31 |0      |
|24      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |31231        |123      |2024-11-29 16:01:53 |0      |
|23      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |4754         |444      |2024-11-29 16:00:03 |0      |
|22      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |aaa          |aa       |2024-11-29 15:58:25 |0      |
|14      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:51:21 |0      |
|13      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:51:14 |0      |
|12      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:42:17 |0      |
|11      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |123          |33123    |2024-11-29 10:42:01 |0      |
|9       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |21123        |3        |2024-11-29 10:37:22 |0      |
|7       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-28 17:20:59 |0      |
|6       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |             |         |2024-11-28 17:15:01 |0      |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|

[2024-12-03 09:30:38 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 27
 {executed in 0 msec}
[2024-12-03 09:30:38 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5a0d637a-00c7-441f-a9fa-c0dc68af2602.jpg |
|-----------------------------------------|

[2024-12-03 09:30:38 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 27
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 09:30:38 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|5       |7               |2       |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |6               |123     |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |5               |ㅇ       |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |4               |ㅇ       |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-03 09:30:38 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 26
 {executed in 1 msec}
[2024-12-03 09:30:38 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3e5fe979-fe9c-4ed6-9ad7-c1dbf4f2538f.jpg |
|-----------------------------------------|

[2024-12-03 09:30:38 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 26
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 09:30:38 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|1       |9               |s       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|5       |8               |123     |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-03 09:30:38 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 25
 {executed in 0 msec}
[2024-12-03 09:30:38 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|8213634a-99df-42d8-963e-87bc120cc8a7.jpg |
|-----------------------------------------|

[2024-12-03 09:30:38 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 25
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 09:30:38 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 09:30:38 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 24
 {executed in 0 msec}
[2024-12-03 09:30:38 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|dfe6f2c1-3753-4a6a-aff4-0de7fa2786b8.jpg |
|-----------------------------------------|

[2024-12-03 09:30:38 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 24
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 09:30:38 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 09:30:38 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 23
 {executed in 0 msec}
[2024-12-03 09:30:38 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f3e6375d-35d8-4a4a-a976-26ca5c6abaac.jpg |
|-----------------------------------------|

[2024-12-03 09:30:38 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 23
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 09:30:38 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 09:30:38 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 22
 {executed in 0 msec}
[2024-12-03 09:30:38 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e97360ca-fe79-48c3-acaa-cd71042a0a78.tif |
|-----------------------------------------|

[2024-12-03 09:30:38 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 22
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 09:30:38 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 09:30:38 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 14
 {executed in 1 msec}
[2024-12-03 09:30:38 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a3709fe6-3e0d-4f04-8cef-1cc328c4fc0c.jpg |
|ada457b9-68aa-4a78-b0c8-c5035af844e2.jpg |
|-----------------------------------------|

[2024-12-03 09:30:38 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 14
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 09:30:38 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 09:30:38 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 13
 {executed in 0 msec}
[2024-12-03 09:30:38 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6fe5de58-57ef-47e7-80c7-49c0506ca143.jpg |
|920ca8e8-5dc2-4844-aa7f-d7782e94d380.jpg |
|-----------------------------------------|

[2024-12-03 09:30:38 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 13
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 09:30:38 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 09:30:38 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 12
 {executed in 0 msec}
[2024-12-03 09:30:38 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|84e77be4-2b62-4f40-8f8b-0803e1080449.jpg |
|84f31709-40aa-40eb-a7e7-da0219067927.jpg |
|-----------------------------------------|

[2024-12-03 09:30:38 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 12
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 09:30:38 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 09:30:38 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 11
 {executed in 0 msec}
[2024-12-03 09:30:38 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3fc51a83-46ea-43ca-a85b-6fad4794a2bd.jpg |
|49906eb9-a412-4428-a629-baccbe152c75.jpg |
|-----------------------------------------|

[2024-12-03 09:30:38 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 11
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 09:30:38 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 09:30:38 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 9
 {executed in 0 msec}
[2024-12-03 09:30:38 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|34669219-c5d3-4d84-a277-fd8c2b8bca4f.jpg |
|f1ed44ba-1254-4232-9a0d-65037abe1e9c.jpg |
|-----------------------------------------|

[2024-12-03 09:30:38 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 9
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 09:30:38 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 09:30:38 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 7
 {executed in 0 msec}
[2024-12-03 09:30:38 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|14ecfa41-07fc-40d0-b50b-3fe95a840992.jpg |
|2694c9a6-a7b3-4800-ac73-0c853e16a152.jpg |
|-----------------------------------------|

[2024-12-03 09:30:38 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 7
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 09:30:38 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 09:30:38 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 6
 {executed in 0 msec}
[2024-12-03 09:30:38 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3c31d519-96b0-49bd-8657-d1eac4fb3fc1.jpg |
|-----------------------------------------|

[2024-12-03 09:30:38 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 6
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 09:30:38 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 09:30:44 INFO http-nio-8080-exec-4] [com.green.greengramver2.feed.comment.FeedCommentController] delFeedComment FeedCommentDelReq(feedCommentId=5, signedUserId=5)
[2024-12-03 09:30:44 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. delete
        from feed_comments
        where user_id = 5 and feed_comment_id = 5
 {executed in 2 msec}
[2024-12-03 09:30:55 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select upw, user_id as userId, pic,
        if(nick_name is null ,uid, nick_name) as nickName
        from user
        where uid = '55'
 {executed in 1 msec}
[2024-12-03 09:30:55 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----|--------|----|---------|
|upw |user_id |pic |nickname |
|----|--------|----|---------|
|----|--------|----|---------|

[2024-12-03 09:30:55 INFO http-nio-8080-exec-6] [com.green.greengramver2.user.UserController] UserSignInRes(pic=null, nickName=null, userId=0, upw=null, msg=아이디 확인)
[2024-12-03 09:30:59 WARN http-nio-8080-exec-3] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' is not supported]
[2024-12-03 09:51:18 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 6 class path changes (0 additions, 0 deletions, 6 modifications)
[2024-12-03 09:51:18 INFO Thread-5] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-03 09:51:18 INFO Thread-5] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-03 09:51:18 INFO Thread-5] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-03 09:51:18 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 5428 (D:\Students\jang jin seong\GreenGramVer2\build\classes\java\main started by Administrator in D:\Students\jang jin seong\GreenGramVer2)
[2024-12-03 09:51:18 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-03 09:51:18 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-03 09:51:18 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-03 09:51:18 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-03 09:51:18 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-03 09:51:18 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-03 09:51:18 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 202 ms
[2024-12-03 09:51:18 INFO restartedMain] [com.green.greengramver2.common.MyFileUtils] MFU 생성자: D:\Students\jang jin seong\download\greengram_ver2
[2024-12-03 09:51:18 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-03 09:51:18 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-03 09:51:18 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-03 09:51:18 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-03 09:51:18 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Started GreenGramVer2Application in 0.367 seconds (process running for 1256.862)
[2024-12-03 09:51:18 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-03 10:23:48 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 6 class path changes (0 additions, 0 deletions, 6 modifications)
[2024-12-03 10:23:48 INFO Thread-7] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-03 10:23:48 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 5428 (D:\Students\jang jin seong\GreenGramVer2\build\classes\java\main started by Administrator in D:\Students\jang jin seong\GreenGramVer2)
[2024-12-03 10:23:48 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-03 10:23:48 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-03 10:23:48 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-03 10:23:48 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-03 10:23:48 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-03 10:23:48 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-03 10:23:48 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 191 ms
[2024-12-03 10:23:48 INFO restartedMain] [com.green.greengramver2.common.MyFileUtils] MFU 생성자: D:\Students\jang jin seong\download\greengram_ver2
[2024-12-03 10:23:48 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-03 10:23:48 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-03 10:23:48 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-03 10:23:48 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-03 10:23:48 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Started GreenGramVer2Application in 0.354 seconds (process running for 3206.931)
[2024-12-03 10:23:48 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-03 10:24:01 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 2 class path changes (0 additions, 0 deletions, 2 modifications)
[2024-12-03 10:24:01 INFO Thread-11] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-03 10:24:01 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 5428 (D:\Students\jang jin seong\GreenGramVer2\build\classes\java\main started by Administrator in D:\Students\jang jin seong\GreenGramVer2)
[2024-12-03 10:24:01 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-03 10:24:01 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-03 10:24:01 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-03 10:24:01 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-03 10:24:01 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-03 10:24:01 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-03 10:24:01 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 180 ms
[2024-12-03 10:24:01 INFO restartedMain] [com.green.greengramver2.common.MyFileUtils] MFU 생성자: D:\Students\jang jin seong\download\greengram_ver2
[2024-12-03 10:24:02 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-03 10:24:02 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-03 10:24:02 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-03 10:24:02 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-03 10:24:02 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Started GreenGramVer2Application in 0.319 seconds (process running for 3220.396)
[2024-12-03 10:24:02 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-03 10:24:10 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-03 10:24:10 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-03 10:24:10 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-03 10:24:10 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.HikariDataSource] HikariPool-2 - Starting...
[2024-12-03 10:24:10 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.pool.HikariPool] HikariPool-2 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@73089bd5
[2024-12-03 10:24:10 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.HikariDataSource] HikariPool-2 - Start completed.
[2024-12-03 10:24:10 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select upw, user_id as userId, pic,
        if(nick_name is null ,uid, nick_name) as nickName
        from user
        where uid = '55'
 {executed in 0 msec}
[2024-12-03 10:24:10 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----|--------|----|---------|
|upw |user_id |pic |nickname |
|----|--------|----|---------|
|----|--------|----|---------|

[2024-12-03 10:24:10 INFO http-nio-8080-exec-1] [com.green.greengramver2.user.UserController] UserSignInRes(pic=null, nickName=null, userId=0, upw=null, msg=아이디 확인)
[2024-12-03 10:24:17 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select upw, user_id as userId, pic,
        if(nick_name is null ,uid, nick_name) as nickName
        from user
        where uid = '11'
 {executed in 0 msec}
[2024-12-03 10:24:17 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-------------------------------------------------------------|--------|-----------------------------------------|---------|
|upw                                                          |user_id |pic                                      |nickname |
|-------------------------------------------------------------|--------|-----------------------------------------|---------|
|$2a$10$/FL2kogEtMKq8t2tv40iPuuSqwfb5dfNWzRU0jmMWJX2Q28/d8eJS |1       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |33       |
|-------------------------------------------------------------|--------|-----------------------------------------|---------|

[2024-12-03 10:24:17 INFO http-nio-8080-exec-2] [com.green.greengramver2.user.UserService] com.green.greengramver2.user.model.UserSignInReq@484b7298
[2024-12-03 10:24:17 INFO http-nio-8080-exec-2] [com.green.greengramver2.user.UserController] UserSignInRes(pic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg, nickName=33, userId=1, upw=$2a$10$/FL2kogEtMKq8t2tv40iPuuSqwfb5dfNWzRU0jmMWJX2Q28/d8eJS, msg=로그인 성공)
[2024-12-03 10:24:17 INFO http-nio-8080-exec-4] [com.green.greengramver2.feed.model.FeedGetReq] FeedGetReq 1,null,1
[2024-12-03 10:24:17 INFO http-nio-8080-exec-4] [com.green.greengramver2.feed.FeedController] feedC getFeedList p: FeedGetReq(super=Paging(page=1, size=20, sIdx=0), signedUserId=1)
[2024-12-03 10:24:17 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT a.feed_id AS feedId, writer_user_id AS writerUserId,
        if(nick_name IS NULL , uid, nick_name) AS writerNm,
        pic AS writerPic, contents, location, a.created_at AS createdAt,
        if(c.feed_id IS NULL ,0 , 1) AS isLike
        FROM feed A
        JOIN user B
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c
        ON a.feed_id = c.feed_id
        AND c.user_id = 1
        ORDER BY a.feed_id DESC
        LIMIT 0,20
 {executed in 0 msec}
[2024-12-03 10:24:17 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|feed_id |writer_user_id |writernm |pic                                      |contents     |location |created_at          |islike |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|27      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |I am panguin |남극       |2024-11-29 17:07:59 |0      |
|26      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |I am panguin |남극       |2024-11-29 16:46:01 |0      |
|25      |5              |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |4123         |213      |2024-11-29 16:32:31 |0      |
|24      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |31231        |123      |2024-11-29 16:01:53 |0      |
|23      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |4754         |444      |2024-11-29 16:00:03 |0      |
|22      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |aaa          |aa       |2024-11-29 15:58:25 |0      |
|14      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:51:21 |1      |
|13      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:51:14 |1      |
|12      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:42:17 |1      |
|11      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |123          |33123    |2024-11-29 10:42:01 |0      |
|9       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |21123        |3        |2024-11-29 10:37:22 |0      |
|7       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-28 17:20:59 |1      |
|6       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |             |         |2024-11-28 17:15:01 |0      |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|

[2024-12-03 10:24:17 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
        from feed_pics
        where feed_id = 27
 {executed in 0 msec}
[2024-12-03 10:24:17 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5a0d637a-00c7-441f-a9fa-c0dc68af2602.jpg |
|-----------------------------------------|

[2024-12-03 10:24:17 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 27
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 10:24:17 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|----------------|----------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment   |writernm |pic                                      |
|--------|----------------|----------|---------|-----------------------------------------|
|5       |7               |2         |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |6               |123       |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |4               |ㅇ         |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |3               |왜 로그에 두번이 |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|--------|----------------|----------|---------|-----------------------------------------|

[2024-12-03 10:24:17 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
        from feed_pics
        where feed_id = 26
 {executed in 0 msec}
[2024-12-03 10:24:17 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3e5fe979-fe9c-4ed6-9ad7-c1dbf4f2538f.jpg |
|-----------------------------------------|

[2024-12-03 10:24:17 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 26
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 10:24:17 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|1       |9               |s       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|5       |8               |123     |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-03 10:24:17 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
        from feed_pics
        where feed_id = 25
 {executed in 0 msec}
[2024-12-03 10:24:17 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|8213634a-99df-42d8-963e-87bc120cc8a7.jpg |
|-----------------------------------------|

[2024-12-03 10:24:17 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 25
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 10:24:17 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 10:24:17 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
        from feed_pics
        where feed_id = 24
 {executed in 1 msec}
[2024-12-03 10:24:17 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|dfe6f2c1-3753-4a6a-aff4-0de7fa2786b8.jpg |
|-----------------------------------------|

[2024-12-03 10:24:17 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 24
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 10:24:17 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 10:24:17 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
        from feed_pics
        where feed_id = 23
 {executed in 1 msec}
[2024-12-03 10:24:17 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f3e6375d-35d8-4a4a-a976-26ca5c6abaac.jpg |
|-----------------------------------------|

[2024-12-03 10:24:17 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 23
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 10:24:17 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 10:24:17 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
        from feed_pics
        where feed_id = 22
 {executed in 1 msec}
[2024-12-03 10:24:17 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e97360ca-fe79-48c3-acaa-cd71042a0a78.tif |
|-----------------------------------------|

[2024-12-03 10:24:17 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 22
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 10:24:17 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 10:24:17 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
        from feed_pics
        where feed_id = 14
 {executed in 0 msec}
[2024-12-03 10:24:17 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a3709fe6-3e0d-4f04-8cef-1cc328c4fc0c.jpg |
|ada457b9-68aa-4a78-b0c8-c5035af844e2.jpg |
|-----------------------------------------|

[2024-12-03 10:24:17 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 14
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 10:24:17 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 10:24:17 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
        from feed_pics
        where feed_id = 13
 {executed in 0 msec}
[2024-12-03 10:24:17 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6fe5de58-57ef-47e7-80c7-49c0506ca143.jpg |
|920ca8e8-5dc2-4844-aa7f-d7782e94d380.jpg |
|-----------------------------------------|

[2024-12-03 10:24:17 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 13
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 10:24:17 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 10:24:17 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
        from feed_pics
        where feed_id = 12
 {executed in 0 msec}
[2024-12-03 10:24:17 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|84e77be4-2b62-4f40-8f8b-0803e1080449.jpg |
|84f31709-40aa-40eb-a7e7-da0219067927.jpg |
|-----------------------------------------|

[2024-12-03 10:24:17 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 12
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 10:24:17 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 10:24:17 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
        from feed_pics
        where feed_id = 11
 {executed in 0 msec}
[2024-12-03 10:24:17 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3fc51a83-46ea-43ca-a85b-6fad4794a2bd.jpg |
|49906eb9-a412-4428-a629-baccbe152c75.jpg |
|-----------------------------------------|

[2024-12-03 10:24:17 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 11
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 10:24:17 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 10:24:17 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
        from feed_pics
        where feed_id = 9
 {executed in 0 msec}
[2024-12-03 10:24:17 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|34669219-c5d3-4d84-a277-fd8c2b8bca4f.jpg |
|f1ed44ba-1254-4232-9a0d-65037abe1e9c.jpg |
|-----------------------------------------|

[2024-12-03 10:24:17 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 9
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 10:24:17 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 10:24:17 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
        from feed_pics
        where feed_id = 7
 {executed in 0 msec}
[2024-12-03 10:24:17 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|14ecfa41-07fc-40d0-b50b-3fe95a840992.jpg |
|2694c9a6-a7b3-4800-ac73-0c853e16a152.jpg |
|-----------------------------------------|

[2024-12-03 10:24:17 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 7
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 10:24:17 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 10:24:17 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
        from feed_pics
        where feed_id = 6
 {executed in 0 msec}
[2024-12-03 10:24:17 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3c31d519-96b0-49bd-8657-d1eac4fb3fc1.jpg |
|-----------------------------------------|

[2024-12-03 10:24:17 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 6
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 10:24:17 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 10:27:37 INFO http-nio-8080-exec-7] [com.green.greengramver2.feed.model.FeedGetReq] FeedGetReq 1,null,1
[2024-12-03 10:27:37 INFO http-nio-8080-exec-7] [com.green.greengramver2.feed.FeedController] feedC getFeedList p: FeedGetReq(super=Paging(page=1, size=20, sIdx=0), signedUserId=1)
[2024-12-03 10:27:37 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT a.feed_id AS feedId, writer_user_id AS writerUserId,
        if(nick_name IS NULL , uid, nick_name) AS writerNm,
        pic AS writerPic, contents, location, a.created_at AS createdAt,
        if(c.feed_id IS NULL ,0 , 1) AS isLike
        FROM feed A
        JOIN user B
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c
        ON a.feed_id = c.feed_id
        AND c.user_id = 1
        ORDER BY a.feed_id DESC
        LIMIT 0,20
 {executed in 1 msec}
[2024-12-03 10:27:37 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|feed_id |writer_user_id |writernm |pic                                      |contents     |location |created_at          |islike |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|27      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |I am panguin |남극       |2024-11-29 17:07:59 |0      |
|26      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |I am panguin |남극       |2024-11-29 16:46:01 |0      |
|25      |5              |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |4123         |213      |2024-11-29 16:32:31 |0      |
|24      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |31231        |123      |2024-11-29 16:01:53 |0      |
|23      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |4754         |444      |2024-11-29 16:00:03 |0      |
|22      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |aaa          |aa       |2024-11-29 15:58:25 |0      |
|14      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:51:21 |1      |
|13      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:51:14 |1      |
|12      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:42:17 |1      |
|11      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |123          |33123    |2024-11-29 10:42:01 |0      |
|9       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |21123        |3        |2024-11-29 10:37:22 |0      |
|7       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-28 17:20:59 |1      |
|6       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |             |         |2024-11-28 17:15:01 |0      |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|

[2024-12-03 10:27:37 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
        from feed_pics
        where feed_id = 27
 {executed in 0 msec}
[2024-12-03 10:27:37 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5a0d637a-00c7-441f-a9fa-c0dc68af2602.jpg |
|-----------------------------------------|

[2024-12-03 10:27:37 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 27
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 10:27:37 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|----------------|----------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment   |writernm |pic                                      |
|--------|----------------|----------|---------|-----------------------------------------|
|5       |7               |2         |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |6               |123       |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |4               |ㅇ         |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |3               |왜 로그에 두번이 |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|--------|----------------|----------|---------|-----------------------------------------|

[2024-12-03 10:27:37 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
        from feed_pics
        where feed_id = 26
 {executed in 1 msec}
[2024-12-03 10:27:37 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3e5fe979-fe9c-4ed6-9ad7-c1dbf4f2538f.jpg |
|-----------------------------------------|

[2024-12-03 10:27:37 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 26
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 10:27:37 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|1       |9               |s       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|5       |8               |123     |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-03 10:27:37 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
        from feed_pics
        where feed_id = 25
 {executed in 0 msec}
[2024-12-03 10:27:37 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|8213634a-99df-42d8-963e-87bc120cc8a7.jpg |
|-----------------------------------------|

[2024-12-03 10:27:37 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 25
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 10:27:37 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 10:27:37 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
        from feed_pics
        where feed_id = 24
 {executed in 0 msec}
[2024-12-03 10:27:37 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|dfe6f2c1-3753-4a6a-aff4-0de7fa2786b8.jpg |
|-----------------------------------------|

[2024-12-03 10:27:37 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 24
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 10:27:37 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 10:27:37 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
        from feed_pics
        where feed_id = 23
 {executed in 0 msec}
[2024-12-03 10:27:37 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f3e6375d-35d8-4a4a-a976-26ca5c6abaac.jpg |
|-----------------------------------------|

[2024-12-03 10:27:37 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 23
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 10:27:37 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 10:27:37 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
        from feed_pics
        where feed_id = 22
 {executed in 1 msec}
[2024-12-03 10:27:37 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e97360ca-fe79-48c3-acaa-cd71042a0a78.tif |
|-----------------------------------------|

[2024-12-03 10:27:37 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 22
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 10:27:37 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 10:27:37 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
        from feed_pics
        where feed_id = 14
 {executed in 1 msec}
[2024-12-03 10:27:37 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a3709fe6-3e0d-4f04-8cef-1cc328c4fc0c.jpg |
|ada457b9-68aa-4a78-b0c8-c5035af844e2.jpg |
|-----------------------------------------|

[2024-12-03 10:27:37 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 14
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 10:27:37 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 10:27:37 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
        from feed_pics
        where feed_id = 13
 {executed in 0 msec}
[2024-12-03 10:27:37 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6fe5de58-57ef-47e7-80c7-49c0506ca143.jpg |
|920ca8e8-5dc2-4844-aa7f-d7782e94d380.jpg |
|-----------------------------------------|

[2024-12-03 10:27:37 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 13
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 10:27:37 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 10:27:37 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
        from feed_pics
        where feed_id = 12
 {executed in 1 msec}
[2024-12-03 10:27:37 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|84e77be4-2b62-4f40-8f8b-0803e1080449.jpg |
|84f31709-40aa-40eb-a7e7-da0219067927.jpg |
|-----------------------------------------|

[2024-12-03 10:27:37 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 12
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 10:27:37 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 10:27:37 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
        from feed_pics
        where feed_id = 11
 {executed in 0 msec}
[2024-12-03 10:27:37 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3fc51a83-46ea-43ca-a85b-6fad4794a2bd.jpg |
|49906eb9-a412-4428-a629-baccbe152c75.jpg |
|-----------------------------------------|

[2024-12-03 10:27:37 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 11
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 10:27:37 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 10:27:37 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
        from feed_pics
        where feed_id = 9
 {executed in 0 msec}
[2024-12-03 10:27:37 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|34669219-c5d3-4d84-a277-fd8c2b8bca4f.jpg |
|f1ed44ba-1254-4232-9a0d-65037abe1e9c.jpg |
|-----------------------------------------|

[2024-12-03 10:27:37 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 9
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 10:27:37 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 10:27:37 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
        from feed_pics
        where feed_id = 7
 {executed in 0 msec}
[2024-12-03 10:27:37 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|14ecfa41-07fc-40d0-b50b-3fe95a840992.jpg |
|2694c9a6-a7b3-4800-ac73-0c853e16a152.jpg |
|-----------------------------------------|

[2024-12-03 10:27:37 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 7
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 10:27:37 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 10:27:37 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
        from feed_pics
        where feed_id = 6
 {executed in 0 msec}
[2024-12-03 10:27:37 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3c31d519-96b0-49bd-8657-d1eac4fb3fc1.jpg |
|-----------------------------------------|

[2024-12-03 10:27:37 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 6
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 10:27:37 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 10:45:33 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 2 class path changes (0 additions, 0 deletions, 2 modifications)
[2024-12-03 10:45:33 INFO Thread-15] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-03 10:45:33 INFO Thread-15] [com.zaxxer.hikari.HikariDataSource] HikariPool-2 - Shutdown initiated...
[2024-12-03 10:45:33 INFO Thread-15] [com.zaxxer.hikari.HikariDataSource] HikariPool-2 - Shutdown completed.
[2024-12-03 10:45:33 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 5428 (D:\Students\jang jin seong\GreenGramVer2\build\classes\java\main started by Administrator in D:\Students\jang jin seong\GreenGramVer2)
[2024-12-03 10:45:33 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-03 10:45:34 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-03 10:45:34 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-03 10:45:34 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-03 10:45:34 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-03 10:45:34 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-03 10:45:34 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 189 ms
[2024-12-03 10:45:34 INFO restartedMain] [com.green.greengramver2.common.MyFileUtils] MFU 생성자: D:\Students\jang jin seong\download\greengram_ver2
[2024-12-03 10:45:34 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-03 10:45:34 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-03 10:45:34 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-03 10:45:34 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-03 10:45:34 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Started GreenGramVer2Application in 0.374 seconds (process running for 4512.527)
[2024-12-03 10:45:34 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-03 10:52:30 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 11848 (D:\Students\jang jin seong\GreenGramVer2\build\classes\java\main started by Administrator in D:\Students\jang jin seong\GreenGramVer2)
[2024-12-03 10:52:30 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-03 10:52:30 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-03 10:52:30 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-03 10:52:31 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-03 10:52:31 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-03 10:52:31 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-03 10:52:31 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-03 10:52:31 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-03 10:52:31 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 797 ms
[2024-12-03 10:52:31 INFO restartedMain] [com.green.greengramver2.common.MyFileUtils] MFU 생성자: D:\Students\jang jin seong\download\greengram_ver2
[2024-12-03 10:52:31 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-03 10:52:32 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-03 10:52:32 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-03 10:52:32 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-03 10:52:32 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Started GreenGramVer2Application in 1.846 seconds (process running for 2.269)
[2024-12-03 10:52:45 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-03 10:52:45 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-03 10:52:45 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 0 ms
[2024-12-03 10:52:45 INFO http-nio-8080-exec-6] [com.green.greengramver2.feed.model.FeedGetReq] FeedGetReq 1,null,1
[2024-12-03 10:52:45 INFO http-nio-8080-exec-6] [com.green.greengramver2.feed.FeedController] feedC getFeedList p: FeedGetReq(super=Paging(page=1, size=20, sIdx=0), signedUserId=1)
[2024-12-03 10:52:45 INFO http-nio-8080-exec-6] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-03 10:52:45 INFO http-nio-8080-exec-6] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@4c25b019
[2024-12-03 10:52:45 INFO http-nio-8080-exec-6] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-03 10:52:45 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, writer_user_id AS writerUserId,
        if(nick_name IS NULL , uid, nick_name) AS writerNm,
        pic AS writerPic, contents, location, a.created_at AS createdAt,
        if(c.feed_id IS NULL ,0 , 1) AS isLike
        FROM feed A
        JOIN user B
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c
        ON a.feed_id = c.feed_id
        AND c.user_id = 1
        ORDER BY a.feed_id DESC
        LIMIT 0,20
 {executed in 0 msec}
[2024-12-03 10:52:45 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|feed_id |writer_user_id |writernm |pic                                      |contents     |location |created_at          |islike |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|27      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |I am panguin |남극       |2024-11-29 17:07:59 |0      |
|26      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |I am panguin |남극       |2024-11-29 16:46:01 |0      |
|25      |5              |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |4123         |213      |2024-11-29 16:32:31 |0      |
|24      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |31231        |123      |2024-11-29 16:01:53 |0      |
|23      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |4754         |444      |2024-11-29 16:00:03 |0      |
|22      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |aaa          |aa       |2024-11-29 15:58:25 |0      |
|14      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:51:21 |1      |
|13      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:51:14 |1      |
|12      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:42:17 |1      |
|11      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |123          |33123    |2024-11-29 10:42:01 |0      |
|9       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |21123        |3        |2024-11-29 10:37:22 |0      |
|7       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-28 17:20:59 |1      |
|6       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |             |         |2024-11-28 17:15:01 |0      |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|

[2024-12-03 10:52:45 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 27
 {executed in 1 msec}
[2024-12-03 10:52:45 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5a0d637a-00c7-441f-a9fa-c0dc68af2602.jpg |
|-----------------------------------------|

[2024-12-03 10:52:45 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 27
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 10:52:45 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|----------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment   |writernm |pic                                      |
|--------|----------------|----------|---------|-----------------------------------------|
|5       |7               |2         |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |6               |123       |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |4               |ㅇ         |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |3               |왜 로그에 두번이 |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|--------|----------------|----------|---------|-----------------------------------------|

[2024-12-03 10:52:45 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 26
 {executed in 0 msec}
[2024-12-03 10:52:45 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3e5fe979-fe9c-4ed6-9ad7-c1dbf4f2538f.jpg |
|-----------------------------------------|

[2024-12-03 10:52:45 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 26
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 10:52:45 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|1       |9               |s       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|5       |8               |123     |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-03 10:52:45 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 25
 {executed in 0 msec}
[2024-12-03 10:52:45 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|8213634a-99df-42d8-963e-87bc120cc8a7.jpg |
|-----------------------------------------|

[2024-12-03 10:52:45 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 25
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 10:52:45 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 10:52:45 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 24
 {executed in 1 msec}
[2024-12-03 10:52:45 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|dfe6f2c1-3753-4a6a-aff4-0de7fa2786b8.jpg |
|-----------------------------------------|

[2024-12-03 10:52:45 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 24
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 10:52:45 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 10:52:45 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 23
 {executed in 1 msec}
[2024-12-03 10:52:45 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f3e6375d-35d8-4a4a-a976-26ca5c6abaac.jpg |
|-----------------------------------------|

[2024-12-03 10:52:45 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 23
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 10:52:45 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 10:52:45 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 22
 {executed in 0 msec}
[2024-12-03 10:52:45 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e97360ca-fe79-48c3-acaa-cd71042a0a78.tif |
|-----------------------------------------|

[2024-12-03 10:52:45 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 22
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 10:52:45 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 10:52:45 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 14
 {executed in 0 msec}
[2024-12-03 10:52:45 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a3709fe6-3e0d-4f04-8cef-1cc328c4fc0c.jpg |
|ada457b9-68aa-4a78-b0c8-c5035af844e2.jpg |
|-----------------------------------------|

[2024-12-03 10:52:45 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 14
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 10:52:45 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 10:52:45 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 13
 {executed in 1 msec}
[2024-12-03 10:52:45 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6fe5de58-57ef-47e7-80c7-49c0506ca143.jpg |
|920ca8e8-5dc2-4844-aa7f-d7782e94d380.jpg |
|-----------------------------------------|

[2024-12-03 10:52:45 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 13
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 10:52:45 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 10:52:45 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 12
 {executed in 0 msec}
[2024-12-03 10:52:45 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|84e77be4-2b62-4f40-8f8b-0803e1080449.jpg |
|84f31709-40aa-40eb-a7e7-da0219067927.jpg |
|-----------------------------------------|

[2024-12-03 10:52:45 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 12
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 10:52:45 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 10:52:45 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 11
 {executed in 1 msec}
[2024-12-03 10:52:45 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3fc51a83-46ea-43ca-a85b-6fad4794a2bd.jpg |
|49906eb9-a412-4428-a629-baccbe152c75.jpg |
|-----------------------------------------|

[2024-12-03 10:52:45 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 11
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 10:52:45 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 10:52:45 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 9
 {executed in 0 msec}
[2024-12-03 10:52:45 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|34669219-c5d3-4d84-a277-fd8c2b8bca4f.jpg |
|f1ed44ba-1254-4232-9a0d-65037abe1e9c.jpg |
|-----------------------------------------|

[2024-12-03 10:52:45 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 9
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 10:52:45 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 10:52:45 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 7
 {executed in 0 msec}
[2024-12-03 10:52:45 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|14ecfa41-07fc-40d0-b50b-3fe95a840992.jpg |
|2694c9a6-a7b3-4800-ac73-0c853e16a152.jpg |
|-----------------------------------------|

[2024-12-03 10:52:45 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 7
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 10:52:45 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 10:52:45 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 6
 {executed in 0 msec}
[2024-12-03 10:52:45 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3c31d519-96b0-49bd-8657-d1eac4fb3fc1.jpg |
|-----------------------------------------|

[2024-12-03 10:52:45 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 6
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 10:52:45 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 10:52:48 INFO http-nio-8080-exec-9] [com.green.greengramver2.feed.comment.FeedCommentController] feedCommentGet com.green.greengramver2.feed.comment.model.FeedCommentGetReq@aef4bfd
[2024-12-03 10:53:16 INFO http-nio-8080-exec-5] [com.green.greengramver2.feed.comment.FeedCommentController] feedCommentGet com.green.greengramver2.feed.comment.model.FeedCommentGetReq@3677f10d
[2024-12-03 10:54:01 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-03 10:54:01 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-03 10:54:03 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 1044 (D:\Students\jang jin seong\GreenGramVer2\build\classes\java\main started by Administrator in D:\Students\jang jin seong\GreenGramVer2)
[2024-12-03 10:54:03 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-03 10:54:03 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-03 10:54:03 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-03 10:54:04 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-03 10:54:04 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-03 10:54:04 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-03 10:54:04 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-03 10:54:04 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-03 10:54:04 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 776 ms
[2024-12-03 10:54:04 INFO restartedMain] [com.green.greengramver2.common.MyFileUtils] MFU 생성자: D:\Students\jang jin seong\download\greengram_ver2
[2024-12-03 10:54:04 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-03 10:54:04 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-03 10:54:04 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-03 10:54:04 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-03 10:54:04 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Started GreenGramVer2Application in 1.667 seconds (process running for 2.029)
[2024-12-03 10:54:14 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-03 10:54:14 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-03 10:54:14 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 0 ms
[2024-12-03 10:54:14 INFO http-nio-8080-exec-9] [com.green.greengramver2.feed.model.FeedGetReq] FeedGetReq 1,null,1
[2024-12-03 10:54:14 INFO http-nio-8080-exec-9] [com.green.greengramver2.feed.FeedController] feedC getFeedList p: FeedGetReq(super=Paging(page=1, size=20, sIdx=0), signedUserId=1)
[2024-12-03 10:54:14 INFO http-nio-8080-exec-9] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-03 10:54:14 INFO http-nio-8080-exec-9] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@2cffb2b8
[2024-12-03 10:54:14 INFO http-nio-8080-exec-9] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-03 10:54:14 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, writer_user_id AS writerUserId,
        if(nick_name IS NULL , uid, nick_name) AS writerNm,
        pic AS writerPic, contents, location, a.created_at AS createdAt,
        if(c.feed_id IS NULL ,0 , 1) AS isLike
        FROM feed A
        JOIN user B
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c
        ON a.feed_id = c.feed_id
        AND c.user_id = 1
        ORDER BY a.feed_id DESC
        LIMIT 0,20
 {executed in 1 msec}
[2024-12-03 10:54:14 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|feed_id |writer_user_id |writernm |pic                                      |contents     |location |created_at          |islike |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|27      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |I am panguin |남극       |2024-11-29 17:07:59 |0      |
|26      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |I am panguin |남극       |2024-11-29 16:46:01 |0      |
|25      |5              |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |4123         |213      |2024-11-29 16:32:31 |0      |
|24      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |31231        |123      |2024-11-29 16:01:53 |0      |
|23      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |4754         |444      |2024-11-29 16:00:03 |0      |
|22      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |aaa          |aa       |2024-11-29 15:58:25 |0      |
|14      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:51:21 |1      |
|13      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:51:14 |1      |
|12      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:42:17 |1      |
|11      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |123          |33123    |2024-11-29 10:42:01 |0      |
|9       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |21123        |3        |2024-11-29 10:37:22 |0      |
|7       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-28 17:20:59 |1      |
|6       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |             |         |2024-11-28 17:15:01 |0      |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|

[2024-12-03 10:54:14 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 27
 {executed in 0 msec}
[2024-12-03 10:54:14 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5a0d637a-00c7-441f-a9fa-c0dc68af2602.jpg |
|-----------------------------------------|

[2024-12-03 10:54:14 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 27
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 10:54:14 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|----------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment   |writernm |pic                                      |
|--------|----------------|----------|---------|-----------------------------------------|
|5       |7               |2         |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |6               |123       |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |4               |ㅇ         |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |3               |왜 로그에 두번이 |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|--------|----------------|----------|---------|-----------------------------------------|

[2024-12-03 10:54:14 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 26
 {executed in 0 msec}
[2024-12-03 10:54:14 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3e5fe979-fe9c-4ed6-9ad7-c1dbf4f2538f.jpg |
|-----------------------------------------|

[2024-12-03 10:54:14 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 26
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 10:54:14 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|1       |9               |s       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|5       |8               |123     |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-03 10:54:14 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 25
 {executed in 1 msec}
[2024-12-03 10:54:14 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|8213634a-99df-42d8-963e-87bc120cc8a7.jpg |
|-----------------------------------------|

[2024-12-03 10:54:14 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 25
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 10:54:14 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 10:54:14 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 24
 {executed in 0 msec}
[2024-12-03 10:54:14 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|dfe6f2c1-3753-4a6a-aff4-0de7fa2786b8.jpg |
|-----------------------------------------|

[2024-12-03 10:54:14 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 24
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 10:54:14 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 10:54:14 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 23
 {executed in 0 msec}
[2024-12-03 10:54:14 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f3e6375d-35d8-4a4a-a976-26ca5c6abaac.jpg |
|-----------------------------------------|

[2024-12-03 10:54:14 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 23
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 10:54:14 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 10:54:14 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 22
 {executed in 0 msec}
[2024-12-03 10:54:14 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e97360ca-fe79-48c3-acaa-cd71042a0a78.tif |
|-----------------------------------------|

[2024-12-03 10:54:14 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 22
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 10:54:14 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 10:54:14 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 14
 {executed in 0 msec}
[2024-12-03 10:54:14 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a3709fe6-3e0d-4f04-8cef-1cc328c4fc0c.jpg |
|ada457b9-68aa-4a78-b0c8-c5035af844e2.jpg |
|-----------------------------------------|

[2024-12-03 10:54:14 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 14
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 10:54:14 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 10:54:14 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 13
 {executed in 0 msec}
[2024-12-03 10:54:14 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6fe5de58-57ef-47e7-80c7-49c0506ca143.jpg |
|920ca8e8-5dc2-4844-aa7f-d7782e94d380.jpg |
|-----------------------------------------|

[2024-12-03 10:54:14 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 13
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 10:54:14 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 10:54:14 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 12
 {executed in 0 msec}
[2024-12-03 10:54:14 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|84e77be4-2b62-4f40-8f8b-0803e1080449.jpg |
|84f31709-40aa-40eb-a7e7-da0219067927.jpg |
|-----------------------------------------|

[2024-12-03 10:54:14 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 12
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 10:54:14 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 10:54:14 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 11
 {executed in 0 msec}
[2024-12-03 10:54:14 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3fc51a83-46ea-43ca-a85b-6fad4794a2bd.jpg |
|49906eb9-a412-4428-a629-baccbe152c75.jpg |
|-----------------------------------------|

[2024-12-03 10:54:14 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 11
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 10:54:14 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 10:54:14 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 9
 {executed in 0 msec}
[2024-12-03 10:54:14 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|34669219-c5d3-4d84-a277-fd8c2b8bca4f.jpg |
|f1ed44ba-1254-4232-9a0d-65037abe1e9c.jpg |
|-----------------------------------------|

[2024-12-03 10:54:14 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 9
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 10:54:14 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 10:54:14 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 7
 {executed in 0 msec}
[2024-12-03 10:54:14 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|14ecfa41-07fc-40d0-b50b-3fe95a840992.jpg |
|2694c9a6-a7b3-4800-ac73-0c853e16a152.jpg |
|-----------------------------------------|

[2024-12-03 10:54:14 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 7
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 10:54:14 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 10:54:14 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 6
 {executed in 0 msec}
[2024-12-03 10:54:14 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3c31d519-96b0-49bd-8657-d1eac4fb3fc1.jpg |
|-----------------------------------------|

[2024-12-03 10:54:14 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 6
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 10:54:14 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 10:54:16 INFO http-nio-8080-exec-1] [com.green.greengramver2.feed.comment.FeedCommentController] feedCommentGet com.green.greengramver2.feed.comment.model.FeedCommentGetReq@1e09f7ff
[2024-12-03 10:54:38 INFO http-nio-8080-exec-5] [com.green.greengramver2.feed.comment.FeedCommentController] feedCommentGet com.green.greengramver2.feed.comment.model.FeedCommentGetReq@1edc8415
[2024-12-03 10:54:41 INFO http-nio-8080-exec-3] [com.green.greengramver2.feed.comment.FeedCommentController] feedCommentGet com.green.greengramver2.feed.comment.model.FeedCommentGetReq@72ed9fe5
[2024-12-03 10:54:43 INFO http-nio-8080-exec-5] [com.green.greengramver2.feed.model.FeedGetReq] FeedGetReq 1,null,1
[2024-12-03 10:54:43 INFO http-nio-8080-exec-5] [com.green.greengramver2.feed.FeedController] feedC getFeedList p: FeedGetReq(super=Paging(page=1, size=20, sIdx=0), signedUserId=1)
[2024-12-03 10:54:43 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, writer_user_id AS writerUserId,
        if(nick_name IS NULL , uid, nick_name) AS writerNm,
        pic AS writerPic, contents, location, a.created_at AS createdAt,
        if(c.feed_id IS NULL ,0 , 1) AS isLike
        FROM feed A
        JOIN user B
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c
        ON a.feed_id = c.feed_id
        AND c.user_id = 1
        ORDER BY a.feed_id DESC
        LIMIT 0,20
 {executed in 1 msec}
[2024-12-03 10:54:43 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|feed_id |writer_user_id |writernm |pic                                      |contents     |location |created_at          |islike |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|27      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |I am panguin |남극       |2024-11-29 17:07:59 |0      |
|26      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |I am panguin |남극       |2024-11-29 16:46:01 |0      |
|25      |5              |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |4123         |213      |2024-11-29 16:32:31 |0      |
|24      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |31231        |123      |2024-11-29 16:01:53 |0      |
|23      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |4754         |444      |2024-11-29 16:00:03 |0      |
|22      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |aaa          |aa       |2024-11-29 15:58:25 |0      |
|14      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:51:21 |1      |
|13      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:51:14 |1      |
|12      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:42:17 |1      |
|11      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |123          |33123    |2024-11-29 10:42:01 |0      |
|9       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |21123        |3        |2024-11-29 10:37:22 |0      |
|7       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-28 17:20:59 |1      |
|6       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |             |         |2024-11-28 17:15:01 |0      |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|

[2024-12-03 10:54:43 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 27
 {executed in 1 msec}
[2024-12-03 10:54:43 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5a0d637a-00c7-441f-a9fa-c0dc68af2602.jpg |
|-----------------------------------------|

[2024-12-03 10:54:43 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 27
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 10:54:43 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|--------|----------------|----------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment   |writernm |pic                                      |
|--------|----------------|----------|---------|-----------------------------------------|
|5       |7               |2         |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |6               |123       |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |4               |ㅇ         |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |3               |왜 로그에 두번이 |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|--------|----------------|----------|---------|-----------------------------------------|

[2024-12-03 10:54:43 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 26
 {executed in 2 msec}
[2024-12-03 10:54:43 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3e5fe979-fe9c-4ed6-9ad7-c1dbf4f2538f.jpg |
|-----------------------------------------|

[2024-12-03 10:54:43 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 26
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 2 msec}
[2024-12-03 10:54:43 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|1       |9               |s       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|5       |8               |123     |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-03 10:54:43 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 25
 {executed in 1 msec}
[2024-12-03 10:54:43 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|8213634a-99df-42d8-963e-87bc120cc8a7.jpg |
|-----------------------------------------|

[2024-12-03 10:54:43 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 25
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 10:54:43 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 10:54:43 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 24
 {executed in 1 msec}
[2024-12-03 10:54:43 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|dfe6f2c1-3753-4a6a-aff4-0de7fa2786b8.jpg |
|-----------------------------------------|

[2024-12-03 10:54:43 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 24
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 10:54:43 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 10:54:43 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 23
 {executed in 0 msec}
[2024-12-03 10:54:43 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f3e6375d-35d8-4a4a-a976-26ca5c6abaac.jpg |
|-----------------------------------------|

[2024-12-03 10:54:43 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 23
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 10:54:43 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 10:54:43 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 22
 {executed in 0 msec}
[2024-12-03 10:54:43 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e97360ca-fe79-48c3-acaa-cd71042a0a78.tif |
|-----------------------------------------|

[2024-12-03 10:54:43 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 22
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 10:54:43 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 10:54:43 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 14
 {executed in 0 msec}
[2024-12-03 10:54:43 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a3709fe6-3e0d-4f04-8cef-1cc328c4fc0c.jpg |
|ada457b9-68aa-4a78-b0c8-c5035af844e2.jpg |
|-----------------------------------------|

[2024-12-03 10:54:43 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 14
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 10:54:43 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 10:54:43 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 13
 {executed in 0 msec}
[2024-12-03 10:54:43 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6fe5de58-57ef-47e7-80c7-49c0506ca143.jpg |
|920ca8e8-5dc2-4844-aa7f-d7782e94d380.jpg |
|-----------------------------------------|

[2024-12-03 10:54:43 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 13
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 10:54:43 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 10:54:43 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 12
 {executed in 0 msec}
[2024-12-03 10:54:43 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|84e77be4-2b62-4f40-8f8b-0803e1080449.jpg |
|84f31709-40aa-40eb-a7e7-da0219067927.jpg |
|-----------------------------------------|

[2024-12-03 10:54:43 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 12
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 10:54:43 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 10:54:43 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 11
 {executed in 0 msec}
[2024-12-03 10:54:43 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3fc51a83-46ea-43ca-a85b-6fad4794a2bd.jpg |
|49906eb9-a412-4428-a629-baccbe152c75.jpg |
|-----------------------------------------|

[2024-12-03 10:54:43 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 11
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 10:54:43 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 10:54:43 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 9
 {executed in 0 msec}
[2024-12-03 10:54:43 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|34669219-c5d3-4d84-a277-fd8c2b8bca4f.jpg |
|f1ed44ba-1254-4232-9a0d-65037abe1e9c.jpg |
|-----------------------------------------|

[2024-12-03 10:54:43 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 9
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 10:54:43 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 10:54:43 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 7
 {executed in 0 msec}
[2024-12-03 10:54:43 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|14ecfa41-07fc-40d0-b50b-3fe95a840992.jpg |
|2694c9a6-a7b3-4800-ac73-0c853e16a152.jpg |
|-----------------------------------------|

[2024-12-03 10:54:43 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 7
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 10:54:43 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 10:54:43 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 6
 {executed in 0 msec}
[2024-12-03 10:54:43 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3c31d519-96b0-49bd-8657-d1eac4fb3fc1.jpg |
|-----------------------------------------|

[2024-12-03 10:54:43 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 6
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 10:54:43 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 10:54:46 INFO http-nio-8080-exec-7] [com.green.greengramver2.feed.comment.FeedCommentController] feedCommentGet com.green.greengramver2.feed.comment.model.FeedCommentGetReq@60d96256
[2024-12-03 10:55:59 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-03 10:55:59 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-03 10:56:01 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 6008 (D:\Students\jang jin seong\GreenGramVer2\build\classes\java\main started by Administrator in D:\Students\jang jin seong\GreenGramVer2)
[2024-12-03 10:56:01 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-03 10:56:01 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-03 10:56:01 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-03 10:56:02 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-03 10:56:02 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-03 10:56:02 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-03 10:56:02 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-03 10:56:02 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-03 10:56:02 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 904 ms
[2024-12-03 10:56:02 INFO restartedMain] [com.green.greengramver2.common.MyFileUtils] MFU 생성자: D:\Students\jang jin seong\download\greengram_ver2
[2024-12-03 10:56:03 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-03 10:56:03 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-03 10:56:03 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-03 10:56:03 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-03 10:56:03 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Started GreenGramVer2Application in 1.909 seconds (process running for 2.377)
[2024-12-03 10:56:05 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-03 10:56:05 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-03 10:56:05 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-03 10:56:05 INFO http-nio-8080-exec-2] [com.green.greengramver2.feed.model.FeedGetReq] FeedGetReq 1,null,1
[2024-12-03 10:56:05 INFO http-nio-8080-exec-2] [com.green.greengramver2.feed.FeedController] feedC getFeedList p: FeedGetReq(super=Paging(page=1, size=20, sIdx=0), signedUserId=1)
[2024-12-03 10:56:05 INFO http-nio-8080-exec-2] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-03 10:56:05 INFO http-nio-8080-exec-2] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@49e596fe
[2024-12-03 10:56:05 INFO http-nio-8080-exec-2] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-03 10:56:05 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, writer_user_id AS writerUserId,
        if(nick_name IS NULL , uid, nick_name) AS writerNm,
        pic AS writerPic, contents, location, a.created_at AS createdAt,
        if(c.feed_id IS NULL ,0 , 1) AS isLike
        FROM feed A
        JOIN user B
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c
        ON a.feed_id = c.feed_id
        AND c.user_id = 1
        ORDER BY a.feed_id DESC
        LIMIT 0,20
 {executed in 1 msec}
[2024-12-03 10:56:05 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|feed_id |writer_user_id |writernm |pic                                      |contents     |location |created_at          |islike |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|27      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |I am panguin |남극       |2024-11-29 17:07:59 |0      |
|26      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |I am panguin |남극       |2024-11-29 16:46:01 |0      |
|25      |5              |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |4123         |213      |2024-11-29 16:32:31 |0      |
|24      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |31231        |123      |2024-11-29 16:01:53 |0      |
|23      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |4754         |444      |2024-11-29 16:00:03 |0      |
|22      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |aaa          |aa       |2024-11-29 15:58:25 |0      |
|14      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:51:21 |1      |
|13      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:51:14 |1      |
|12      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:42:17 |1      |
|11      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |123          |33123    |2024-11-29 10:42:01 |0      |
|9       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |21123        |3        |2024-11-29 10:37:22 |0      |
|7       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-28 17:20:59 |1      |
|6       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |             |         |2024-11-28 17:15:01 |0      |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|

[2024-12-03 10:56:05 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 27
 {executed in 1 msec}
[2024-12-03 10:56:05 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5a0d637a-00c7-441f-a9fa-c0dc68af2602.jpg |
|-----------------------------------------|

[2024-12-03 10:56:05 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 27
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 10:56:05 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|----------------|----------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment   |writernm |pic                                      |
|--------|----------------|----------|---------|-----------------------------------------|
|5       |7               |2         |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |6               |123       |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |4               |ㅇ         |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |3               |왜 로그에 두번이 |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|--------|----------------|----------|---------|-----------------------------------------|

[2024-12-03 10:56:05 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 26
 {executed in 1 msec}
[2024-12-03 10:56:05 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3e5fe979-fe9c-4ed6-9ad7-c1dbf4f2538f.jpg |
|-----------------------------------------|

[2024-12-03 10:56:05 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 26
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 10:56:05 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|1       |9               |s       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|5       |8               |123     |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-03 10:56:05 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 25
 {executed in 0 msec}
[2024-12-03 10:56:05 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|8213634a-99df-42d8-963e-87bc120cc8a7.jpg |
|-----------------------------------------|

[2024-12-03 10:56:05 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 25
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 10:56:05 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 10:56:05 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 24
 {executed in 0 msec}
[2024-12-03 10:56:05 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|dfe6f2c1-3753-4a6a-aff4-0de7fa2786b8.jpg |
|-----------------------------------------|

[2024-12-03 10:56:05 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 24
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 10:56:05 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 10:56:05 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 23
 {executed in 0 msec}
[2024-12-03 10:56:05 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f3e6375d-35d8-4a4a-a976-26ca5c6abaac.jpg |
|-----------------------------------------|

[2024-12-03 10:56:05 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 23
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 10:56:05 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 10:56:05 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 22
 {executed in 0 msec}
[2024-12-03 10:56:05 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e97360ca-fe79-48c3-acaa-cd71042a0a78.tif |
|-----------------------------------------|

[2024-12-03 10:56:05 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 22
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 10:56:05 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 10:56:05 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 14
 {executed in 1 msec}
[2024-12-03 10:56:05 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a3709fe6-3e0d-4f04-8cef-1cc328c4fc0c.jpg |
|ada457b9-68aa-4a78-b0c8-c5035af844e2.jpg |
|-----------------------------------------|

[2024-12-03 10:56:05 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 14
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 10:56:05 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 10:56:05 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 13
 {executed in 0 msec}
[2024-12-03 10:56:05 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6fe5de58-57ef-47e7-80c7-49c0506ca143.jpg |
|920ca8e8-5dc2-4844-aa7f-d7782e94d380.jpg |
|-----------------------------------------|

[2024-12-03 10:56:05 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 13
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 10:56:05 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 10:56:05 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 12
 {executed in 0 msec}
[2024-12-03 10:56:05 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|84e77be4-2b62-4f40-8f8b-0803e1080449.jpg |
|84f31709-40aa-40eb-a7e7-da0219067927.jpg |
|-----------------------------------------|

[2024-12-03 10:56:05 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 12
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 10:56:05 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 10:56:05 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 11
 {executed in 0 msec}
[2024-12-03 10:56:05 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3fc51a83-46ea-43ca-a85b-6fad4794a2bd.jpg |
|49906eb9-a412-4428-a629-baccbe152c75.jpg |
|-----------------------------------------|

[2024-12-03 10:56:05 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 11
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 10:56:05 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 10:56:05 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 9
 {executed in 0 msec}
[2024-12-03 10:56:05 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|34669219-c5d3-4d84-a277-fd8c2b8bca4f.jpg |
|f1ed44ba-1254-4232-9a0d-65037abe1e9c.jpg |
|-----------------------------------------|

[2024-12-03 10:56:05 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 9
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 10:56:05 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 10:56:05 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 7
 {executed in 0 msec}
[2024-12-03 10:56:05 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|14ecfa41-07fc-40d0-b50b-3fe95a840992.jpg |
|2694c9a6-a7b3-4800-ac73-0c853e16a152.jpg |
|-----------------------------------------|

[2024-12-03 10:56:05 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 7
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 10:56:05 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 10:56:05 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 6
 {executed in 0 msec}
[2024-12-03 10:56:05 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3c31d519-96b0-49bd-8657-d1eac4fb3fc1.jpg |
|-----------------------------------------|

[2024-12-03 10:56:05 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 6
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 10:56:05 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 10:56:07 INFO http-nio-8080-exec-1] [com.green.greengramver2.feed.comment.FeedCommentController] feedCommentGet : FeedCommentGetReq(feedId=0, page=0, size=21, sIdx=26)
[2024-12-03 10:56:07 INFO http-nio-8080-exec-1] [com.green.greengramver2.feed.comment.FeedCommentController] feedCommentGet : FeedCommentGetReq(feedId=0, page=0, size=21, sIdx=26)
[2024-12-03 10:58:11 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-03 10:58:11 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-03 10:58:13 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 10648 (D:\Students\jang jin seong\GreenGramVer2\build\classes\java\main started by Administrator in D:\Students\jang jin seong\GreenGramVer2)
[2024-12-03 10:58:13 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-03 10:58:13 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-03 10:58:13 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-03 10:58:14 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-03 10:58:14 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-03 10:58:14 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-03 10:58:14 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-03 10:58:14 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-03 10:58:14 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 785 ms
[2024-12-03 10:58:14 INFO restartedMain] [com.green.greengramver2.common.MyFileUtils] MFU 생성자: D:\Students\jang jin seong\download\greengram_ver2
[2024-12-03 10:58:14 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-03 10:58:14 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-03 10:58:14 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-03 10:58:14 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-03 10:58:14 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Started GreenGramVer2Application in 1.671 seconds (process running for 2.026)
[2024-12-03 10:58:17 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-03 10:58:17 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-03 10:58:17 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-03 10:58:17 INFO http-nio-8080-exec-9] [com.green.greengramver2.feed.model.FeedGetReq] FeedGetReq 1,null,1
[2024-12-03 10:58:17 INFO http-nio-8080-exec-9] [com.green.greengramver2.feed.FeedController] feedC getFeedList p: FeedGetReq(super=Paging(page=1, size=20, sIdx=0), signedUserId=1)
[2024-12-03 10:58:17 INFO http-nio-8080-exec-9] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-03 10:58:17 INFO http-nio-8080-exec-9] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@16eee1bf
[2024-12-03 10:58:17 INFO http-nio-8080-exec-9] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-03 10:58:17 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, writer_user_id AS writerUserId,
        if(nick_name IS NULL , uid, nick_name) AS writerNm,
        pic AS writerPic, contents, location, a.created_at AS createdAt,
        if(c.feed_id IS NULL ,0 , 1) AS isLike
        FROM feed A
        JOIN user B
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c
        ON a.feed_id = c.feed_id
        AND c.user_id = 1
        ORDER BY a.feed_id DESC
        LIMIT 0,20
 {executed in 1 msec}
[2024-12-03 10:58:17 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|feed_id |writer_user_id |writernm |pic                                      |contents     |location |created_at          |islike |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|27      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |I am panguin |남극       |2024-11-29 17:07:59 |0      |
|26      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |I am panguin |남극       |2024-11-29 16:46:01 |0      |
|25      |5              |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |4123         |213      |2024-11-29 16:32:31 |0      |
|24      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |31231        |123      |2024-11-29 16:01:53 |0      |
|23      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |4754         |444      |2024-11-29 16:00:03 |0      |
|22      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |aaa          |aa       |2024-11-29 15:58:25 |0      |
|14      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:51:21 |1      |
|13      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:51:14 |1      |
|12      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:42:17 |1      |
|11      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |123          |33123    |2024-11-29 10:42:01 |0      |
|9       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |21123        |3        |2024-11-29 10:37:22 |0      |
|7       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-28 17:20:59 |1      |
|6       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |             |         |2024-11-28 17:15:01 |0      |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|

[2024-12-03 10:58:17 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 27
 {executed in 0 msec}
[2024-12-03 10:58:17 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5a0d637a-00c7-441f-a9fa-c0dc68af2602.jpg |
|-----------------------------------------|

[2024-12-03 10:58:17 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 27
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 10:58:17 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|----------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment   |writernm |pic                                      |
|--------|----------------|----------|---------|-----------------------------------------|
|5       |7               |2         |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |6               |123       |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |4               |ㅇ         |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |3               |왜 로그에 두번이 |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|--------|----------------|----------|---------|-----------------------------------------|

[2024-12-03 10:58:17 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 26
 {executed in 0 msec}
[2024-12-03 10:58:17 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3e5fe979-fe9c-4ed6-9ad7-c1dbf4f2538f.jpg |
|-----------------------------------------|

[2024-12-03 10:58:17 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 26
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 10:58:17 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|1       |9               |s       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|5       |8               |123     |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-03 10:58:17 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 25
 {executed in 0 msec}
[2024-12-03 10:58:17 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|8213634a-99df-42d8-963e-87bc120cc8a7.jpg |
|-----------------------------------------|

[2024-12-03 10:58:17 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 25
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 10:58:17 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 10:58:17 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 24
 {executed in 0 msec}
[2024-12-03 10:58:17 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|dfe6f2c1-3753-4a6a-aff4-0de7fa2786b8.jpg |
|-----------------------------------------|

[2024-12-03 10:58:17 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 24
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 10:58:17 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 10:58:17 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 23
 {executed in 0 msec}
[2024-12-03 10:58:17 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f3e6375d-35d8-4a4a-a976-26ca5c6abaac.jpg |
|-----------------------------------------|

[2024-12-03 10:58:17 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 23
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 10:58:17 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 10:58:17 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 22
 {executed in 0 msec}
[2024-12-03 10:58:17 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e97360ca-fe79-48c3-acaa-cd71042a0a78.tif |
|-----------------------------------------|

[2024-12-03 10:58:17 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 22
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 10:58:17 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 10:58:17 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 14
 {executed in 0 msec}
[2024-12-03 10:58:17 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a3709fe6-3e0d-4f04-8cef-1cc328c4fc0c.jpg |
|ada457b9-68aa-4a78-b0c8-c5035af844e2.jpg |
|-----------------------------------------|

[2024-12-03 10:58:17 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 14
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 10:58:17 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 10:58:17 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 13
 {executed in 0 msec}
[2024-12-03 10:58:17 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6fe5de58-57ef-47e7-80c7-49c0506ca143.jpg |
|920ca8e8-5dc2-4844-aa7f-d7782e94d380.jpg |
|-----------------------------------------|

[2024-12-03 10:58:17 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 13
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 10:58:17 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 10:58:17 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 12
 {executed in 0 msec}
[2024-12-03 10:58:17 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|84e77be4-2b62-4f40-8f8b-0803e1080449.jpg |
|84f31709-40aa-40eb-a7e7-da0219067927.jpg |
|-----------------------------------------|

[2024-12-03 10:58:17 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 12
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 10:58:17 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 10:58:17 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 11
 {executed in 0 msec}
[2024-12-03 10:58:17 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3fc51a83-46ea-43ca-a85b-6fad4794a2bd.jpg |
|49906eb9-a412-4428-a629-baccbe152c75.jpg |
|-----------------------------------------|

[2024-12-03 10:58:17 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 11
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 10:58:17 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 10:58:17 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 9
 {executed in 0 msec}
[2024-12-03 10:58:17 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|34669219-c5d3-4d84-a277-fd8c2b8bca4f.jpg |
|f1ed44ba-1254-4232-9a0d-65037abe1e9c.jpg |
|-----------------------------------------|

[2024-12-03 10:58:17 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 9
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 10:58:17 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 10:58:17 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 7
 {executed in 0 msec}
[2024-12-03 10:58:17 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|14ecfa41-07fc-40d0-b50b-3fe95a840992.jpg |
|2694c9a6-a7b3-4800-ac73-0c853e16a152.jpg |
|-----------------------------------------|

[2024-12-03 10:58:17 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 7
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 10:58:17 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 10:58:17 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 6
 {executed in 0 msec}
[2024-12-03 10:58:17 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3c31d519-96b0-49bd-8657-d1eac4fb3fc1.jpg |
|-----------------------------------------|

[2024-12-03 10:58:17 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 6
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 10:58:17 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 10:58:20 INFO http-nio-8080-exec-1] [com.green.greengramver2.feed.comment.FeedCommentController] feedCommentGet : FeedCommentGetReq(feedId=0, page=0, size=21, sIdx=26)
[2024-12-03 10:58:20 INFO http-nio-8080-exec-1] [com.green.greengramver2.feed.comment.FeedCommentController] feedCommentGet : FeedCommentGetReq(feedId=0, page=0, size=21, sIdx=26)
[2024-12-03 10:58:57 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-03 10:58:57 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-03 10:58:59 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 6836 (D:\Students\jang jin seong\GreenGramVer2\build\classes\java\main started by Administrator in D:\Students\jang jin seong\GreenGramVer2)
[2024-12-03 10:58:59 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-03 10:58:59 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-03 10:58:59 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-03 10:59:00 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-03 10:59:00 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-03 10:59:00 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-03 10:59:00 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-03 10:59:00 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-03 10:59:00 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 776 ms
[2024-12-03 10:59:00 INFO restartedMain] [com.green.greengramver2.common.MyFileUtils] MFU 생성자: D:\Students\jang jin seong\download\greengram_ver2
[2024-12-03 10:59:00 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-03 10:59:00 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-03 10:59:00 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-03 10:59:00 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-03 10:59:00 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Started GreenGramVer2Application in 1.639 seconds (process running for 1.991)
[2024-12-03 10:59:03 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-03 10:59:03 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-03 10:59:03 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-03 10:59:03 INFO http-nio-8080-exec-4] [com.green.greengramver2.feed.model.FeedGetReq] FeedGetReq 1,null,1
[2024-12-03 10:59:03 INFO http-nio-8080-exec-4] [com.green.greengramver2.feed.FeedController] feedC getFeedList p: FeedGetReq(super=Paging(page=1, size=20, sIdx=0), signedUserId=1)
[2024-12-03 10:59:04 INFO http-nio-8080-exec-4] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-03 10:59:04 INFO http-nio-8080-exec-4] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@5d60cdeb
[2024-12-03 10:59:04 INFO http-nio-8080-exec-4] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-03 10:59:04 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, writer_user_id AS writerUserId,
        if(nick_name IS NULL , uid, nick_name) AS writerNm,
        pic AS writerPic, contents, location, a.created_at AS createdAt,
        if(c.feed_id IS NULL ,0 , 1) AS isLike
        FROM feed A
        JOIN user B
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c
        ON a.feed_id = c.feed_id
        AND c.user_id = 1
        ORDER BY a.feed_id DESC
        LIMIT 0,20
 {executed in 1 msec}
[2024-12-03 10:59:04 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|feed_id |writer_user_id |writernm |pic                                      |contents     |location |created_at          |islike |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|27      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |I am panguin |남극       |2024-11-29 17:07:59 |0      |
|26      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |I am panguin |남극       |2024-11-29 16:46:01 |0      |
|25      |5              |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |4123         |213      |2024-11-29 16:32:31 |0      |
|24      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |31231        |123      |2024-11-29 16:01:53 |0      |
|23      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |4754         |444      |2024-11-29 16:00:03 |0      |
|22      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |aaa          |aa       |2024-11-29 15:58:25 |0      |
|14      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:51:21 |1      |
|13      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:51:14 |1      |
|12      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:42:17 |1      |
|11      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |123          |33123    |2024-11-29 10:42:01 |0      |
|9       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |21123        |3        |2024-11-29 10:37:22 |0      |
|7       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-28 17:20:59 |1      |
|6       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |             |         |2024-11-28 17:15:01 |0      |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|

[2024-12-03 10:59:04 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 27
 {executed in 0 msec}
[2024-12-03 10:59:04 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5a0d637a-00c7-441f-a9fa-c0dc68af2602.jpg |
|-----------------------------------------|

[2024-12-03 10:59:04 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 27
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 10:59:04 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|----------------|----------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment   |writernm |pic                                      |
|--------|----------------|----------|---------|-----------------------------------------|
|5       |7               |2         |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |6               |123       |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |4               |ㅇ         |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |3               |왜 로그에 두번이 |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|--------|----------------|----------|---------|-----------------------------------------|

[2024-12-03 10:59:04 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 26
 {executed in 0 msec}
[2024-12-03 10:59:04 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3e5fe979-fe9c-4ed6-9ad7-c1dbf4f2538f.jpg |
|-----------------------------------------|

[2024-12-03 10:59:04 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 26
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 10:59:04 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|1       |9               |s       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|5       |8               |123     |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-03 10:59:04 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 25
 {executed in 0 msec}
[2024-12-03 10:59:04 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|8213634a-99df-42d8-963e-87bc120cc8a7.jpg |
|-----------------------------------------|

[2024-12-03 10:59:04 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 25
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 10:59:04 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 10:59:04 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 24
 {executed in 0 msec}
[2024-12-03 10:59:04 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|dfe6f2c1-3753-4a6a-aff4-0de7fa2786b8.jpg |
|-----------------------------------------|

[2024-12-03 10:59:04 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 24
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 10:59:04 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 10:59:04 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 23
 {executed in 0 msec}
[2024-12-03 10:59:04 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f3e6375d-35d8-4a4a-a976-26ca5c6abaac.jpg |
|-----------------------------------------|

[2024-12-03 10:59:04 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 23
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 10:59:04 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 10:59:04 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 22
 {executed in 1 msec}
[2024-12-03 10:59:04 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e97360ca-fe79-48c3-acaa-cd71042a0a78.tif |
|-----------------------------------------|

[2024-12-03 10:59:04 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 22
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 10:59:04 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 10:59:04 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 14
 {executed in 1 msec}
[2024-12-03 10:59:04 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a3709fe6-3e0d-4f04-8cef-1cc328c4fc0c.jpg |
|ada457b9-68aa-4a78-b0c8-c5035af844e2.jpg |
|-----------------------------------------|

[2024-12-03 10:59:04 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 14
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 10:59:04 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 10:59:04 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 13
 {executed in 0 msec}
[2024-12-03 10:59:04 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6fe5de58-57ef-47e7-80c7-49c0506ca143.jpg |
|920ca8e8-5dc2-4844-aa7f-d7782e94d380.jpg |
|-----------------------------------------|

[2024-12-03 10:59:04 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 13
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 10:59:04 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 10:59:04 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 12
 {executed in 0 msec}
[2024-12-03 10:59:04 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|84e77be4-2b62-4f40-8f8b-0803e1080449.jpg |
|84f31709-40aa-40eb-a7e7-da0219067927.jpg |
|-----------------------------------------|

[2024-12-03 10:59:04 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 12
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 10:59:04 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 10:59:04 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 11
 {executed in 0 msec}
[2024-12-03 10:59:04 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3fc51a83-46ea-43ca-a85b-6fad4794a2bd.jpg |
|49906eb9-a412-4428-a629-baccbe152c75.jpg |
|-----------------------------------------|

[2024-12-03 10:59:04 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 11
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 10:59:04 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 10:59:04 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 9
 {executed in 0 msec}
[2024-12-03 10:59:04 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|34669219-c5d3-4d84-a277-fd8c2b8bca4f.jpg |
|f1ed44ba-1254-4232-9a0d-65037abe1e9c.jpg |
|-----------------------------------------|

[2024-12-03 10:59:04 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 9
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 10:59:04 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 10:59:04 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 7
 {executed in 0 msec}
[2024-12-03 10:59:04 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|14ecfa41-07fc-40d0-b50b-3fe95a840992.jpg |
|2694c9a6-a7b3-4800-ac73-0c853e16a152.jpg |
|-----------------------------------------|

[2024-12-03 10:59:04 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 7
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 10:59:04 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 10:59:04 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 6
 {executed in 0 msec}
[2024-12-03 10:59:04 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3c31d519-96b0-49bd-8657-d1eac4fb3fc1.jpg |
|-----------------------------------------|

[2024-12-03 10:59:04 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 6
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 10:59:04 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 10:59:06 INFO http-nio-8080-exec-1] [com.green.greengramver2.feed.comment.FeedCommentController] 2
[2024-12-03 10:59:06 INFO http-nio-8080-exec-1] [com.green.greengramver2.feed.comment.FeedCommentController] feedCommentGet : FeedCommentGetReq(feedId=0, page=0, size=21, sIdx=26)
[2024-12-03 10:59:06 INFO http-nio-8080-exec-1] [com.green.greengramver2.feed.comment.FeedCommentController] feedCommentGet : FeedCommentGetReq(feedId=0, page=0, size=21, sIdx=26)
[2024-12-03 11:04:15 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 2 class path changes (0 additions, 0 deletions, 2 modifications)
[2024-12-03 11:04:15 INFO Thread-5] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-03 11:04:15 INFO Thread-5] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-03 11:04:15 INFO Thread-5] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-03 11:04:15 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 6836 (D:\Students\jang jin seong\GreenGramVer2\build\classes\java\main started by Administrator in D:\Students\jang jin seong\GreenGramVer2)
[2024-12-03 11:04:15 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-03 11:04:15 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-03 11:04:15 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-03 11:04:15 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-03 11:04:15 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-03 11:04:15 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-03 11:04:15 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 203 ms
[2024-12-03 11:04:15 INFO restartedMain] [com.green.greengramver2.common.MyFileUtils] MFU 생성자: D:\Students\jang jin seong\download\greengram_ver2
[2024-12-03 11:04:15 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-03 11:04:15 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-03 11:04:15 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-03 11:04:15 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-03 11:04:15 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Started GreenGramVer2Application in 0.379 seconds (process running for 317.0)
[2024-12-03 11:04:15 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-03 11:04:16 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-03 11:04:16 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-03 11:04:16 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 2 ms
[2024-12-03 11:04:16 INFO http-nio-8080-exec-1] [com.green.greengramver2.feed.comment.FeedCommentController] 3
[2024-12-03 11:04:16 INFO http-nio-8080-exec-1] [com.green.greengramver2.feed.comment.FeedCommentController] feedCommentGet : FeedCommentGetReq(feedId=0, page=0, size=21, sIdx=46)
[2024-12-03 11:04:16 INFO http-nio-8080-exec-1] [com.green.greengramver2.feed.comment.FeedCommentController] feedCommentGet : FeedCommentGetReq(feedId=0, page=0, size=21, sIdx=46)
[2024-12-03 11:04:20 INFO http-nio-8080-exec-10] [com.green.greengramver2.feed.model.FeedGetReq] FeedGetReq 1,null,1
[2024-12-03 11:04:20 INFO http-nio-8080-exec-10] [com.green.greengramver2.feed.FeedController] feedC getFeedList p: FeedGetReq(super=Paging(page=1, size=20, sIdx=0), signedUserId=1)
[2024-12-03 11:04:20 INFO http-nio-8080-exec-10] [com.zaxxer.hikari.HikariDataSource] HikariPool-2 - Starting...
[2024-12-03 11:04:20 INFO http-nio-8080-exec-10] [com.zaxxer.hikari.pool.HikariPool] HikariPool-2 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@7b916d6e
[2024-12-03 11:04:20 INFO http-nio-8080-exec-10] [com.zaxxer.hikari.HikariDataSource] HikariPool-2 - Start completed.
[2024-12-03 11:04:20 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT a.feed_id AS feedId, writer_user_id AS writerUserId,
        if(nick_name IS NULL , uid, nick_name) AS writerNm,
        pic AS writerPic, contents, location, a.created_at AS createdAt,
        if(c.feed_id IS NULL ,0 , 1) AS isLike
        FROM feed A
        JOIN user B
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c
        ON a.feed_id = c.feed_id
        AND c.user_id = 1
        ORDER BY a.feed_id DESC
        LIMIT 0,20
 {executed in 0 msec}
[2024-12-03 11:04:20 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|feed_id |writer_user_id |writernm |pic                                      |contents     |location |created_at          |islike |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|27      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |I am panguin |남극       |2024-11-29 17:07:59 |0      |
|26      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |I am panguin |남극       |2024-11-29 16:46:01 |0      |
|25      |5              |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |4123         |213      |2024-11-29 16:32:31 |0      |
|24      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |31231        |123      |2024-11-29 16:01:53 |0      |
|23      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |4754         |444      |2024-11-29 16:00:03 |0      |
|22      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |aaa          |aa       |2024-11-29 15:58:25 |0      |
|14      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:51:21 |1      |
|13      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:51:14 |1      |
|12      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:42:17 |1      |
|11      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |123          |33123    |2024-11-29 10:42:01 |0      |
|9       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |21123        |3        |2024-11-29 10:37:22 |0      |
|7       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-28 17:20:59 |1      |
|6       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |             |         |2024-11-28 17:15:01 |0      |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|

[2024-12-03 11:04:20 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
        from feed_pics
        where feed_id = 27
 {executed in 0 msec}
[2024-12-03 11:04:20 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5a0d637a-00c7-441f-a9fa-c0dc68af2602.jpg |
|-----------------------------------------|

[2024-12-03 11:04:20 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 27
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:04:20 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|----------------|----------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment   |writernm |pic                                      |
|--------|----------------|----------|---------|-----------------------------------------|
|5       |7               |2         |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |6               |123       |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |4               |ㅇ         |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |3               |왜 로그에 두번이 |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|--------|----------------|----------|---------|-----------------------------------------|

[2024-12-03 11:04:20 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
        from feed_pics
        where feed_id = 26
 {executed in 0 msec}
[2024-12-03 11:04:20 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3e5fe979-fe9c-4ed6-9ad7-c1dbf4f2538f.jpg |
|-----------------------------------------|

[2024-12-03 11:04:20 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 26
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:04:20 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|1       |9               |s       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|5       |8               |123     |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-03 11:04:20 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
        from feed_pics
        where feed_id = 25
 {executed in 1 msec}
[2024-12-03 11:04:20 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|8213634a-99df-42d8-963e-87bc120cc8a7.jpg |
|-----------------------------------------|

[2024-12-03 11:04:20 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 25
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:04:20 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:04:20 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
        from feed_pics
        where feed_id = 24
 {executed in 0 msec}
[2024-12-03 11:04:20 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|dfe6f2c1-3753-4a6a-aff4-0de7fa2786b8.jpg |
|-----------------------------------------|

[2024-12-03 11:04:20 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 24
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:04:20 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:04:20 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
        from feed_pics
        where feed_id = 23
 {executed in 0 msec}
[2024-12-03 11:04:20 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f3e6375d-35d8-4a4a-a976-26ca5c6abaac.jpg |
|-----------------------------------------|

[2024-12-03 11:04:20 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 23
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:04:20 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:04:20 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
        from feed_pics
        where feed_id = 22
 {executed in 1 msec}
[2024-12-03 11:04:20 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e97360ca-fe79-48c3-acaa-cd71042a0a78.tif |
|-----------------------------------------|

[2024-12-03 11:04:20 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 22
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:04:20 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:04:20 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
        from feed_pics
        where feed_id = 14
 {executed in 0 msec}
[2024-12-03 11:04:20 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a3709fe6-3e0d-4f04-8cef-1cc328c4fc0c.jpg |
|ada457b9-68aa-4a78-b0c8-c5035af844e2.jpg |
|-----------------------------------------|

[2024-12-03 11:04:20 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 14
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 11:04:20 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:04:20 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
        from feed_pics
        where feed_id = 13
 {executed in 0 msec}
[2024-12-03 11:04:20 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6fe5de58-57ef-47e7-80c7-49c0506ca143.jpg |
|920ca8e8-5dc2-4844-aa7f-d7782e94d380.jpg |
|-----------------------------------------|

[2024-12-03 11:04:20 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 13
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:04:20 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:04:20 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
        from feed_pics
        where feed_id = 12
 {executed in 0 msec}
[2024-12-03 11:04:20 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|84e77be4-2b62-4f40-8f8b-0803e1080449.jpg |
|84f31709-40aa-40eb-a7e7-da0219067927.jpg |
|-----------------------------------------|

[2024-12-03 11:04:20 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 12
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:04:20 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:04:20 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
        from feed_pics
        where feed_id = 11
 {executed in 0 msec}
[2024-12-03 11:04:20 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3fc51a83-46ea-43ca-a85b-6fad4794a2bd.jpg |
|49906eb9-a412-4428-a629-baccbe152c75.jpg |
|-----------------------------------------|

[2024-12-03 11:04:20 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 11
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 11:04:20 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:04:20 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
        from feed_pics
        where feed_id = 9
 {executed in 1 msec}
[2024-12-03 11:04:20 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|34669219-c5d3-4d84-a277-fd8c2b8bca4f.jpg |
|f1ed44ba-1254-4232-9a0d-65037abe1e9c.jpg |
|-----------------------------------------|

[2024-12-03 11:04:20 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 9
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:04:20 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:04:20 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
        from feed_pics
        where feed_id = 7
 {executed in 0 msec}
[2024-12-03 11:04:20 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|14ecfa41-07fc-40d0-b50b-3fe95a840992.jpg |
|2694c9a6-a7b3-4800-ac73-0c853e16a152.jpg |
|-----------------------------------------|

[2024-12-03 11:04:20 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 7
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 11:04:20 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:04:20 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
        from feed_pics
        where feed_id = 6
 {executed in 0 msec}
[2024-12-03 11:04:20 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3c31d519-96b0-49bd-8657-d1eac4fb3fc1.jpg |
|-----------------------------------------|

[2024-12-03 11:04:20 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 6
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:04:20 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:04:22 INFO http-nio-8080-exec-5] [com.green.greengramver2.feed.comment.FeedCommentController] 2
[2024-12-03 11:04:22 INFO http-nio-8080-exec-5] [com.green.greengramver2.feed.comment.FeedCommentController] feedCommentGet : FeedCommentGetReq(feedId=0, page=0, size=21, sIdx=26)
[2024-12-03 11:04:22 INFO http-nio-8080-exec-5] [com.green.greengramver2.feed.comment.FeedCommentController] feedCommentGet : FeedCommentGetReq(feedId=0, page=0, size=21, sIdx=26)
[2024-12-03 11:06:46 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
[2024-12-03 11:06:46 INFO Thread-7] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-03 11:06:46 INFO Thread-7] [com.zaxxer.hikari.HikariDataSource] HikariPool-2 - Shutdown initiated...
[2024-12-03 11:06:46 INFO Thread-7] [com.zaxxer.hikari.HikariDataSource] HikariPool-2 - Shutdown completed.
[2024-12-03 11:06:46 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 6836 (D:\Students\jang jin seong\GreenGramVer2\build\classes\java\main started by Administrator in D:\Students\jang jin seong\GreenGramVer2)
[2024-12-03 11:06:46 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-03 11:06:46 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-03 11:06:46 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-03 11:06:46 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-03 11:06:46 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-03 11:06:46 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-03 11:06:46 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 183 ms
[2024-12-03 11:06:46 INFO restartedMain] [com.green.greengramver2.common.MyFileUtils] MFU 생성자: D:\Students\jang jin seong\download\greengram_ver2
[2024-12-03 11:06:46 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-03 11:06:46 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-03 11:06:46 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-03 11:06:46 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-03 11:06:46 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Started GreenGramVer2Application in 0.328 seconds (process running for 467.543)
[2024-12-03 11:06:46 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-03 11:08:16 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 1900 (D:\Students\jang jin seong\GreenGramVer2\build\classes\java\main started by Administrator in D:\Students\jang jin seong\GreenGramVer2)
[2024-12-03 11:08:16 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-03 11:08:16 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-03 11:08:16 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-03 11:08:17 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-03 11:08:17 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-03 11:08:17 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-03 11:08:17 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-03 11:08:17 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-03 11:08:17 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 797 ms
[2024-12-03 11:08:17 INFO restartedMain] [com.green.greengramver2.common.MyFileUtils] MFU 생성자: D:\Students\jang jin seong\download\greengram_ver2
[2024-12-03 11:08:17 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-03 11:08:18 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-03 11:08:18 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-03 11:08:18 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-03 11:08:18 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Started GreenGramVer2Application in 1.721 seconds (process running for 2.086)
[2024-12-03 11:08:25 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-03 11:08:25 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-03 11:08:25 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 0 ms
[2024-12-03 11:08:25 INFO http-nio-8080-exec-9] [com.green.greengramver2.feed.model.FeedGetReq] FeedGetReq 1,null,1
[2024-12-03 11:08:25 INFO http-nio-8080-exec-9] [com.green.greengramver2.feed.FeedController] feedC getFeedList p: FeedGetReq(super=Paging(page=1, size=20, sIdx=0), signedUserId=1)
[2024-12-03 11:08:25 INFO http-nio-8080-exec-9] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-03 11:08:25 INFO http-nio-8080-exec-9] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@a519187
[2024-12-03 11:08:25 INFO http-nio-8080-exec-9] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-03 11:08:25 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, writer_user_id AS writerUserId,
        if(nick_name IS NULL , uid, nick_name) AS writerNm,
        pic AS writerPic, contents, location, a.created_at AS createdAt,
        if(c.feed_id IS NULL ,0 , 1) AS isLike
        FROM feed A
        JOIN user B
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c
        ON a.feed_id = c.feed_id
        AND c.user_id = 1
        ORDER BY a.feed_id DESC
        LIMIT 0,20
 {executed in 1 msec}
[2024-12-03 11:08:25 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|feed_id |writer_user_id |writernm |pic                                      |contents     |location |created_at          |islike |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|27      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |I am panguin |남극       |2024-11-29 17:07:59 |0      |
|26      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |I am panguin |남극       |2024-11-29 16:46:01 |0      |
|25      |5              |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |4123         |213      |2024-11-29 16:32:31 |0      |
|24      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |31231        |123      |2024-11-29 16:01:53 |0      |
|23      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |4754         |444      |2024-11-29 16:00:03 |0      |
|22      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |aaa          |aa       |2024-11-29 15:58:25 |0      |
|14      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:51:21 |1      |
|13      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:51:14 |1      |
|12      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:42:17 |1      |
|11      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |123          |33123    |2024-11-29 10:42:01 |0      |
|9       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |21123        |3        |2024-11-29 10:37:22 |0      |
|7       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-28 17:20:59 |1      |
|6       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |             |         |2024-11-28 17:15:01 |0      |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|

[2024-12-03 11:08:25 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 27
 {executed in 0 msec}
[2024-12-03 11:08:25 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5a0d637a-00c7-441f-a9fa-c0dc68af2602.jpg |
|-----------------------------------------|

[2024-12-03 11:08:25 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 27
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 11:08:25 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|----------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment   |writernm |pic                                      |
|--------|----------------|----------|---------|-----------------------------------------|
|5       |7               |2         |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |6               |123       |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |4               |ㅇ         |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |3               |왜 로그에 두번이 |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|--------|----------------|----------|---------|-----------------------------------------|

[2024-12-03 11:08:25 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 26
 {executed in 0 msec}
[2024-12-03 11:08:25 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3e5fe979-fe9c-4ed6-9ad7-c1dbf4f2538f.jpg |
|-----------------------------------------|

[2024-12-03 11:08:25 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 26
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 11:08:25 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|1       |9               |s       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|5       |8               |123     |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-03 11:08:25 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 25
 {executed in 0 msec}
[2024-12-03 11:08:25 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|8213634a-99df-42d8-963e-87bc120cc8a7.jpg |
|-----------------------------------------|

[2024-12-03 11:08:25 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 25
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:08:25 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:08:25 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 24
 {executed in 0 msec}
[2024-12-03 11:08:25 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|dfe6f2c1-3753-4a6a-aff4-0de7fa2786b8.jpg |
|-----------------------------------------|

[2024-12-03 11:08:25 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 24
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:08:25 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:08:25 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 23
 {executed in 0 msec}
[2024-12-03 11:08:25 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f3e6375d-35d8-4a4a-a976-26ca5c6abaac.jpg |
|-----------------------------------------|

[2024-12-03 11:08:25 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 23
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:08:25 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:08:25 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 22
 {executed in 0 msec}
[2024-12-03 11:08:25 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e97360ca-fe79-48c3-acaa-cd71042a0a78.tif |
|-----------------------------------------|

[2024-12-03 11:08:25 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 22
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:08:25 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:08:25 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 14
 {executed in 0 msec}
[2024-12-03 11:08:25 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a3709fe6-3e0d-4f04-8cef-1cc328c4fc0c.jpg |
|ada457b9-68aa-4a78-b0c8-c5035af844e2.jpg |
|-----------------------------------------|

[2024-12-03 11:08:25 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 14
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:08:25 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:08:25 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 13
 {executed in 0 msec}
[2024-12-03 11:08:25 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6fe5de58-57ef-47e7-80c7-49c0506ca143.jpg |
|920ca8e8-5dc2-4844-aa7f-d7782e94d380.jpg |
|-----------------------------------------|

[2024-12-03 11:08:25 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 13
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 11:08:25 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:08:25 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 12
 {executed in 0 msec}
[2024-12-03 11:08:25 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|84e77be4-2b62-4f40-8f8b-0803e1080449.jpg |
|84f31709-40aa-40eb-a7e7-da0219067927.jpg |
|-----------------------------------------|

[2024-12-03 11:08:25 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 12
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:08:25 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:08:25 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 11
 {executed in 0 msec}
[2024-12-03 11:08:25 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3fc51a83-46ea-43ca-a85b-6fad4794a2bd.jpg |
|49906eb9-a412-4428-a629-baccbe152c75.jpg |
|-----------------------------------------|

[2024-12-03 11:08:25 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 11
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:08:25 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:08:25 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 9
 {executed in 1 msec}
[2024-12-03 11:08:25 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|34669219-c5d3-4d84-a277-fd8c2b8bca4f.jpg |
|f1ed44ba-1254-4232-9a0d-65037abe1e9c.jpg |
|-----------------------------------------|

[2024-12-03 11:08:25 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 9
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:08:25 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:08:25 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 7
 {executed in 0 msec}
[2024-12-03 11:08:25 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|14ecfa41-07fc-40d0-b50b-3fe95a840992.jpg |
|2694c9a6-a7b3-4800-ac73-0c853e16a152.jpg |
|-----------------------------------------|

[2024-12-03 11:08:25 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 7
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 11:08:25 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:08:25 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 6
 {executed in 0 msec}
[2024-12-03 11:08:25 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3c31d519-96b0-49bd-8657-d1eac4fb3fc1.jpg |
|-----------------------------------------|

[2024-12-03 11:08:25 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 6
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:08:25 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:08:28 INFO http-nio-8080-exec-1] [com.green.greengramver2.feed.comment.FeedCommentController] feedCommentGet : FeedCommentGetReq(feedId=0, page=0, size=21, sIdx=26)
[2024-12-03 11:08:34 INFO http-nio-8080-exec-2] [com.green.greengramver2.feed.comment.FeedCommentController] feedCommentP FeedCommentPostReq(feedId=27, userId=1, comment=ㅇㅇ, feedCommentId=0)
[2024-12-03 11:08:34 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. insert into feed_comments
        set user_id = 1,
            feed_id = 27,
            `comment` = 'ㅇㅇ'
 {executed in 8 msec}
[2024-12-03 11:08:34 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: insert into feed_comments
        set user_id = 1,
            feed_id = 27,
            `comment` = 'ㅇㅇ'
 {executed in 0 msec}
[2024-12-03 11:08:34 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|11        |
|----------|

[2024-12-03 11:08:36 INFO http-nio-8080-exec-1] [com.green.greengramver2.feed.model.FeedGetReq] FeedGetReq 1,null,1
[2024-12-03 11:08:36 INFO http-nio-8080-exec-1] [com.green.greengramver2.feed.FeedController] feedC getFeedList p: FeedGetReq(super=Paging(page=1, size=20, sIdx=0), signedUserId=1)
[2024-12-03 11:08:36 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, writer_user_id AS writerUserId,
        if(nick_name IS NULL , uid, nick_name) AS writerNm,
        pic AS writerPic, contents, location, a.created_at AS createdAt,
        if(c.feed_id IS NULL ,0 , 1) AS isLike
        FROM feed A
        JOIN user B
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c
        ON a.feed_id = c.feed_id
        AND c.user_id = 1
        ORDER BY a.feed_id DESC
        LIMIT 0,20
 {executed in 1 msec}
[2024-12-03 11:08:36 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|feed_id |writer_user_id |writernm |pic                                      |contents     |location |created_at          |islike |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|27      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |I am panguin |남극       |2024-11-29 17:07:59 |0      |
|26      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |I am panguin |남극       |2024-11-29 16:46:01 |0      |
|25      |5              |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |4123         |213      |2024-11-29 16:32:31 |0      |
|24      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |31231        |123      |2024-11-29 16:01:53 |0      |
|23      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |4754         |444      |2024-11-29 16:00:03 |0      |
|22      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |aaa          |aa       |2024-11-29 15:58:25 |0      |
|14      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:51:21 |1      |
|13      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:51:14 |1      |
|12      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:42:17 |1      |
|11      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |123          |33123    |2024-11-29 10:42:01 |0      |
|9       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |21123        |3        |2024-11-29 10:37:22 |0      |
|7       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-28 17:20:59 |1      |
|6       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |             |         |2024-11-28 17:15:01 |0      |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|

[2024-12-03 11:08:36 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 27
 {executed in 1 msec}
[2024-12-03 11:08:36 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5a0d637a-00c7-441f-a9fa-c0dc68af2602.jpg |
|-----------------------------------------|

[2024-12-03 11:08:36 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 27
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 11:08:36 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|1       |11              |ㅇㅇ      |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|5       |7               |2       |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |6               |123     |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |4               |ㅇ       |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-03 11:08:36 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 26
 {executed in 0 msec}
[2024-12-03 11:08:36 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3e5fe979-fe9c-4ed6-9ad7-c1dbf4f2538f.jpg |
|-----------------------------------------|

[2024-12-03 11:08:36 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 26
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:08:36 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|1       |9               |s       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|5       |8               |123     |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-03 11:08:36 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 25
 {executed in 0 msec}
[2024-12-03 11:08:36 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|8213634a-99df-42d8-963e-87bc120cc8a7.jpg |
|-----------------------------------------|

[2024-12-03 11:08:36 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 25
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:08:36 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:08:36 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 24
 {executed in 0 msec}
[2024-12-03 11:08:36 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|dfe6f2c1-3753-4a6a-aff4-0de7fa2786b8.jpg |
|-----------------------------------------|

[2024-12-03 11:08:36 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 24
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:08:36 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:08:36 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 23
 {executed in 0 msec}
[2024-12-03 11:08:36 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f3e6375d-35d8-4a4a-a976-26ca5c6abaac.jpg |
|-----------------------------------------|

[2024-12-03 11:08:36 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 23
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:08:36 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:08:36 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 22
 {executed in 0 msec}
[2024-12-03 11:08:36 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e97360ca-fe79-48c3-acaa-cd71042a0a78.tif |
|-----------------------------------------|

[2024-12-03 11:08:36 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 22
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:08:36 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:08:36 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 14
 {executed in 0 msec}
[2024-12-03 11:08:36 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a3709fe6-3e0d-4f04-8cef-1cc328c4fc0c.jpg |
|ada457b9-68aa-4a78-b0c8-c5035af844e2.jpg |
|-----------------------------------------|

[2024-12-03 11:08:36 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 14
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 11:08:36 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:08:36 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 13
 {executed in 1 msec}
[2024-12-03 11:08:36 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6fe5de58-57ef-47e7-80c7-49c0506ca143.jpg |
|920ca8e8-5dc2-4844-aa7f-d7782e94d380.jpg |
|-----------------------------------------|

[2024-12-03 11:08:36 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 13
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 11:08:36 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:08:36 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 12
 {executed in 1 msec}
[2024-12-03 11:08:36 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|84e77be4-2b62-4f40-8f8b-0803e1080449.jpg |
|84f31709-40aa-40eb-a7e7-da0219067927.jpg |
|-----------------------------------------|

[2024-12-03 11:08:36 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 12
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 11:08:36 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:08:36 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 11
 {executed in 1 msec}
[2024-12-03 11:08:36 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3fc51a83-46ea-43ca-a85b-6fad4794a2bd.jpg |
|49906eb9-a412-4428-a629-baccbe152c75.jpg |
|-----------------------------------------|

[2024-12-03 11:08:36 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 11
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:08:36 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:08:36 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 9
 {executed in 0 msec}
[2024-12-03 11:08:36 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|34669219-c5d3-4d84-a277-fd8c2b8bca4f.jpg |
|f1ed44ba-1254-4232-9a0d-65037abe1e9c.jpg |
|-----------------------------------------|

[2024-12-03 11:08:36 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 9
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:08:36 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:08:36 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 7
 {executed in 1 msec}
[2024-12-03 11:08:36 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|14ecfa41-07fc-40d0-b50b-3fe95a840992.jpg |
|2694c9a6-a7b3-4800-ac73-0c853e16a152.jpg |
|-----------------------------------------|

[2024-12-03 11:08:36 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 7
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:08:36 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:08:36 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 6
 {executed in 0 msec}
[2024-12-03 11:08:36 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3c31d519-96b0-49bd-8657-d1eac4fb3fc1.jpg |
|-----------------------------------------|

[2024-12-03 11:08:36 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 6
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:08:36 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:08:39 INFO http-nio-8080-exec-8] [com.green.greengramver2.feed.comment.FeedCommentController] feedCommentGet : FeedCommentGetReq(feedId=0, page=0, size=21, sIdx=26)
[2024-12-03 11:09:06 INFO http-nio-8080-exec-1] [com.green.greengramver2.feed.model.FeedGetReq] FeedGetReq 1,null,1
[2024-12-03 11:09:06 INFO http-nio-8080-exec-1] [com.green.greengramver2.feed.FeedController] feedC getFeedList p: FeedGetReq(super=Paging(page=1, size=20, sIdx=0), signedUserId=1)
[2024-12-03 11:09:06 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, writer_user_id AS writerUserId,
        if(nick_name IS NULL , uid, nick_name) AS writerNm,
        pic AS writerPic, contents, location, a.created_at AS createdAt,
        if(c.feed_id IS NULL ,0 , 1) AS isLike
        FROM feed A
        JOIN user B
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c
        ON a.feed_id = c.feed_id
        AND c.user_id = 1
        ORDER BY a.feed_id DESC
        LIMIT 0,20
 {executed in 1 msec}
[2024-12-03 11:09:06 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|feed_id |writer_user_id |writernm |pic                                      |contents     |location |created_at          |islike |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|27      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |I am panguin |남극       |2024-11-29 17:07:59 |0      |
|26      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |I am panguin |남극       |2024-11-29 16:46:01 |0      |
|25      |5              |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |4123         |213      |2024-11-29 16:32:31 |0      |
|24      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |31231        |123      |2024-11-29 16:01:53 |0      |
|23      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |4754         |444      |2024-11-29 16:00:03 |0      |
|22      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |aaa          |aa       |2024-11-29 15:58:25 |0      |
|14      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:51:21 |1      |
|13      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:51:14 |1      |
|12      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:42:17 |1      |
|11      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |123          |33123    |2024-11-29 10:42:01 |0      |
|9       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |21123        |3        |2024-11-29 10:37:22 |0      |
|7       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-28 17:20:59 |1      |
|6       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |             |         |2024-11-28 17:15:01 |0      |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|

[2024-12-03 11:09:06 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 27
 {executed in 0 msec}
[2024-12-03 11:09:06 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5a0d637a-00c7-441f-a9fa-c0dc68af2602.jpg |
|-----------------------------------------|

[2024-12-03 11:09:06 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 27
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 11:09:06 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|1       |11              |ㅇㅇ      |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|5       |7               |2       |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |6               |123     |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |4               |ㅇ       |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-03 11:09:06 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 26
 {executed in 0 msec}
[2024-12-03 11:09:06 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3e5fe979-fe9c-4ed6-9ad7-c1dbf4f2538f.jpg |
|-----------------------------------------|

[2024-12-03 11:09:06 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 26
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:09:06 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|1       |9               |s       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|5       |8               |123     |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-03 11:09:06 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 25
 {executed in 0 msec}
[2024-12-03 11:09:06 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|8213634a-99df-42d8-963e-87bc120cc8a7.jpg |
|-----------------------------------------|

[2024-12-03 11:09:06 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 25
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:09:06 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:09:06 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 24
 {executed in 1 msec}
[2024-12-03 11:09:06 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|dfe6f2c1-3753-4a6a-aff4-0de7fa2786b8.jpg |
|-----------------------------------------|

[2024-12-03 11:09:06 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 24
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 11:09:06 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:09:06 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 23
 {executed in 0 msec}
[2024-12-03 11:09:06 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f3e6375d-35d8-4a4a-a976-26ca5c6abaac.jpg |
|-----------------------------------------|

[2024-12-03 11:09:06 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 23
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:09:06 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:09:06 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 22
 {executed in 0 msec}
[2024-12-03 11:09:06 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e97360ca-fe79-48c3-acaa-cd71042a0a78.tif |
|-----------------------------------------|

[2024-12-03 11:09:06 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 22
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:09:06 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:09:06 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 14
 {executed in 0 msec}
[2024-12-03 11:09:06 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a3709fe6-3e0d-4f04-8cef-1cc328c4fc0c.jpg |
|ada457b9-68aa-4a78-b0c8-c5035af844e2.jpg |
|-----------------------------------------|

[2024-12-03 11:09:06 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 14
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:09:06 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:09:06 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 13
 {executed in 0 msec}
[2024-12-03 11:09:06 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6fe5de58-57ef-47e7-80c7-49c0506ca143.jpg |
|920ca8e8-5dc2-4844-aa7f-d7782e94d380.jpg |
|-----------------------------------------|

[2024-12-03 11:09:06 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 13
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:09:06 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:09:06 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 12
 {executed in 0 msec}
[2024-12-03 11:09:06 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|84e77be4-2b62-4f40-8f8b-0803e1080449.jpg |
|84f31709-40aa-40eb-a7e7-da0219067927.jpg |
|-----------------------------------------|

[2024-12-03 11:09:06 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 12
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:09:06 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:09:06 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 11
 {executed in 0 msec}
[2024-12-03 11:09:06 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3fc51a83-46ea-43ca-a85b-6fad4794a2bd.jpg |
|49906eb9-a412-4428-a629-baccbe152c75.jpg |
|-----------------------------------------|

[2024-12-03 11:09:06 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 11
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:09:06 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:09:06 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 9
 {executed in 0 msec}
[2024-12-03 11:09:06 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|34669219-c5d3-4d84-a277-fd8c2b8bca4f.jpg |
|f1ed44ba-1254-4232-9a0d-65037abe1e9c.jpg |
|-----------------------------------------|

[2024-12-03 11:09:06 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 9
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 11:09:06 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:09:06 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 7
 {executed in 0 msec}
[2024-12-03 11:09:06 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|14ecfa41-07fc-40d0-b50b-3fe95a840992.jpg |
|2694c9a6-a7b3-4800-ac73-0c853e16a152.jpg |
|-----------------------------------------|

[2024-12-03 11:09:06 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 7
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 11:09:06 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:09:06 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 6
 {executed in 0 msec}
[2024-12-03 11:09:06 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3c31d519-96b0-49bd-8657-d1eac4fb3fc1.jpg |
|-----------------------------------------|

[2024-12-03 11:09:06 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 6
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 11:09:06 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:09:12 INFO http-nio-8080-exec-6] [com.green.greengramver2.feed.comment.FeedCommentController] feedCommentGet : FeedCommentGetReq(feedId=0, page=0, size=21, sIdx=26)
[2024-12-03 11:10:00 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-03 11:10:00 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-03 11:10:22 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 4300 (D:\Students\jang jin seong\GreenGramVer2\build\classes\java\main started by Administrator in D:\Students\jang jin seong\GreenGramVer2)
[2024-12-03 11:10:23 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-03 11:10:23 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-03 11:10:23 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-03 11:10:23 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-03 11:10:23 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-03 11:10:23 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-03 11:10:23 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-03 11:10:23 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-03 11:10:23 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 775 ms
[2024-12-03 11:10:23 INFO restartedMain] [com.green.greengramver2.common.MyFileUtils] MFU 생성자: D:\Students\jang jin seong\download\greengram_ver2
[2024-12-03 11:10:24 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-03 11:10:24 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-03 11:10:24 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-03 11:10:24 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-03 11:10:24 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Started GreenGramVer2Application in 1.836 seconds (process running for 2.209)
[2024-12-03 11:10:43 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 3924 (D:\Students\jang jin seong\GreenGramVer2\build\classes\java\main started by Administrator in D:\Students\jang jin seong\GreenGramVer2)
[2024-12-03 11:10:43 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-03 11:10:43 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-03 11:10:43 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-03 11:10:43 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-03 11:10:43 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-03 11:10:43 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-03 11:10:43 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-03 11:10:43 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-03 11:10:43 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 757 ms
[2024-12-03 11:10:43 INFO restartedMain] [com.green.greengramver2.common.MyFileUtils] MFU 생성자: D:\Students\jang jin seong\download\greengram_ver2
[2024-12-03 11:10:44 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-03 11:10:44 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-03 11:10:44 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-03 11:10:44 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-03 11:10:44 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Started GreenGramVer2Application in 1.641 seconds (process running for 1.995)
[2024-12-03 11:10:49 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-03 11:10:49 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-03 11:10:49 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 0 ms
[2024-12-03 11:10:49 INFO http-nio-8080-exec-9] [com.green.greengramver2.feed.model.FeedGetReq] FeedGetReq 1,null,1
[2024-12-03 11:10:49 INFO http-nio-8080-exec-9] [com.green.greengramver2.feed.FeedController] feedC getFeedList p: FeedGetReq(super=Paging(page=1, size=20, sIdx=0), signedUserId=1)
[2024-12-03 11:10:49 INFO http-nio-8080-exec-9] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-03 11:10:49 INFO http-nio-8080-exec-9] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@76803123
[2024-12-03 11:10:49 INFO http-nio-8080-exec-9] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-03 11:10:49 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, writer_user_id AS writerUserId,
        if(nick_name IS NULL , uid, nick_name) AS writerNm,
        pic AS writerPic, contents, location, a.created_at AS createdAt,
        if(c.feed_id IS NULL ,0 , 1) AS isLike
        FROM feed A
        JOIN user B
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c
        ON a.feed_id = c.feed_id
        AND c.user_id = 1
        ORDER BY a.feed_id DESC
        LIMIT 0,20
 {executed in 1 msec}
[2024-12-03 11:10:49 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|feed_id |writer_user_id |writernm |pic                                      |contents     |location |created_at          |islike |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|27      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |I am panguin |남극       |2024-11-29 17:07:59 |0      |
|26      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |I am panguin |남극       |2024-11-29 16:46:01 |0      |
|25      |5              |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |4123         |213      |2024-11-29 16:32:31 |0      |
|24      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |31231        |123      |2024-11-29 16:01:53 |0      |
|23      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |4754         |444      |2024-11-29 16:00:03 |0      |
|22      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |aaa          |aa       |2024-11-29 15:58:25 |0      |
|14      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:51:21 |1      |
|13      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:51:14 |1      |
|12      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:42:17 |1      |
|11      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |123          |33123    |2024-11-29 10:42:01 |0      |
|9       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |21123        |3        |2024-11-29 10:37:22 |0      |
|7       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-28 17:20:59 |1      |
|6       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |             |         |2024-11-28 17:15:01 |0      |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|

[2024-12-03 11:10:49 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 27
 {executed in 0 msec}
[2024-12-03 11:10:49 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5a0d637a-00c7-441f-a9fa-c0dc68af2602.jpg |
|-----------------------------------------|

[2024-12-03 11:10:49 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 27
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:10:49 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|1       |11              |ㅇㅇ      |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|5       |7               |2       |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |6               |123     |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |4               |ㅇ       |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-03 11:10:49 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 26
 {executed in 0 msec}
[2024-12-03 11:10:49 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3e5fe979-fe9c-4ed6-9ad7-c1dbf4f2538f.jpg |
|-----------------------------------------|

[2024-12-03 11:10:49 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 26
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:10:49 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|1       |9               |s       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|5       |8               |123     |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-03 11:10:49 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 25
 {executed in 1 msec}
[2024-12-03 11:10:49 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|8213634a-99df-42d8-963e-87bc120cc8a7.jpg |
|-----------------------------------------|

[2024-12-03 11:10:49 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 25
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 11:10:49 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:10:49 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 24
 {executed in 0 msec}
[2024-12-03 11:10:49 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|dfe6f2c1-3753-4a6a-aff4-0de7fa2786b8.jpg |
|-----------------------------------------|

[2024-12-03 11:10:49 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 24
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:10:49 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:10:49 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 23
 {executed in 1 msec}
[2024-12-03 11:10:49 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f3e6375d-35d8-4a4a-a976-26ca5c6abaac.jpg |
|-----------------------------------------|

[2024-12-03 11:10:49 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 23
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 11:10:49 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:10:49 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 22
 {executed in 0 msec}
[2024-12-03 11:10:49 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e97360ca-fe79-48c3-acaa-cd71042a0a78.tif |
|-----------------------------------------|

[2024-12-03 11:10:49 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 22
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:10:49 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:10:49 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 14
 {executed in 0 msec}
[2024-12-03 11:10:49 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a3709fe6-3e0d-4f04-8cef-1cc328c4fc0c.jpg |
|ada457b9-68aa-4a78-b0c8-c5035af844e2.jpg |
|-----------------------------------------|

[2024-12-03 11:10:49 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 14
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:10:49 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:10:49 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 13
 {executed in 0 msec}
[2024-12-03 11:10:49 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6fe5de58-57ef-47e7-80c7-49c0506ca143.jpg |
|920ca8e8-5dc2-4844-aa7f-d7782e94d380.jpg |
|-----------------------------------------|

[2024-12-03 11:10:49 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 13
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:10:49 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:10:49 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 12
 {executed in 0 msec}
[2024-12-03 11:10:49 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|84e77be4-2b62-4f40-8f8b-0803e1080449.jpg |
|84f31709-40aa-40eb-a7e7-da0219067927.jpg |
|-----------------------------------------|

[2024-12-03 11:10:49 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 12
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:10:49 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:10:49 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 11
 {executed in 0 msec}
[2024-12-03 11:10:49 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3fc51a83-46ea-43ca-a85b-6fad4794a2bd.jpg |
|49906eb9-a412-4428-a629-baccbe152c75.jpg |
|-----------------------------------------|

[2024-12-03 11:10:49 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 11
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:10:49 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:10:49 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 9
 {executed in 0 msec}
[2024-12-03 11:10:49 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|34669219-c5d3-4d84-a277-fd8c2b8bca4f.jpg |
|f1ed44ba-1254-4232-9a0d-65037abe1e9c.jpg |
|-----------------------------------------|

[2024-12-03 11:10:49 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 9
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:10:49 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:10:49 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 7
 {executed in 0 msec}
[2024-12-03 11:10:49 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|14ecfa41-07fc-40d0-b50b-3fe95a840992.jpg |
|2694c9a6-a7b3-4800-ac73-0c853e16a152.jpg |
|-----------------------------------------|

[2024-12-03 11:10:49 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 7
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:10:49 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:10:49 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 6
 {executed in 0 msec}
[2024-12-03 11:10:49 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3c31d519-96b0-49bd-8657-d1eac4fb3fc1.jpg |
|-----------------------------------------|

[2024-12-03 11:10:49 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 6
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:10:49 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:10:51 INFO http-nio-8080-exec-1] [com.green.greengramver2.feed.comment.FeedCommentController] feedCommentGet : FeedCommentGetReq(feed_id=27, page=0, size=21, sIdx=26)
[2024-12-03 11:12:24 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-03 11:12:24 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-03 11:12:26 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 10432 (D:\Students\jang jin seong\GreenGramVer2\build\classes\java\main started by Administrator in D:\Students\jang jin seong\GreenGramVer2)
[2024-12-03 11:12:26 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-03 11:12:26 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-03 11:12:26 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-03 11:12:27 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-03 11:12:27 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-03 11:12:27 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-03 11:12:27 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-03 11:12:27 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-03 11:12:27 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 793 ms
[2024-12-03 11:12:27 INFO restartedMain] [com.green.greengramver2.common.MyFileUtils] MFU 생성자: D:\Students\jang jin seong\download\greengram_ver2
[2024-12-03 11:12:27 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-03 11:12:28 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-03 11:12:28 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-03 11:12:28 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-03 11:12:28 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Started GreenGramVer2Application in 1.64 seconds (process running for 1.984)
[2024-12-03 11:12:32 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-03 11:12:32 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-03 11:12:32 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-03 11:12:32 INFO http-nio-8080-exec-4] [com.green.greengramver2.feed.model.FeedGetReq] FeedGetReq 1,null,1
[2024-12-03 11:12:32 INFO http-nio-8080-exec-4] [com.green.greengramver2.feed.FeedController] feedC getFeedList p: FeedGetReq(super=Paging(page=1, size=20, sIdx=0), signedUserId=1)
[2024-12-03 11:12:32 INFO http-nio-8080-exec-4] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-03 11:12:32 INFO http-nio-8080-exec-4] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@7d86d928
[2024-12-03 11:12:32 INFO http-nio-8080-exec-4] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-03 11:12:32 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, writer_user_id AS writerUserId,
        if(nick_name IS NULL , uid, nick_name) AS writerNm,
        pic AS writerPic, contents, location, a.created_at AS createdAt,
        if(c.feed_id IS NULL ,0 , 1) AS isLike
        FROM feed A
        JOIN user B
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c
        ON a.feed_id = c.feed_id
        AND c.user_id = 1
        ORDER BY a.feed_id DESC
        LIMIT 0,20
 {executed in 0 msec}
[2024-12-03 11:12:32 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|feed_id |writer_user_id |writernm |pic                                      |contents     |location |created_at          |islike |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|27      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |I am panguin |남극       |2024-11-29 17:07:59 |0      |
|26      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |I am panguin |남극       |2024-11-29 16:46:01 |0      |
|25      |5              |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |4123         |213      |2024-11-29 16:32:31 |0      |
|24      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |31231        |123      |2024-11-29 16:01:53 |0      |
|23      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |4754         |444      |2024-11-29 16:00:03 |0      |
|22      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |aaa          |aa       |2024-11-29 15:58:25 |0      |
|14      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:51:21 |1      |
|13      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:51:14 |1      |
|12      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:42:17 |1      |
|11      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |123          |33123    |2024-11-29 10:42:01 |0      |
|9       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |21123        |3        |2024-11-29 10:37:22 |0      |
|7       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-28 17:20:59 |1      |
|6       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |             |         |2024-11-28 17:15:01 |0      |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|

[2024-12-03 11:12:32 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 27
 {executed in 0 msec}
[2024-12-03 11:12:32 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5a0d637a-00c7-441f-a9fa-c0dc68af2602.jpg |
|-----------------------------------------|

[2024-12-03 11:12:32 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 27
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 11:12:32 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|1       |11              |ㅇㅇ      |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|5       |7               |2       |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |6               |123     |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |4               |ㅇ       |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-03 11:12:32 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 26
 {executed in 0 msec}
[2024-12-03 11:12:32 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3e5fe979-fe9c-4ed6-9ad7-c1dbf4f2538f.jpg |
|-----------------------------------------|

[2024-12-03 11:12:32 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 26
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:12:32 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|1       |9               |s       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|5       |8               |123     |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-03 11:12:32 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 25
 {executed in 0 msec}
[2024-12-03 11:12:32 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|8213634a-99df-42d8-963e-87bc120cc8a7.jpg |
|-----------------------------------------|

[2024-12-03 11:12:32 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 25
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 11:12:32 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:12:32 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 24
 {executed in 1 msec}
[2024-12-03 11:12:32 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|dfe6f2c1-3753-4a6a-aff4-0de7fa2786b8.jpg |
|-----------------------------------------|

[2024-12-03 11:12:32 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 24
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 11:12:32 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:12:32 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 23
 {executed in 0 msec}
[2024-12-03 11:12:32 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f3e6375d-35d8-4a4a-a976-26ca5c6abaac.jpg |
|-----------------------------------------|

[2024-12-03 11:12:32 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 23
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:12:32 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:12:32 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 22
 {executed in 0 msec}
[2024-12-03 11:12:32 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e97360ca-fe79-48c3-acaa-cd71042a0a78.tif |
|-----------------------------------------|

[2024-12-03 11:12:32 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 22
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:12:32 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:12:32 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 14
 {executed in 0 msec}
[2024-12-03 11:12:32 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a3709fe6-3e0d-4f04-8cef-1cc328c4fc0c.jpg |
|ada457b9-68aa-4a78-b0c8-c5035af844e2.jpg |
|-----------------------------------------|

[2024-12-03 11:12:32 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 14
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:12:32 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:12:32 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 13
 {executed in 0 msec}
[2024-12-03 11:12:32 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6fe5de58-57ef-47e7-80c7-49c0506ca143.jpg |
|920ca8e8-5dc2-4844-aa7f-d7782e94d380.jpg |
|-----------------------------------------|

[2024-12-03 11:12:32 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 13
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:12:32 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:12:32 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 12
 {executed in 0 msec}
[2024-12-03 11:12:32 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|84e77be4-2b62-4f40-8f8b-0803e1080449.jpg |
|84f31709-40aa-40eb-a7e7-da0219067927.jpg |
|-----------------------------------------|

[2024-12-03 11:12:32 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 12
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:12:32 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:12:32 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 11
 {executed in 0 msec}
[2024-12-03 11:12:32 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3fc51a83-46ea-43ca-a85b-6fad4794a2bd.jpg |
|49906eb9-a412-4428-a629-baccbe152c75.jpg |
|-----------------------------------------|

[2024-12-03 11:12:32 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 11
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 11:12:32 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:12:32 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 9
 {executed in 0 msec}
[2024-12-03 11:12:32 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|34669219-c5d3-4d84-a277-fd8c2b8bca4f.jpg |
|f1ed44ba-1254-4232-9a0d-65037abe1e9c.jpg |
|-----------------------------------------|

[2024-12-03 11:12:32 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 9
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:12:32 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:12:32 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 7
 {executed in 0 msec}
[2024-12-03 11:12:32 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|14ecfa41-07fc-40d0-b50b-3fe95a840992.jpg |
|2694c9a6-a7b3-4800-ac73-0c853e16a152.jpg |
|-----------------------------------------|

[2024-12-03 11:12:32 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 7
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:12:32 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:12:32 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 6
 {executed in 0 msec}
[2024-12-03 11:12:32 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3c31d519-96b0-49bd-8657-d1eac4fb3fc1.jpg |
|-----------------------------------------|

[2024-12-03 11:12:32 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 6
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:12:32 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:12:34 INFO http-nio-8080-exec-1] [com.green.greengramver2.feed.comment.FeedCommentController] feedCommentGet : FeedCommentGetReq(feedId=27, page=0, size=21, sIdx=26)
[2024-12-03 11:12:42 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-03 11:12:42 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-03 11:13:19 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 5760 (D:\Students\jang jin seong\GreenGramVer2\build\classes\java\main started by Administrator in D:\Students\jang jin seong\GreenGramVer2)
[2024-12-03 11:13:19 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-03 11:13:19 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-03 11:13:19 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-03 11:13:20 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-03 11:13:20 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-03 11:13:20 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-03 11:13:20 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-03 11:13:20 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-03 11:13:20 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 761 ms
[2024-12-03 11:13:20 INFO restartedMain] [com.green.greengramver2.common.MyFileUtils] MFU 생성자: D:\Students\jang jin seong\download\greengram_ver2
[2024-12-03 11:13:21 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-03 11:13:21 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-03 11:13:21 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-03 11:13:21 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-03 11:13:21 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Started GreenGramVer2Application in 1.871 seconds (process running for 2.224)
[2024-12-03 11:13:24 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-03 11:13:24 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-03 11:13:24 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-03 11:13:25 INFO http-nio-8080-exec-9] [com.green.greengramver2.feed.model.FeedGetReq] FeedGetReq 1,null,1
[2024-12-03 11:13:25 INFO http-nio-8080-exec-9] [com.green.greengramver2.feed.FeedController] feedC getFeedList p: FeedGetReq(super=Paging(page=1, size=20, sIdx=0), signedUserId=1)
[2024-12-03 11:13:25 INFO http-nio-8080-exec-9] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-03 11:13:25 INFO http-nio-8080-exec-9] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@76803123
[2024-12-03 11:13:25 INFO http-nio-8080-exec-9] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-03 11:13:25 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, writer_user_id AS writerUserId,
        if(nick_name IS NULL , uid, nick_name) AS writerNm,
        pic AS writerPic, contents, location, a.created_at AS createdAt,
        if(c.feed_id IS NULL ,0 , 1) AS isLike
        FROM feed A
        JOIN user B
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c
        ON a.feed_id = c.feed_id
        AND c.user_id = 1
        ORDER BY a.feed_id DESC
        LIMIT 0,20
 {executed in 1 msec}
[2024-12-03 11:13:25 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|feed_id |writer_user_id |writernm |pic                                      |contents     |location |created_at          |islike |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|27      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |I am panguin |남극       |2024-11-29 17:07:59 |0      |
|26      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |I am panguin |남극       |2024-11-29 16:46:01 |0      |
|25      |5              |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |4123         |213      |2024-11-29 16:32:31 |0      |
|24      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |31231        |123      |2024-11-29 16:01:53 |0      |
|23      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |4754         |444      |2024-11-29 16:00:03 |0      |
|22      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |aaa          |aa       |2024-11-29 15:58:25 |0      |
|14      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:51:21 |1      |
|13      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:51:14 |1      |
|12      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:42:17 |1      |
|11      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |123          |33123    |2024-11-29 10:42:01 |0      |
|9       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |21123        |3        |2024-11-29 10:37:22 |0      |
|7       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-28 17:20:59 |1      |
|6       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |             |         |2024-11-28 17:15:01 |0      |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|

[2024-12-03 11:13:25 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 27
 {executed in 0 msec}
[2024-12-03 11:13:25 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5a0d637a-00c7-441f-a9fa-c0dc68af2602.jpg |
|-----------------------------------------|

[2024-12-03 11:13:25 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 27
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 11:13:25 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|1       |11              |ㅇㅇ      |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|5       |7               |2       |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |6               |123     |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |4               |ㅇ       |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-03 11:13:25 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 26
 {executed in 0 msec}
[2024-12-03 11:13:25 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3e5fe979-fe9c-4ed6-9ad7-c1dbf4f2538f.jpg |
|-----------------------------------------|

[2024-12-03 11:13:25 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 26
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 11:13:25 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|1       |9               |s       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|5       |8               |123     |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-03 11:13:25 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 25
 {executed in 0 msec}
[2024-12-03 11:13:25 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|8213634a-99df-42d8-963e-87bc120cc8a7.jpg |
|-----------------------------------------|

[2024-12-03 11:13:25 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 25
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 11:13:25 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:13:25 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 24
 {executed in 0 msec}
[2024-12-03 11:13:25 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|dfe6f2c1-3753-4a6a-aff4-0de7fa2786b8.jpg |
|-----------------------------------------|

[2024-12-03 11:13:25 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 24
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:13:25 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:13:25 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 23
 {executed in 0 msec}
[2024-12-03 11:13:25 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f3e6375d-35d8-4a4a-a976-26ca5c6abaac.jpg |
|-----------------------------------------|

[2024-12-03 11:13:25 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 23
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 11:13:25 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:13:25 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 22
 {executed in 0 msec}
[2024-12-03 11:13:25 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e97360ca-fe79-48c3-acaa-cd71042a0a78.tif |
|-----------------------------------------|

[2024-12-03 11:13:25 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 22
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:13:25 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:13:25 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 14
 {executed in 0 msec}
[2024-12-03 11:13:25 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a3709fe6-3e0d-4f04-8cef-1cc328c4fc0c.jpg |
|ada457b9-68aa-4a78-b0c8-c5035af844e2.jpg |
|-----------------------------------------|

[2024-12-03 11:13:25 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 14
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:13:25 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:13:25 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 13
 {executed in 0 msec}
[2024-12-03 11:13:25 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6fe5de58-57ef-47e7-80c7-49c0506ca143.jpg |
|920ca8e8-5dc2-4844-aa7f-d7782e94d380.jpg |
|-----------------------------------------|

[2024-12-03 11:13:25 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 13
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 11:13:25 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:13:25 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 12
 {executed in 0 msec}
[2024-12-03 11:13:25 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|84e77be4-2b62-4f40-8f8b-0803e1080449.jpg |
|84f31709-40aa-40eb-a7e7-da0219067927.jpg |
|-----------------------------------------|

[2024-12-03 11:13:25 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 12
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:13:25 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:13:25 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 11
 {executed in 0 msec}
[2024-12-03 11:13:25 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3fc51a83-46ea-43ca-a85b-6fad4794a2bd.jpg |
|49906eb9-a412-4428-a629-baccbe152c75.jpg |
|-----------------------------------------|

[2024-12-03 11:13:25 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 11
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:13:25 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:13:25 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 9
 {executed in 0 msec}
[2024-12-03 11:13:25 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|34669219-c5d3-4d84-a277-fd8c2b8bca4f.jpg |
|f1ed44ba-1254-4232-9a0d-65037abe1e9c.jpg |
|-----------------------------------------|

[2024-12-03 11:13:25 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 9
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:13:25 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:13:25 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 7
 {executed in 0 msec}
[2024-12-03 11:13:25 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|14ecfa41-07fc-40d0-b50b-3fe95a840992.jpg |
|2694c9a6-a7b3-4800-ac73-0c853e16a152.jpg |
|-----------------------------------------|

[2024-12-03 11:13:25 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 7
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:13:25 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:13:25 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 6
 {executed in 0 msec}
[2024-12-03 11:13:25 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3c31d519-96b0-49bd-8657-d1eac4fb3fc1.jpg |
|-----------------------------------------|

[2024-12-03 11:13:25 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 6
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:13:25 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:13:26 INFO http-nio-8080-exec-1] [com.green.greengramver2.feed.comment.FeedCommentController] feedCommentGet : FeedCommentGetReq(feedId=27, page=0, size=21, sIdx=26)
[2024-12-03 11:16:07 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-03 11:16:07 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-03 11:16:23 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 7012 (D:\Students\jang jin seong\GreenGramVer2\build\classes\java\main started by Administrator in D:\Students\jang jin seong\GreenGramVer2)
[2024-12-03 11:16:23 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-03 11:16:23 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-03 11:16:23 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-03 11:16:23 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-03 11:16:23 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-03 11:16:23 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-03 11:16:23 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-03 11:16:23 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-03 11:16:23 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 757 ms
[2024-12-03 11:16:23 INFO restartedMain] [com.green.greengramver2.common.MyFileUtils] MFU 생성자: D:\Students\jang jin seong\download\greengram_ver2
[2024-12-03 11:16:24 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-03 11:16:24 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-03 11:16:24 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-03 11:16:24 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-03 11:16:24 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Started GreenGramVer2Application in 1.712 seconds (process running for 2.107)
[2024-12-03 11:16:24 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-03 11:16:24 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-03 11:16:24 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 0 ms
[2024-12-03 11:16:24 INFO http-nio-8080-exec-4] [com.green.greengramver2.feed.model.FeedGetReq] FeedGetReq 1,null,1
[2024-12-03 11:16:24 INFO http-nio-8080-exec-4] [com.green.greengramver2.feed.FeedController] feedC getFeedList p: FeedGetReq(super=Paging(page=1, size=20, sIdx=0), signedUserId=1)
[2024-12-03 11:16:24 INFO http-nio-8080-exec-4] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-03 11:16:24 INFO http-nio-8080-exec-4] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@7b3d0b12
[2024-12-03 11:16:24 INFO http-nio-8080-exec-4] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-03 11:16:24 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, writer_user_id AS writerUserId,
        if(nick_name IS NULL , uid, nick_name) AS writerNm,
        pic AS writerPic, contents, location, a.created_at AS createdAt,
        if(c.feed_id IS NULL ,0 , 1) AS isLike
        FROM feed A
        JOIN user B
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c
        ON a.feed_id = c.feed_id
        AND c.user_id = 1
        ORDER BY a.feed_id DESC
        LIMIT 0,20
 {executed in 1 msec}
[2024-12-03 11:16:24 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|feed_id |writer_user_id |writernm |pic                                      |contents     |location |created_at          |islike |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|27      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |I am panguin |남극       |2024-11-29 17:07:59 |0      |
|26      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |I am panguin |남극       |2024-11-29 16:46:01 |0      |
|25      |5              |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |4123         |213      |2024-11-29 16:32:31 |0      |
|24      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |31231        |123      |2024-11-29 16:01:53 |0      |
|23      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |4754         |444      |2024-11-29 16:00:03 |0      |
|22      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |aaa          |aa       |2024-11-29 15:58:25 |0      |
|14      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:51:21 |1      |
|13      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:51:14 |1      |
|12      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:42:17 |1      |
|11      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |123          |33123    |2024-11-29 10:42:01 |0      |
|9       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |21123        |3        |2024-11-29 10:37:22 |0      |
|7       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-28 17:20:59 |1      |
|6       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |             |         |2024-11-28 17:15:01 |0      |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|

[2024-12-03 11:16:24 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 27
 {executed in 0 msec}
[2024-12-03 11:16:24 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5a0d637a-00c7-441f-a9fa-c0dc68af2602.jpg |
|-----------------------------------------|

[2024-12-03 11:16:24 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 27
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:16:24 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|1       |11              |ㅇㅇ      |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|5       |7               |2       |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |6               |123     |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |4               |ㅇ       |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-03 11:16:24 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 26
 {executed in 0 msec}
[2024-12-03 11:16:24 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3e5fe979-fe9c-4ed6-9ad7-c1dbf4f2538f.jpg |
|-----------------------------------------|

[2024-12-03 11:16:24 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 26
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:16:24 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|1       |9               |s       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|5       |8               |123     |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-03 11:16:24 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 25
 {executed in 0 msec}
[2024-12-03 11:16:24 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|8213634a-99df-42d8-963e-87bc120cc8a7.jpg |
|-----------------------------------------|

[2024-12-03 11:16:24 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 25
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:16:24 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:16:24 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 24
 {executed in 0 msec}
[2024-12-03 11:16:24 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|dfe6f2c1-3753-4a6a-aff4-0de7fa2786b8.jpg |
|-----------------------------------------|

[2024-12-03 11:16:24 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 24
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:16:24 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:16:24 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 23
 {executed in 0 msec}
[2024-12-03 11:16:24 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f3e6375d-35d8-4a4a-a976-26ca5c6abaac.jpg |
|-----------------------------------------|

[2024-12-03 11:16:24 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 23
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:16:24 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:16:24 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 22
 {executed in 0 msec}
[2024-12-03 11:16:24 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e97360ca-fe79-48c3-acaa-cd71042a0a78.tif |
|-----------------------------------------|

[2024-12-03 11:16:24 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 22
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:16:24 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:16:24 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 14
 {executed in 1 msec}
[2024-12-03 11:16:24 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a3709fe6-3e0d-4f04-8cef-1cc328c4fc0c.jpg |
|ada457b9-68aa-4a78-b0c8-c5035af844e2.jpg |
|-----------------------------------------|

[2024-12-03 11:16:24 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 14
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:16:24 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:16:24 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 13
 {executed in 0 msec}
[2024-12-03 11:16:24 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6fe5de58-57ef-47e7-80c7-49c0506ca143.jpg |
|920ca8e8-5dc2-4844-aa7f-d7782e94d380.jpg |
|-----------------------------------------|

[2024-12-03 11:16:24 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 13
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:16:24 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:16:24 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 12
 {executed in 0 msec}
[2024-12-03 11:16:24 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|84e77be4-2b62-4f40-8f8b-0803e1080449.jpg |
|84f31709-40aa-40eb-a7e7-da0219067927.jpg |
|-----------------------------------------|

[2024-12-03 11:16:24 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 12
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:16:24 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:16:24 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 11
 {executed in 0 msec}
[2024-12-03 11:16:24 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3fc51a83-46ea-43ca-a85b-6fad4794a2bd.jpg |
|49906eb9-a412-4428-a629-baccbe152c75.jpg |
|-----------------------------------------|

[2024-12-03 11:16:24 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 11
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:16:24 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:16:24 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 9
 {executed in 0 msec}
[2024-12-03 11:16:24 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|34669219-c5d3-4d84-a277-fd8c2b8bca4f.jpg |
|f1ed44ba-1254-4232-9a0d-65037abe1e9c.jpg |
|-----------------------------------------|

[2024-12-03 11:16:24 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 9
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:16:24 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:16:24 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 7
 {executed in 0 msec}
[2024-12-03 11:16:24 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|14ecfa41-07fc-40d0-b50b-3fe95a840992.jpg |
|2694c9a6-a7b3-4800-ac73-0c853e16a152.jpg |
|-----------------------------------------|

[2024-12-03 11:16:24 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 7
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:16:24 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:16:24 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 6
 {executed in 0 msec}
[2024-12-03 11:16:24 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3c31d519-96b0-49bd-8657-d1eac4fb3fc1.jpg |
|-----------------------------------------|

[2024-12-03 11:16:24 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 6
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:16:24 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:16:31 INFO http-nio-8080-exec-7] [com.green.greengramver2.feed.comment.FeedCommentController] feedCommentGet : FeedCommentGetReq(feedId=27, page=2, size=21, sIdx=26)
[2024-12-03 11:16:31 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 27
        ORDER BY feed_comment_id DESC
        LIMIT 26, 21
 {executed in 1 msec}
[2024-12-03 11:16:31 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:16:58 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-03 11:16:58 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-03 11:16:59 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 11248 (D:\Students\jang jin seong\GreenGramVer2\build\classes\java\main started by Administrator in D:\Students\jang jin seong\GreenGramVer2)
[2024-12-03 11:16:59 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-03 11:16:59 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-03 11:16:59 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-03 11:17:00 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-03 11:17:00 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-03 11:17:00 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-03 11:17:00 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-03 11:17:00 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-03 11:17:00 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 748 ms
[2024-12-03 11:17:00 INFO restartedMain] [com.green.greengramver2.common.MyFileUtils] MFU 생성자: D:\Students\jang jin seong\download\greengram_ver2
[2024-12-03 11:17:00 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-03 11:17:01 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-03 11:17:01 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-03 11:17:01 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-03 11:17:01 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Started GreenGramVer2Application in 1.58 seconds (process running for 2.032)
[2024-12-03 11:17:15 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 5648 (D:\Students\jang jin seong\GreenGramVer2\build\classes\java\main started by Administrator in D:\Students\jang jin seong\GreenGramVer2)
[2024-12-03 11:17:15 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-03 11:17:15 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-03 11:17:15 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-03 11:17:16 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-03 11:17:16 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-03 11:17:16 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-03 11:17:16 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-03 11:17:16 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-03 11:17:16 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 764 ms
[2024-12-03 11:17:16 INFO restartedMain] [com.green.greengramver2.common.MyFileUtils] MFU 생성자: D:\Students\jang jin seong\download\greengram_ver2
[2024-12-03 11:17:16 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-03 11:17:16 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-03 11:17:16 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-03 11:17:16 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-03 11:17:16 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Started GreenGramVer2Application in 1.628 seconds (process running for 1.981)
[2024-12-03 11:17:19 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-03 11:17:19 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-03 11:17:19 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 0 ms
[2024-12-03 11:17:19 INFO http-nio-8080-exec-9] [com.green.greengramver2.feed.model.FeedGetReq] FeedGetReq 1,null,1
[2024-12-03 11:17:19 INFO http-nio-8080-exec-9] [com.green.greengramver2.feed.FeedController] feedC getFeedList p: FeedGetReq(super=Paging(page=1, size=20, sIdx=0), signedUserId=1)
[2024-12-03 11:17:19 INFO http-nio-8080-exec-9] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-03 11:17:19 INFO http-nio-8080-exec-9] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@76803123
[2024-12-03 11:17:19 INFO http-nio-8080-exec-9] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-03 11:17:19 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, writer_user_id AS writerUserId,
        if(nick_name IS NULL , uid, nick_name) AS writerNm,
        pic AS writerPic, contents, location, a.created_at AS createdAt,
        if(c.feed_id IS NULL ,0 , 1) AS isLike
        FROM feed A
        JOIN user B
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c
        ON a.feed_id = c.feed_id
        AND c.user_id = 1
        ORDER BY a.feed_id DESC
        LIMIT 0,20
 {executed in 0 msec}
[2024-12-03 11:17:19 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|feed_id |writer_user_id |writernm |pic                                      |contents     |location |created_at          |islike |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|27      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |I am panguin |남극       |2024-11-29 17:07:59 |0      |
|26      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |I am panguin |남극       |2024-11-29 16:46:01 |0      |
|25      |5              |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |4123         |213      |2024-11-29 16:32:31 |0      |
|24      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |31231        |123      |2024-11-29 16:01:53 |0      |
|23      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |4754         |444      |2024-11-29 16:00:03 |0      |
|22      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |aaa          |aa       |2024-11-29 15:58:25 |0      |
|14      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:51:21 |1      |
|13      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:51:14 |1      |
|12      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:42:17 |1      |
|11      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |123          |33123    |2024-11-29 10:42:01 |0      |
|9       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |21123        |3        |2024-11-29 10:37:22 |0      |
|7       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-28 17:20:59 |1      |
|6       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |             |         |2024-11-28 17:15:01 |0      |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|

[2024-12-03 11:17:19 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 27
 {executed in 0 msec}
[2024-12-03 11:17:19 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5a0d637a-00c7-441f-a9fa-c0dc68af2602.jpg |
|-----------------------------------------|

[2024-12-03 11:17:19 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 27
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:17:19 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|1       |11              |ㅇㅇ      |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|5       |7               |2       |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |6               |123     |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |4               |ㅇ       |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-03 11:17:19 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 26
 {executed in 1 msec}
[2024-12-03 11:17:19 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3e5fe979-fe9c-4ed6-9ad7-c1dbf4f2538f.jpg |
|-----------------------------------------|

[2024-12-03 11:17:19 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 26
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:17:19 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|1       |9               |s       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|5       |8               |123     |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-03 11:17:19 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 25
 {executed in 0 msec}
[2024-12-03 11:17:19 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|8213634a-99df-42d8-963e-87bc120cc8a7.jpg |
|-----------------------------------------|

[2024-12-03 11:17:19 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 25
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:17:19 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:17:19 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 24
 {executed in 0 msec}
[2024-12-03 11:17:19 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|dfe6f2c1-3753-4a6a-aff4-0de7fa2786b8.jpg |
|-----------------------------------------|

[2024-12-03 11:17:19 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 24
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 11:17:19 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:17:19 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 23
 {executed in 0 msec}
[2024-12-03 11:17:19 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f3e6375d-35d8-4a4a-a976-26ca5c6abaac.jpg |
|-----------------------------------------|

[2024-12-03 11:17:19 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 23
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:17:19 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:17:19 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 22
 {executed in 0 msec}
[2024-12-03 11:17:19 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e97360ca-fe79-48c3-acaa-cd71042a0a78.tif |
|-----------------------------------------|

[2024-12-03 11:17:19 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 22
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:17:19 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:17:19 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 14
 {executed in 0 msec}
[2024-12-03 11:17:19 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a3709fe6-3e0d-4f04-8cef-1cc328c4fc0c.jpg |
|ada457b9-68aa-4a78-b0c8-c5035af844e2.jpg |
|-----------------------------------------|

[2024-12-03 11:17:19 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 14
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 11:17:19 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:17:19 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 13
 {executed in 0 msec}
[2024-12-03 11:17:19 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6fe5de58-57ef-47e7-80c7-49c0506ca143.jpg |
|920ca8e8-5dc2-4844-aa7f-d7782e94d380.jpg |
|-----------------------------------------|

[2024-12-03 11:17:19 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 13
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:17:19 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:17:19 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 12
 {executed in 0 msec}
[2024-12-03 11:17:19 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|84e77be4-2b62-4f40-8f8b-0803e1080449.jpg |
|84f31709-40aa-40eb-a7e7-da0219067927.jpg |
|-----------------------------------------|

[2024-12-03 11:17:19 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 12
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:17:19 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:17:19 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 11
 {executed in 0 msec}
[2024-12-03 11:17:19 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3fc51a83-46ea-43ca-a85b-6fad4794a2bd.jpg |
|49906eb9-a412-4428-a629-baccbe152c75.jpg |
|-----------------------------------------|

[2024-12-03 11:17:19 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 11
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:17:19 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:17:19 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 9
 {executed in 1 msec}
[2024-12-03 11:17:19 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|34669219-c5d3-4d84-a277-fd8c2b8bca4f.jpg |
|f1ed44ba-1254-4232-9a0d-65037abe1e9c.jpg |
|-----------------------------------------|

[2024-12-03 11:17:19 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 9
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:17:19 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:17:19 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 7
 {executed in 0 msec}
[2024-12-03 11:17:19 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|14ecfa41-07fc-40d0-b50b-3fe95a840992.jpg |
|2694c9a6-a7b3-4800-ac73-0c853e16a152.jpg |
|-----------------------------------------|

[2024-12-03 11:17:19 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 7
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:17:19 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:17:19 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 6
 {executed in 0 msec}
[2024-12-03 11:17:19 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3c31d519-96b0-49bd-8657-d1eac4fb3fc1.jpg |
|-----------------------------------------|

[2024-12-03 11:17:19 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 6
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:17:19 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:17:21 INFO http-nio-8080-exec-1] [com.green.greengramver2.feed.comment.FeedCommentController] feedCommentGet : FeedCommentGetReq(feedId=0, page=2, size=21, sIdx=26)
[2024-12-03 11:17:21 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 0
        ORDER BY feed_comment_id DESC
        LIMIT 26, 21
 {executed in 1 msec}
[2024-12-03 11:17:21 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:18:06 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-03 11:18:06 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-03 11:18:08 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 10804 (D:\Students\jang jin seong\GreenGramVer2\build\classes\java\main started by Administrator in D:\Students\jang jin seong\GreenGramVer2)
[2024-12-03 11:18:08 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-03 11:18:08 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-03 11:18:08 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-03 11:18:08 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-03 11:18:08 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-03 11:18:08 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-03 11:18:08 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-03 11:18:09 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-03 11:18:09 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 765 ms
[2024-12-03 11:18:09 INFO restartedMain] [com.green.greengramver2.common.MyFileUtils] MFU 생성자: D:\Students\jang jin seong\download\greengram_ver2
[2024-12-03 11:18:09 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-03 11:18:09 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-03 11:18:09 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-03 11:18:09 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-03 11:18:09 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Started GreenGramVer2Application in 1.718 seconds (process running for 2.07)
[2024-12-03 11:18:15 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-03 11:18:15 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-03 11:18:15 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 0 ms
[2024-12-03 11:18:15 INFO http-nio-8080-exec-9] [com.green.greengramver2.feed.model.FeedGetReq] FeedGetReq 1,null,1
[2024-12-03 11:18:15 INFO http-nio-8080-exec-9] [com.green.greengramver2.feed.FeedController] feedC getFeedList p: FeedGetReq(super=Paging(page=1, size=20, sIdx=0), signedUserId=1)
[2024-12-03 11:18:15 INFO http-nio-8080-exec-9] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-03 11:18:15 INFO http-nio-8080-exec-9] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@642965a1
[2024-12-03 11:18:15 INFO http-nio-8080-exec-9] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-03 11:18:15 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, writer_user_id AS writerUserId,
        if(nick_name IS NULL , uid, nick_name) AS writerNm,
        pic AS writerPic, contents, location, a.created_at AS createdAt,
        if(c.feed_id IS NULL ,0 , 1) AS isLike
        FROM feed A
        JOIN user B
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c
        ON a.feed_id = c.feed_id
        AND c.user_id = 1
        ORDER BY a.feed_id DESC
        LIMIT 0,20
 {executed in 0 msec}
[2024-12-03 11:18:15 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|feed_id |writer_user_id |writernm |pic                                      |contents     |location |created_at          |islike |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|27      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |I am panguin |남극       |2024-11-29 17:07:59 |0      |
|26      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |I am panguin |남극       |2024-11-29 16:46:01 |0      |
|25      |5              |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |4123         |213      |2024-11-29 16:32:31 |0      |
|24      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |31231        |123      |2024-11-29 16:01:53 |0      |
|23      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |4754         |444      |2024-11-29 16:00:03 |0      |
|22      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |aaa          |aa       |2024-11-29 15:58:25 |0      |
|14      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:51:21 |1      |
|13      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:51:14 |1      |
|12      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:42:17 |1      |
|11      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |123          |33123    |2024-11-29 10:42:01 |0      |
|9       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |21123        |3        |2024-11-29 10:37:22 |0      |
|7       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-28 17:20:59 |1      |
|6       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |             |         |2024-11-28 17:15:01 |0      |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|

[2024-12-03 11:18:15 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 27
 {executed in 0 msec}
[2024-12-03 11:18:15 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5a0d637a-00c7-441f-a9fa-c0dc68af2602.jpg |
|-----------------------------------------|

[2024-12-03 11:18:15 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 27
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 11:18:15 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|1       |11              |ㅇㅇ      |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|5       |7               |2       |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |6               |123     |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |4               |ㅇ       |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-03 11:18:15 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 26
 {executed in 0 msec}
[2024-12-03 11:18:15 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3e5fe979-fe9c-4ed6-9ad7-c1dbf4f2538f.jpg |
|-----------------------------------------|

[2024-12-03 11:18:15 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 26
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:18:15 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|1       |9               |s       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|5       |8               |123     |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-03 11:18:15 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 25
 {executed in 0 msec}
[2024-12-03 11:18:15 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|8213634a-99df-42d8-963e-87bc120cc8a7.jpg |
|-----------------------------------------|

[2024-12-03 11:18:15 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 25
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:18:15 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:18:15 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 24
 {executed in 0 msec}
[2024-12-03 11:18:15 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|dfe6f2c1-3753-4a6a-aff4-0de7fa2786b8.jpg |
|-----------------------------------------|

[2024-12-03 11:18:15 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 24
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:18:15 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:18:15 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 23
 {executed in 1 msec}
[2024-12-03 11:18:15 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f3e6375d-35d8-4a4a-a976-26ca5c6abaac.jpg |
|-----------------------------------------|

[2024-12-03 11:18:15 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 23
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:18:15 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:18:15 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 22
 {executed in 0 msec}
[2024-12-03 11:18:15 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e97360ca-fe79-48c3-acaa-cd71042a0a78.tif |
|-----------------------------------------|

[2024-12-03 11:18:15 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 22
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 11:18:15 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:18:15 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 14
 {executed in 0 msec}
[2024-12-03 11:18:15 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a3709fe6-3e0d-4f04-8cef-1cc328c4fc0c.jpg |
|ada457b9-68aa-4a78-b0c8-c5035af844e2.jpg |
|-----------------------------------------|

[2024-12-03 11:18:15 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 14
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:18:15 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:18:15 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 13
 {executed in 0 msec}
[2024-12-03 11:18:15 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6fe5de58-57ef-47e7-80c7-49c0506ca143.jpg |
|920ca8e8-5dc2-4844-aa7f-d7782e94d380.jpg |
|-----------------------------------------|

[2024-12-03 11:18:15 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 13
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:18:15 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:18:15 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 12
 {executed in 0 msec}
[2024-12-03 11:18:15 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|84e77be4-2b62-4f40-8f8b-0803e1080449.jpg |
|84f31709-40aa-40eb-a7e7-da0219067927.jpg |
|-----------------------------------------|

[2024-12-03 11:18:15 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 12
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 11:18:15 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:18:15 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 11
 {executed in 0 msec}
[2024-12-03 11:18:15 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3fc51a83-46ea-43ca-a85b-6fad4794a2bd.jpg |
|49906eb9-a412-4428-a629-baccbe152c75.jpg |
|-----------------------------------------|

[2024-12-03 11:18:15 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 11
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 11:18:15 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:18:15 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 9
 {executed in 0 msec}
[2024-12-03 11:18:15 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|34669219-c5d3-4d84-a277-fd8c2b8bca4f.jpg |
|f1ed44ba-1254-4232-9a0d-65037abe1e9c.jpg |
|-----------------------------------------|

[2024-12-03 11:18:15 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 9
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:18:15 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:18:15 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 7
 {executed in 1 msec}
[2024-12-03 11:18:15 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|14ecfa41-07fc-40d0-b50b-3fe95a840992.jpg |
|2694c9a6-a7b3-4800-ac73-0c853e16a152.jpg |
|-----------------------------------------|

[2024-12-03 11:18:15 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 7
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:18:15 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:18:15 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 6
 {executed in 0 msec}
[2024-12-03 11:18:15 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3c31d519-96b0-49bd-8657-d1eac4fb3fc1.jpg |
|-----------------------------------------|

[2024-12-03 11:18:15 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 6
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:18:15 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:18:17 INFO http-nio-8080-exec-1] [com.green.greengramver2.feed.comment.FeedCommentController] feedCommentGet : FeedCommentGetReq(feedId=0, page=2, size=21, sIdx=26)
[2024-12-03 11:18:17 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 0
        ORDER BY feed_comment_id DESC
        LIMIT 26, 21
 {executed in 0 msec}
[2024-12-03 11:18:17 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:18:24 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-03 11:18:24 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-03 11:18:27 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 12200 (D:\Students\jang jin seong\GreenGramVer2\build\classes\java\main started by Administrator in D:\Students\jang jin seong\GreenGramVer2)
[2024-12-03 11:18:27 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-03 11:18:27 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-03 11:18:27 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-03 11:18:28 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-03 11:18:28 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-03 11:18:28 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-03 11:18:28 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-03 11:18:28 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-03 11:18:28 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 845 ms
[2024-12-03 11:18:28 INFO restartedMain] [com.green.greengramver2.common.MyFileUtils] MFU 생성자: D:\Students\jang jin seong\download\greengram_ver2
[2024-12-03 11:18:29 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-03 11:18:29 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-03 11:18:29 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-03 11:18:29 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-03 11:18:29 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Started GreenGramVer2Application in 1.793 seconds (process running for 2.496)
[2024-12-03 11:18:37 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-03 11:18:37 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-03 11:18:37 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-03 11:18:37 INFO http-nio-8080-exec-9] [com.green.greengramver2.feed.model.FeedGetReq] FeedGetReq 1,null,1
[2024-12-03 11:18:37 INFO http-nio-8080-exec-9] [com.green.greengramver2.feed.FeedController] feedC getFeedList p: FeedGetReq(super=Paging(page=1, size=20, sIdx=0), signedUserId=1)
[2024-12-03 11:18:37 INFO http-nio-8080-exec-9] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-03 11:18:37 INFO http-nio-8080-exec-9] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@4fdc6306
[2024-12-03 11:18:37 INFO http-nio-8080-exec-9] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-03 11:18:37 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, writer_user_id AS writerUserId,
        if(nick_name IS NULL , uid, nick_name) AS writerNm,
        pic AS writerPic, contents, location, a.created_at AS createdAt,
        if(c.feed_id IS NULL ,0 , 1) AS isLike
        FROM feed A
        JOIN user B
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c
        ON a.feed_id = c.feed_id
        AND c.user_id = 1
        ORDER BY a.feed_id DESC
        LIMIT 0,20
 {executed in 1 msec}
[2024-12-03 11:18:37 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|feed_id |writer_user_id |writernm |pic                                      |contents     |location |created_at          |islike |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|27      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |I am panguin |남극       |2024-11-29 17:07:59 |0      |
|26      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |I am panguin |남극       |2024-11-29 16:46:01 |0      |
|25      |5              |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |4123         |213      |2024-11-29 16:32:31 |0      |
|24      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |31231        |123      |2024-11-29 16:01:53 |0      |
|23      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |4754         |444      |2024-11-29 16:00:03 |0      |
|22      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |aaa          |aa       |2024-11-29 15:58:25 |0      |
|14      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:51:21 |1      |
|13      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:51:14 |1      |
|12      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:42:17 |1      |
|11      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |123          |33123    |2024-11-29 10:42:01 |0      |
|9       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |21123        |3        |2024-11-29 10:37:22 |0      |
|7       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-28 17:20:59 |1      |
|6       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |             |         |2024-11-28 17:15:01 |0      |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|

[2024-12-03 11:18:37 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 27
 {executed in 0 msec}
[2024-12-03 11:18:37 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5a0d637a-00c7-441f-a9fa-c0dc68af2602.jpg |
|-----------------------------------------|

[2024-12-03 11:18:37 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 27
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 11:18:37 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|1       |11              |ㅇㅇ      |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|5       |7               |2       |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |6               |123     |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |4               |ㅇ       |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-03 11:18:37 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 26
 {executed in 0 msec}
[2024-12-03 11:18:37 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3e5fe979-fe9c-4ed6-9ad7-c1dbf4f2538f.jpg |
|-----------------------------------------|

[2024-12-03 11:18:37 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 26
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:18:37 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|1       |9               |s       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|5       |8               |123     |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-03 11:18:37 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 25
 {executed in 0 msec}
[2024-12-03 11:18:37 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|8213634a-99df-42d8-963e-87bc120cc8a7.jpg |
|-----------------------------------------|

[2024-12-03 11:18:37 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 25
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:18:37 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:18:37 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 24
 {executed in 0 msec}
[2024-12-03 11:18:37 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|dfe6f2c1-3753-4a6a-aff4-0de7fa2786b8.jpg |
|-----------------------------------------|

[2024-12-03 11:18:37 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 24
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:18:37 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:18:37 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 23
 {executed in 0 msec}
[2024-12-03 11:18:37 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f3e6375d-35d8-4a4a-a976-26ca5c6abaac.jpg |
|-----------------------------------------|

[2024-12-03 11:18:37 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 23
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 11:18:37 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:18:37 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 22
 {executed in 0 msec}
[2024-12-03 11:18:37 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e97360ca-fe79-48c3-acaa-cd71042a0a78.tif |
|-----------------------------------------|

[2024-12-03 11:18:37 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 22
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:18:37 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:18:37 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 14
 {executed in 0 msec}
[2024-12-03 11:18:37 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a3709fe6-3e0d-4f04-8cef-1cc328c4fc0c.jpg |
|ada457b9-68aa-4a78-b0c8-c5035af844e2.jpg |
|-----------------------------------------|

[2024-12-03 11:18:37 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 14
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:18:37 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:18:37 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 13
 {executed in 0 msec}
[2024-12-03 11:18:37 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6fe5de58-57ef-47e7-80c7-49c0506ca143.jpg |
|920ca8e8-5dc2-4844-aa7f-d7782e94d380.jpg |
|-----------------------------------------|

[2024-12-03 11:18:37 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 13
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:18:37 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:18:37 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 12
 {executed in 0 msec}
[2024-12-03 11:18:37 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|84e77be4-2b62-4f40-8f8b-0803e1080449.jpg |
|84f31709-40aa-40eb-a7e7-da0219067927.jpg |
|-----------------------------------------|

[2024-12-03 11:18:37 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 12
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:18:37 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:18:37 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 11
 {executed in 0 msec}
[2024-12-03 11:18:37 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3fc51a83-46ea-43ca-a85b-6fad4794a2bd.jpg |
|49906eb9-a412-4428-a629-baccbe152c75.jpg |
|-----------------------------------------|

[2024-12-03 11:18:37 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 11
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:18:37 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:18:37 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 9
 {executed in 0 msec}
[2024-12-03 11:18:37 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|34669219-c5d3-4d84-a277-fd8c2b8bca4f.jpg |
|f1ed44ba-1254-4232-9a0d-65037abe1e9c.jpg |
|-----------------------------------------|

[2024-12-03 11:18:37 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 9
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:18:37 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:18:37 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 7
 {executed in 0 msec}
[2024-12-03 11:18:37 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|14ecfa41-07fc-40d0-b50b-3fe95a840992.jpg |
|2694c9a6-a7b3-4800-ac73-0c853e16a152.jpg |
|-----------------------------------------|

[2024-12-03 11:18:37 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 7
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:18:37 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:18:37 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 6
 {executed in 0 msec}
[2024-12-03 11:18:37 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3c31d519-96b0-49bd-8657-d1eac4fb3fc1.jpg |
|-----------------------------------------|

[2024-12-03 11:18:37 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 6
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:18:37 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:19:02 INFO http-nio-8080-exec-1] [com.green.greengramver2.feed.comment.FeedCommentController] feedCommentGet : FeedCommentGetReq(feedId=0, page=2, size=21, sIdx=26)
[2024-12-03 11:19:02 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 0
        ORDER BY feed_comment_id DESC
        LIMIT 26, 21
 {executed in 1 msec}
[2024-12-03 11:19:02 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:19:30 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-03 11:19:30 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-03 11:19:32 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 12020 (D:\Students\jang jin seong\GreenGramVer2\build\classes\java\main started by Administrator in D:\Students\jang jin seong\GreenGramVer2)
[2024-12-03 11:19:32 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-03 11:19:32 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-03 11:19:32 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-03 11:19:33 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-03 11:19:33 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-03 11:19:33 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-03 11:19:33 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-03 11:19:33 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-03 11:19:33 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 893 ms
[2024-12-03 11:19:33 INFO restartedMain] [com.green.greengramver2.common.MyFileUtils] MFU 생성자: D:\Students\jang jin seong\download\greengram_ver2
[2024-12-03 11:19:33 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-03 11:19:33 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-03 11:19:33 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-03 11:19:33 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-03 11:19:33 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Started GreenGramVer2Application in 1.866 seconds (process running for 2.55)
[2024-12-03 11:19:41 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-03 11:19:41 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-03 11:19:41 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-03 11:19:41 INFO http-nio-8080-exec-9] [com.green.greengramver2.feed.model.FeedGetReq] FeedGetReq 1,null,1
[2024-12-03 11:19:41 INFO http-nio-8080-exec-9] [com.green.greengramver2.feed.FeedController] feedC getFeedList p: FeedGetReq(super=Paging(page=1, size=20, sIdx=0), signedUserId=1)
[2024-12-03 11:19:41 INFO http-nio-8080-exec-9] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-03 11:19:41 INFO http-nio-8080-exec-9] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@4e51995f
[2024-12-03 11:19:41 INFO http-nio-8080-exec-9] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-03 11:19:41 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, writer_user_id AS writerUserId,
        if(nick_name IS NULL , uid, nick_name) AS writerNm,
        pic AS writerPic, contents, location, a.created_at AS createdAt,
        if(c.feed_id IS NULL ,0 , 1) AS isLike
        FROM feed A
        JOIN user B
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c
        ON a.feed_id = c.feed_id
        AND c.user_id = 1
        ORDER BY a.feed_id DESC
        LIMIT 0,20
 {executed in 0 msec}
[2024-12-03 11:19:41 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|feed_id |writer_user_id |writernm |pic                                      |contents     |location |created_at          |islike |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|27      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |I am panguin |남극       |2024-11-29 17:07:59 |0      |
|26      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |I am panguin |남극       |2024-11-29 16:46:01 |0      |
|25      |5              |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |4123         |213      |2024-11-29 16:32:31 |0      |
|24      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |31231        |123      |2024-11-29 16:01:53 |0      |
|23      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |4754         |444      |2024-11-29 16:00:03 |0      |
|22      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |aaa          |aa       |2024-11-29 15:58:25 |0      |
|14      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:51:21 |1      |
|13      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:51:14 |1      |
|12      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:42:17 |1      |
|11      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |123          |33123    |2024-11-29 10:42:01 |0      |
|9       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |21123        |3        |2024-11-29 10:37:22 |0      |
|7       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-28 17:20:59 |1      |
|6       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |             |         |2024-11-28 17:15:01 |0      |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|

[2024-12-03 11:19:41 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 27
 {executed in 0 msec}
[2024-12-03 11:19:41 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5a0d637a-00c7-441f-a9fa-c0dc68af2602.jpg |
|-----------------------------------------|

[2024-12-03 11:19:41 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 27
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:19:41 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|1       |11              |ㅇㅇ      |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|5       |7               |2       |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |6               |123     |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |4               |ㅇ       |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-03 11:19:41 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 26
 {executed in 0 msec}
[2024-12-03 11:19:41 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3e5fe979-fe9c-4ed6-9ad7-c1dbf4f2538f.jpg |
|-----------------------------------------|

[2024-12-03 11:19:41 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 26
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:19:41 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|1       |9               |s       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|5       |8               |123     |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-03 11:19:41 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 25
 {executed in 0 msec}
[2024-12-03 11:19:41 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|8213634a-99df-42d8-963e-87bc120cc8a7.jpg |
|-----------------------------------------|

[2024-12-03 11:19:41 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 25
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:19:41 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:19:41 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 24
 {executed in 0 msec}
[2024-12-03 11:19:41 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|dfe6f2c1-3753-4a6a-aff4-0de7fa2786b8.jpg |
|-----------------------------------------|

[2024-12-03 11:19:41 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 24
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 11:19:41 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:19:41 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 23
 {executed in 0 msec}
[2024-12-03 11:19:41 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f3e6375d-35d8-4a4a-a976-26ca5c6abaac.jpg |
|-----------------------------------------|

[2024-12-03 11:19:41 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 23
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:19:41 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:19:41 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 22
 {executed in 0 msec}
[2024-12-03 11:19:41 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e97360ca-fe79-48c3-acaa-cd71042a0a78.tif |
|-----------------------------------------|

[2024-12-03 11:19:41 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 22
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:19:41 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:19:41 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 14
 {executed in 0 msec}
[2024-12-03 11:19:41 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a3709fe6-3e0d-4f04-8cef-1cc328c4fc0c.jpg |
|ada457b9-68aa-4a78-b0c8-c5035af844e2.jpg |
|-----------------------------------------|

[2024-12-03 11:19:41 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 14
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 11:19:41 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:19:41 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 13
 {executed in 0 msec}
[2024-12-03 11:19:41 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6fe5de58-57ef-47e7-80c7-49c0506ca143.jpg |
|920ca8e8-5dc2-4844-aa7f-d7782e94d380.jpg |
|-----------------------------------------|

[2024-12-03 11:19:41 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 13
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:19:41 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:19:41 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 12
 {executed in 0 msec}
[2024-12-03 11:19:41 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|84e77be4-2b62-4f40-8f8b-0803e1080449.jpg |
|84f31709-40aa-40eb-a7e7-da0219067927.jpg |
|-----------------------------------------|

[2024-12-03 11:19:41 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 12
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:19:41 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:19:41 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 11
 {executed in 0 msec}
[2024-12-03 11:19:41 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3fc51a83-46ea-43ca-a85b-6fad4794a2bd.jpg |
|49906eb9-a412-4428-a629-baccbe152c75.jpg |
|-----------------------------------------|

[2024-12-03 11:19:41 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 11
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:19:41 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:19:41 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 9
 {executed in 0 msec}
[2024-12-03 11:19:41 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|34669219-c5d3-4d84-a277-fd8c2b8bca4f.jpg |
|f1ed44ba-1254-4232-9a0d-65037abe1e9c.jpg |
|-----------------------------------------|

[2024-12-03 11:19:41 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 9
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:19:41 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:19:41 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 7
 {executed in 0 msec}
[2024-12-03 11:19:41 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|14ecfa41-07fc-40d0-b50b-3fe95a840992.jpg |
|2694c9a6-a7b3-4800-ac73-0c853e16a152.jpg |
|-----------------------------------------|

[2024-12-03 11:19:41 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 7
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 11:19:41 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:19:41 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 6
 {executed in 0 msec}
[2024-12-03 11:19:41 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3c31d519-96b0-49bd-8657-d1eac4fb3fc1.jpg |
|-----------------------------------------|

[2024-12-03 11:19:41 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 6
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:19:41 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:19:54 INFO http-nio-8080-exec-1] [com.green.greengramver2.feed.comment.FeedCommentController] feedCommentGet : FeedCommentGetReq(feedId=0, page=2, size=21, sIdx=26)
[2024-12-03 11:19:54 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 0
        ORDER BY feed_comment_id DESC
        LIMIT 26, 21
 {executed in 0 msec}
[2024-12-03 11:19:54 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:20:56 WARN HikariPool-1 housekeeper] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1m14s662ms804µs800ns).
[2024-12-03 11:20:56 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-03 11:20:56 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-03 11:20:58 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 10944 (D:\Students\jang jin seong\GreenGramVer2\build\classes\java\main started by Administrator in D:\Students\jang jin seong\GreenGramVer2)
[2024-12-03 11:20:58 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-03 11:20:58 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-03 11:20:58 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-03 11:20:59 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-03 11:20:59 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-03 11:20:59 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-03 11:20:59 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-03 11:20:59 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-03 11:20:59 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 818 ms
[2024-12-03 11:20:59 INFO restartedMain] [com.green.greengramver2.common.MyFileUtils] MFU 생성자: D:\Students\jang jin seong\download\greengram_ver2
[2024-12-03 11:20:59 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-03 11:20:59 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-03 11:20:59 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-03 11:20:59 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-03 11:20:59 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Started GreenGramVer2Application in 1.745 seconds (process running for 2.178)
[2024-12-03 11:22:56 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 5640 (D:\Students\jang jin seong\GreenGramVer2\build\classes\java\main started by Administrator in D:\Students\jang jin seong\GreenGramVer2)
[2024-12-03 11:22:56 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-03 11:22:56 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-03 11:22:56 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-03 11:22:57 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-03 11:22:57 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-03 11:22:57 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-03 11:22:57 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-03 11:22:57 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-03 11:22:57 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 837 ms
[2024-12-03 11:22:57 INFO restartedMain] [com.green.greengramver2.common.MyFileUtils] MFU 생성자: D:\Students\jang jin seong\download\greengram_ver2
[2024-12-03 11:22:57 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-03 11:22:58 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-03 11:22:58 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-03 11:22:58 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-03 11:22:58 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Started GreenGramVer2Application in 1.755 seconds (process running for 2.151)
[2024-12-03 11:24:30 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 6896 (D:\Students\jang jin seong\GreenGramVer2\build\classes\java\main started by Administrator in D:\Students\jang jin seong\GreenGramVer2)
[2024-12-03 11:24:30 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-03 11:24:30 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-03 11:24:30 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-03 11:24:31 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-03 11:24:31 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-03 11:24:31 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-03 11:24:31 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-03 11:24:31 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-03 11:24:31 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 768 ms
[2024-12-03 11:24:31 INFO restartedMain] [com.green.greengramver2.common.MyFileUtils] MFU 생성자: D:\Students\jang jin seong\download\greengram_ver2
[2024-12-03 11:24:31 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-03 11:24:32 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-03 11:24:32 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-03 11:24:32 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-03 11:24:32 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Started GreenGramVer2Application in 1.705 seconds (process running for 2.08)
[2024-12-03 11:24:38 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-03 11:24:38 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-03 11:24:38 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 0 ms
[2024-12-03 11:24:38 INFO http-nio-8080-exec-8] [com.green.greengramver2.feed.model.FeedGetReq] FeedGetReq 1,null,1
[2024-12-03 11:24:38 INFO http-nio-8080-exec-8] [com.green.greengramver2.feed.FeedController] feedC getFeedList p: FeedGetReq(super=Paging(page=1, size=20, sIdx=0), signedUserId=1)
[2024-12-03 11:24:38 INFO http-nio-8080-exec-8] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-03 11:24:38 INFO http-nio-8080-exec-8] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@e7fa80
[2024-12-03 11:24:38 INFO http-nio-8080-exec-8] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-03 11:24:38 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, writer_user_id AS writerUserId,
        if(nick_name IS NULL , uid, nick_name) AS writerNm,
        pic AS writerPic, contents, location, a.created_at AS createdAt,
        if(c.feed_id IS NULL ,0 , 1) AS isLike
        FROM feed A
        JOIN user B
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c
        ON a.feed_id = c.feed_id
        AND c.user_id = 1
        ORDER BY a.feed_id DESC
        LIMIT 0,20
 {executed in 0 msec}
[2024-12-03 11:24:38 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|feed_id |writer_user_id |writernm |pic                                      |contents     |location |created_at          |islike |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|27      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |I am panguin |남극       |2024-11-29 17:07:59 |0      |
|26      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |I am panguin |남극       |2024-11-29 16:46:01 |0      |
|25      |5              |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |4123         |213      |2024-11-29 16:32:31 |0      |
|24      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |31231        |123      |2024-11-29 16:01:53 |0      |
|23      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |4754         |444      |2024-11-29 16:00:03 |0      |
|22      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |aaa          |aa       |2024-11-29 15:58:25 |0      |
|14      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:51:21 |1      |
|13      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:51:14 |1      |
|12      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:42:17 |1      |
|11      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |123          |33123    |2024-11-29 10:42:01 |0      |
|9       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |21123        |3        |2024-11-29 10:37:22 |0      |
|7       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-28 17:20:59 |1      |
|6       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |             |         |2024-11-28 17:15:01 |0      |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|

[2024-12-03 11:24:38 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 27
 {executed in 1 msec}
[2024-12-03 11:24:38 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5a0d637a-00c7-441f-a9fa-c0dc68af2602.jpg |
|-----------------------------------------|

[2024-12-03 11:24:38 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 27
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 11:24:38 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|1       |11              |ㅇㅇ      |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|5       |7               |2       |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |6               |123     |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |4               |ㅇ       |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-03 11:24:38 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 26
 {executed in 1 msec}
[2024-12-03 11:24:38 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3e5fe979-fe9c-4ed6-9ad7-c1dbf4f2538f.jpg |
|-----------------------------------------|

[2024-12-03 11:24:38 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 26
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 11:24:38 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|1       |9               |s       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|5       |8               |123     |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-03 11:24:38 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 25
 {executed in 1 msec}
[2024-12-03 11:24:38 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|8213634a-99df-42d8-963e-87bc120cc8a7.jpg |
|-----------------------------------------|

[2024-12-03 11:24:38 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 25
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:24:38 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:24:38 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 24
 {executed in 0 msec}
[2024-12-03 11:24:38 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|dfe6f2c1-3753-4a6a-aff4-0de7fa2786b8.jpg |
|-----------------------------------------|

[2024-12-03 11:24:38 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 24
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:24:38 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:24:38 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 23
 {executed in 0 msec}
[2024-12-03 11:24:38 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f3e6375d-35d8-4a4a-a976-26ca5c6abaac.jpg |
|-----------------------------------------|

[2024-12-03 11:24:38 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 23
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 11:24:38 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:24:38 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 22
 {executed in 0 msec}
[2024-12-03 11:24:38 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e97360ca-fe79-48c3-acaa-cd71042a0a78.tif |
|-----------------------------------------|

[2024-12-03 11:24:38 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 22
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:24:38 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:24:38 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 14
 {executed in 0 msec}
[2024-12-03 11:24:38 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a3709fe6-3e0d-4f04-8cef-1cc328c4fc0c.jpg |
|ada457b9-68aa-4a78-b0c8-c5035af844e2.jpg |
|-----------------------------------------|

[2024-12-03 11:24:38 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 14
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:24:38 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:24:38 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 13
 {executed in 0 msec}
[2024-12-03 11:24:38 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6fe5de58-57ef-47e7-80c7-49c0506ca143.jpg |
|920ca8e8-5dc2-4844-aa7f-d7782e94d380.jpg |
|-----------------------------------------|

[2024-12-03 11:24:38 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 13
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:24:38 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:24:38 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 12
 {executed in 0 msec}
[2024-12-03 11:24:38 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|84e77be4-2b62-4f40-8f8b-0803e1080449.jpg |
|84f31709-40aa-40eb-a7e7-da0219067927.jpg |
|-----------------------------------------|

[2024-12-03 11:24:38 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 12
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:24:38 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:24:38 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 11
 {executed in 0 msec}
[2024-12-03 11:24:38 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3fc51a83-46ea-43ca-a85b-6fad4794a2bd.jpg |
|49906eb9-a412-4428-a629-baccbe152c75.jpg |
|-----------------------------------------|

[2024-12-03 11:24:38 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 11
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:24:38 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:24:38 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 9
 {executed in 0 msec}
[2024-12-03 11:24:38 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|34669219-c5d3-4d84-a277-fd8c2b8bca4f.jpg |
|f1ed44ba-1254-4232-9a0d-65037abe1e9c.jpg |
|-----------------------------------------|

[2024-12-03 11:24:38 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 9
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:24:38 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:24:38 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 7
 {executed in 0 msec}
[2024-12-03 11:24:38 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|14ecfa41-07fc-40d0-b50b-3fe95a840992.jpg |
|2694c9a6-a7b3-4800-ac73-0c853e16a152.jpg |
|-----------------------------------------|

[2024-12-03 11:24:38 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 7
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 11:24:38 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:24:38 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 6
 {executed in 0 msec}
[2024-12-03 11:24:38 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3c31d519-96b0-49bd-8657-d1eac4fb3fc1.jpg |
|-----------------------------------------|

[2024-12-03 11:24:38 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 6
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:24:38 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:24:40 WARN http-nio-8080-exec-1] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.bind.MissingServletRequestParameterException: Required request parameter 'feedId' for method parameter type long is not present]
[2024-12-03 11:25:32 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-03 11:25:32 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-03 11:25:34 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 10624 (D:\Students\jang jin seong\GreenGramVer2\build\classes\java\main started by Administrator in D:\Students\jang jin seong\GreenGramVer2)
[2024-12-03 11:25:34 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-03 11:25:34 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-03 11:25:34 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-03 11:25:35 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-03 11:25:35 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-03 11:25:35 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-03 11:25:35 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-03 11:25:35 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-03 11:25:35 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 759 ms
[2024-12-03 11:25:35 INFO restartedMain] [com.green.greengramver2.common.MyFileUtils] MFU 생성자: D:\Students\jang jin seong\download\greengram_ver2
[2024-12-03 11:25:35 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-03 11:25:36 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-03 11:25:36 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-03 11:25:36 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-03 11:25:36 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Started GreenGramVer2Application in 1.607 seconds (process running for 1.957)
[2024-12-03 11:25:38 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-03 11:25:38 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-03 11:25:38 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 0 ms
[2024-12-03 11:25:38 INFO http-nio-8080-exec-9] [com.green.greengramver2.feed.model.FeedGetReq] FeedGetReq 1,null,1
[2024-12-03 11:25:38 INFO http-nio-8080-exec-9] [com.green.greengramver2.feed.FeedController] feedC getFeedList p: FeedGetReq(super=Paging(page=1, size=20, sIdx=0), signedUserId=1)
[2024-12-03 11:25:38 INFO http-nio-8080-exec-9] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-03 11:25:38 INFO http-nio-8080-exec-9] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@7cd0a3d4
[2024-12-03 11:25:38 INFO http-nio-8080-exec-9] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-03 11:25:38 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, writer_user_id AS writerUserId,
        if(nick_name IS NULL , uid, nick_name) AS writerNm,
        pic AS writerPic, contents, location, a.created_at AS createdAt,
        if(c.feed_id IS NULL ,0 , 1) AS isLike
        FROM feed A
        JOIN user B
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c
        ON a.feed_id = c.feed_id
        AND c.user_id = 1
        ORDER BY a.feed_id DESC
        LIMIT 0,20
 {executed in 1 msec}
[2024-12-03 11:25:38 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|feed_id |writer_user_id |writernm |pic                                      |contents     |location |created_at          |islike |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|27      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |I am panguin |남극       |2024-11-29 17:07:59 |0      |
|26      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |I am panguin |남극       |2024-11-29 16:46:01 |0      |
|25      |5              |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |4123         |213      |2024-11-29 16:32:31 |0      |
|24      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |31231        |123      |2024-11-29 16:01:53 |0      |
|23      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |4754         |444      |2024-11-29 16:00:03 |0      |
|22      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |aaa          |aa       |2024-11-29 15:58:25 |0      |
|14      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:51:21 |1      |
|13      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:51:14 |1      |
|12      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:42:17 |1      |
|11      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |123          |33123    |2024-11-29 10:42:01 |0      |
|9       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |21123        |3        |2024-11-29 10:37:22 |0      |
|7       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-28 17:20:59 |1      |
|6       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |             |         |2024-11-28 17:15:01 |0      |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|

[2024-12-03 11:25:38 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 27
 {executed in 1 msec}
[2024-12-03 11:25:38 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5a0d637a-00c7-441f-a9fa-c0dc68af2602.jpg |
|-----------------------------------------|

[2024-12-03 11:25:38 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 27
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:25:38 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|1       |11              |ㅇㅇ      |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|5       |7               |2       |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |6               |123     |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |4               |ㅇ       |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-03 11:25:38 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 26
 {executed in 1 msec}
[2024-12-03 11:25:38 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3e5fe979-fe9c-4ed6-9ad7-c1dbf4f2538f.jpg |
|-----------------------------------------|

[2024-12-03 11:25:38 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 26
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:25:38 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|1       |9               |s       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|5       |8               |123     |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-03 11:25:38 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 25
 {executed in 0 msec}
[2024-12-03 11:25:38 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|8213634a-99df-42d8-963e-87bc120cc8a7.jpg |
|-----------------------------------------|

[2024-12-03 11:25:38 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 25
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:25:38 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:25:38 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 24
 {executed in 0 msec}
[2024-12-03 11:25:38 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|dfe6f2c1-3753-4a6a-aff4-0de7fa2786b8.jpg |
|-----------------------------------------|

[2024-12-03 11:25:38 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 24
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 11:25:38 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:25:38 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 23
 {executed in 0 msec}
[2024-12-03 11:25:38 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f3e6375d-35d8-4a4a-a976-26ca5c6abaac.jpg |
|-----------------------------------------|

[2024-12-03 11:25:38 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 23
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:25:38 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:25:38 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 22
 {executed in 1 msec}
[2024-12-03 11:25:38 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e97360ca-fe79-48c3-acaa-cd71042a0a78.tif |
|-----------------------------------------|

[2024-12-03 11:25:38 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 22
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:25:38 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:25:38 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 14
 {executed in 0 msec}
[2024-12-03 11:25:38 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a3709fe6-3e0d-4f04-8cef-1cc328c4fc0c.jpg |
|ada457b9-68aa-4a78-b0c8-c5035af844e2.jpg |
|-----------------------------------------|

[2024-12-03 11:25:38 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 14
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 11:25:38 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:25:38 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 13
 {executed in 0 msec}
[2024-12-03 11:25:38 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6fe5de58-57ef-47e7-80c7-49c0506ca143.jpg |
|920ca8e8-5dc2-4844-aa7f-d7782e94d380.jpg |
|-----------------------------------------|

[2024-12-03 11:25:38 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 13
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 11:25:38 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:25:38 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 12
 {executed in 0 msec}
[2024-12-03 11:25:38 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|84e77be4-2b62-4f40-8f8b-0803e1080449.jpg |
|84f31709-40aa-40eb-a7e7-da0219067927.jpg |
|-----------------------------------------|

[2024-12-03 11:25:38 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 12
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:25:38 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:25:38 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 11
 {executed in 0 msec}
[2024-12-03 11:25:38 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3fc51a83-46ea-43ca-a85b-6fad4794a2bd.jpg |
|49906eb9-a412-4428-a629-baccbe152c75.jpg |
|-----------------------------------------|

[2024-12-03 11:25:38 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 11
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:25:38 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:25:38 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 9
 {executed in 0 msec}
[2024-12-03 11:25:38 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|34669219-c5d3-4d84-a277-fd8c2b8bca4f.jpg |
|f1ed44ba-1254-4232-9a0d-65037abe1e9c.jpg |
|-----------------------------------------|

[2024-12-03 11:25:38 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 9
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:25:38 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:25:38 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 7
 {executed in 0 msec}
[2024-12-03 11:25:38 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|14ecfa41-07fc-40d0-b50b-3fe95a840992.jpg |
|2694c9a6-a7b3-4800-ac73-0c853e16a152.jpg |
|-----------------------------------------|

[2024-12-03 11:25:38 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 7
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:25:38 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:25:38 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 6
 {executed in 0 msec}
[2024-12-03 11:25:38 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3c31d519-96b0-49bd-8657-d1eac4fb3fc1.jpg |
|-----------------------------------------|

[2024-12-03 11:25:38 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 6
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:25:38 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:25:40 INFO http-nio-8080-exec-1] [com.green.greengramver2.feed.comment.FeedCommentController] feedCommentGet : FeedCommentGetReq(feedId=27, page=2, size=21, sIdx=26)
[2024-12-03 11:25:40 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 27
        ORDER BY feed_comment_id DESC
        LIMIT 26, 21
 {executed in 0 msec}
[2024-12-03 11:25:40 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:26:39 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-03 11:26:39 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-03 11:26:41 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 10392 (D:\Students\jang jin seong\GreenGramVer2\build\classes\java\main started by Administrator in D:\Students\jang jin seong\GreenGramVer2)
[2024-12-03 11:26:41 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-03 11:26:41 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-03 11:26:41 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-03 11:26:42 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-03 11:26:42 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-03 11:26:42 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-03 11:26:42 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-03 11:26:42 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-03 11:26:42 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 782 ms
[2024-12-03 11:26:42 INFO restartedMain] [com.green.greengramver2.common.MyFileUtils] MFU 생성자: D:\Students\jang jin seong\download\greengram_ver2
[2024-12-03 11:26:42 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-03 11:26:42 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-03 11:26:42 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-03 11:26:42 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-03 11:26:42 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Started GreenGramVer2Application in 1.662 seconds (process running for 2.011)
[2024-12-03 11:26:47 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-03 11:26:47 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-03 11:26:47 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-03 11:26:49 INFO http-nio-8080-exec-1] [com.green.greengramver2.feed.model.FeedGetReq] FeedGetReq 1,null,1
[2024-12-03 11:26:49 INFO http-nio-8080-exec-1] [com.green.greengramver2.feed.FeedController] feedC getFeedList p: FeedGetReq(super=Paging(page=1, size=20, sIdx=0), signedUserId=1)
[2024-12-03 11:26:49 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-03 11:26:49 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@3ca2a68f
[2024-12-03 11:26:49 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-03 11:26:49 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, writer_user_id AS writerUserId,
        if(nick_name IS NULL , uid, nick_name) AS writerNm,
        pic AS writerPic, contents, location, a.created_at AS createdAt,
        if(c.feed_id IS NULL ,0 , 1) AS isLike
        FROM feed A
        JOIN user B
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c
        ON a.feed_id = c.feed_id
        AND c.user_id = 1
        ORDER BY a.feed_id DESC
        LIMIT 0,20
 {executed in 0 msec}
[2024-12-03 11:26:49 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|feed_id |writer_user_id |writernm |pic                                      |contents     |location |created_at          |islike |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|27      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |I am panguin |남극       |2024-11-29 17:07:59 |0      |
|26      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |I am panguin |남극       |2024-11-29 16:46:01 |0      |
|25      |5              |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |4123         |213      |2024-11-29 16:32:31 |0      |
|24      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |31231        |123      |2024-11-29 16:01:53 |0      |
|23      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |4754         |444      |2024-11-29 16:00:03 |0      |
|22      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |aaa          |aa       |2024-11-29 15:58:25 |0      |
|14      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:51:21 |1      |
|13      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:51:14 |1      |
|12      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:42:17 |1      |
|11      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |123          |33123    |2024-11-29 10:42:01 |0      |
|9       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |21123        |3        |2024-11-29 10:37:22 |0      |
|7       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-28 17:20:59 |1      |
|6       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |             |         |2024-11-28 17:15:01 |0      |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|

[2024-12-03 11:26:49 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 27
 {executed in 0 msec}
[2024-12-03 11:26:49 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5a0d637a-00c7-441f-a9fa-c0dc68af2602.jpg |
|-----------------------------------------|

[2024-12-03 11:26:49 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 27
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:26:49 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|1       |11              |ㅇㅇ      |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|5       |7               |2       |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |6               |123     |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |4               |ㅇ       |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-03 11:26:49 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 26
 {executed in 0 msec}
[2024-12-03 11:26:49 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3e5fe979-fe9c-4ed6-9ad7-c1dbf4f2538f.jpg |
|-----------------------------------------|

[2024-12-03 11:26:49 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 26
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:26:49 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|1       |9               |s       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|5       |8               |123     |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-03 11:26:49 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 25
 {executed in 0 msec}
[2024-12-03 11:26:49 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|8213634a-99df-42d8-963e-87bc120cc8a7.jpg |
|-----------------------------------------|

[2024-12-03 11:26:49 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 25
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:26:49 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:26:49 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 24
 {executed in 0 msec}
[2024-12-03 11:26:49 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|dfe6f2c1-3753-4a6a-aff4-0de7fa2786b8.jpg |
|-----------------------------------------|

[2024-12-03 11:26:49 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 24
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:26:49 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:26:49 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 23
 {executed in 0 msec}
[2024-12-03 11:26:49 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f3e6375d-35d8-4a4a-a976-26ca5c6abaac.jpg |
|-----------------------------------------|

[2024-12-03 11:26:49 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 23
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:26:49 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:26:49 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 22
 {executed in 0 msec}
[2024-12-03 11:26:49 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e97360ca-fe79-48c3-acaa-cd71042a0a78.tif |
|-----------------------------------------|

[2024-12-03 11:26:49 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 22
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 11:26:49 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:26:49 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 14
 {executed in 0 msec}
[2024-12-03 11:26:49 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a3709fe6-3e0d-4f04-8cef-1cc328c4fc0c.jpg |
|ada457b9-68aa-4a78-b0c8-c5035af844e2.jpg |
|-----------------------------------------|

[2024-12-03 11:26:49 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 14
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 11:26:49 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:26:49 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 13
 {executed in 0 msec}
[2024-12-03 11:26:49 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6fe5de58-57ef-47e7-80c7-49c0506ca143.jpg |
|920ca8e8-5dc2-4844-aa7f-d7782e94d380.jpg |
|-----------------------------------------|

[2024-12-03 11:26:49 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 13
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:26:49 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:26:49 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 12
 {executed in 0 msec}
[2024-12-03 11:26:49 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|84e77be4-2b62-4f40-8f8b-0803e1080449.jpg |
|84f31709-40aa-40eb-a7e7-da0219067927.jpg |
|-----------------------------------------|

[2024-12-03 11:26:49 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 12
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:26:49 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:26:49 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 11
 {executed in 0 msec}
[2024-12-03 11:26:49 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3fc51a83-46ea-43ca-a85b-6fad4794a2bd.jpg |
|49906eb9-a412-4428-a629-baccbe152c75.jpg |
|-----------------------------------------|

[2024-12-03 11:26:49 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 11
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 11:26:49 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:26:49 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 9
 {executed in 0 msec}
[2024-12-03 11:26:49 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|34669219-c5d3-4d84-a277-fd8c2b8bca4f.jpg |
|f1ed44ba-1254-4232-9a0d-65037abe1e9c.jpg |
|-----------------------------------------|

[2024-12-03 11:26:49 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 9
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 11:26:49 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:26:49 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 7
 {executed in 0 msec}
[2024-12-03 11:26:49 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|14ecfa41-07fc-40d0-b50b-3fe95a840992.jpg |
|2694c9a6-a7b3-4800-ac73-0c853e16a152.jpg |
|-----------------------------------------|

[2024-12-03 11:26:49 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 7
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:26:49 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:26:49 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 6
 {executed in 0 msec}
[2024-12-03 11:26:49 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3c31d519-96b0-49bd-8657-d1eac4fb3fc1.jpg |
|-----------------------------------------|

[2024-12-03 11:26:49 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 6
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:26:49 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:26:51 INFO http-nio-8080-exec-7] [com.green.greengramver2.feed.comment.FeedCommentController] feedCommentGet : FeedCommentGetReq(feedId=27, page=2, size=21, sIdx=26)
[2024-12-03 11:26:51 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 27
        ORDER BY feed_comment_id DESC
        LIMIT 26, 21
 {executed in 0 msec}
[2024-12-03 11:26:51 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:26:51 INFO http-nio-8080-exec-7] [com.green.greengramver2.feed.comment.FeedCommentService] res: FeedCommentGetRes(MoreComment=false, commentList=[])
[2024-12-03 11:29:24 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-03 11:29:24 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-03 11:29:26 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 7380 (D:\Students\jang jin seong\GreenGramVer2\build\classes\java\main started by Administrator in D:\Students\jang jin seong\GreenGramVer2)
[2024-12-03 11:29:26 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-03 11:29:26 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-03 11:29:26 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-03 11:29:27 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-03 11:29:27 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-03 11:29:27 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-03 11:29:27 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-03 11:29:27 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-03 11:29:27 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 778 ms
[2024-12-03 11:29:27 INFO restartedMain] [com.green.greengramver2.common.MyFileUtils] MFU 생성자: D:\Students\jang jin seong\download\greengram_ver2
[2024-12-03 11:29:28 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-03 11:29:28 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-03 11:29:28 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-03 11:29:28 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-03 11:29:28 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Started GreenGramVer2Application in 1.767 seconds (process running for 2.126)
[2024-12-03 11:29:34 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-03 11:29:34 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-03 11:29:34 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 0 ms
[2024-12-03 11:29:34 INFO http-nio-8080-exec-9] [com.green.greengramver2.feed.model.FeedGetReq] FeedGetReq 1,null,1
[2024-12-03 11:29:34 INFO http-nio-8080-exec-9] [com.green.greengramver2.feed.FeedController] feedC getFeedList p: FeedGetReq(super=Paging(page=1, size=20, sIdx=0), signedUserId=1)
[2024-12-03 11:29:34 INFO http-nio-8080-exec-9] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-03 11:29:34 INFO http-nio-8080-exec-9] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@35cd00ea
[2024-12-03 11:29:34 INFO http-nio-8080-exec-9] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-03 11:29:34 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, writer_user_id AS writerUserId,
        if(nick_name IS NULL , uid, nick_name) AS writerNm,
        pic AS writerPic, contents, location, a.created_at AS createdAt,
        if(c.feed_id IS NULL ,0 , 1) AS isLike
        FROM feed A
        JOIN user B
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c
        ON a.feed_id = c.feed_id
        AND c.user_id = 1
        ORDER BY a.feed_id DESC
        LIMIT 0,20
 {executed in 1 msec}
[2024-12-03 11:29:34 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|feed_id |writer_user_id |writernm |pic                                      |contents     |location |created_at          |islike |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|27      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |I am panguin |남극       |2024-11-29 17:07:59 |0      |
|26      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |I am panguin |남극       |2024-11-29 16:46:01 |0      |
|25      |5              |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |4123         |213      |2024-11-29 16:32:31 |0      |
|24      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |31231        |123      |2024-11-29 16:01:53 |0      |
|23      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |4754         |444      |2024-11-29 16:00:03 |0      |
|22      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |aaa          |aa       |2024-11-29 15:58:25 |0      |
|14      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:51:21 |1      |
|13      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:51:14 |1      |
|12      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:42:17 |1      |
|11      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |123          |33123    |2024-11-29 10:42:01 |0      |
|9       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |21123        |3        |2024-11-29 10:37:22 |0      |
|7       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-28 17:20:59 |1      |
|6       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |             |         |2024-11-28 17:15:01 |0      |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|

[2024-12-03 11:29:34 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 27
 {executed in 1 msec}
[2024-12-03 11:29:34 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5a0d637a-00c7-441f-a9fa-c0dc68af2602.jpg |
|-----------------------------------------|

[2024-12-03 11:29:34 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 27
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 11:29:34 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|1       |11              |ㅇㅇ      |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|5       |7               |2       |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |6               |123     |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |4               |ㅇ       |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-03 11:29:34 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 26
 {executed in 0 msec}
[2024-12-03 11:29:34 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3e5fe979-fe9c-4ed6-9ad7-c1dbf4f2538f.jpg |
|-----------------------------------------|

[2024-12-03 11:29:34 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 26
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:29:34 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|1       |9               |s       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|5       |8               |123     |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-03 11:29:34 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 25
 {executed in 0 msec}
[2024-12-03 11:29:34 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|8213634a-99df-42d8-963e-87bc120cc8a7.jpg |
|-----------------------------------------|

[2024-12-03 11:29:34 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 25
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 11:29:34 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:29:34 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 24
 {executed in 0 msec}
[2024-12-03 11:29:34 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|dfe6f2c1-3753-4a6a-aff4-0de7fa2786b8.jpg |
|-----------------------------------------|

[2024-12-03 11:29:34 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 24
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:29:34 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:29:34 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 23
 {executed in 0 msec}
[2024-12-03 11:29:34 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f3e6375d-35d8-4a4a-a976-26ca5c6abaac.jpg |
|-----------------------------------------|

[2024-12-03 11:29:34 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 23
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:29:34 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:29:34 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 22
 {executed in 0 msec}
[2024-12-03 11:29:34 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e97360ca-fe79-48c3-acaa-cd71042a0a78.tif |
|-----------------------------------------|

[2024-12-03 11:29:34 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 22
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:29:34 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:29:34 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 14
 {executed in 0 msec}
[2024-12-03 11:29:34 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a3709fe6-3e0d-4f04-8cef-1cc328c4fc0c.jpg |
|ada457b9-68aa-4a78-b0c8-c5035af844e2.jpg |
|-----------------------------------------|

[2024-12-03 11:29:34 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 14
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:29:34 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:29:34 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 13
 {executed in 0 msec}
[2024-12-03 11:29:34 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6fe5de58-57ef-47e7-80c7-49c0506ca143.jpg |
|920ca8e8-5dc2-4844-aa7f-d7782e94d380.jpg |
|-----------------------------------------|

[2024-12-03 11:29:34 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 13
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:29:34 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:29:34 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 12
 {executed in 0 msec}
[2024-12-03 11:29:34 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|84e77be4-2b62-4f40-8f8b-0803e1080449.jpg |
|84f31709-40aa-40eb-a7e7-da0219067927.jpg |
|-----------------------------------------|

[2024-12-03 11:29:34 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 12
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:29:34 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:29:34 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 11
 {executed in 0 msec}
[2024-12-03 11:29:34 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3fc51a83-46ea-43ca-a85b-6fad4794a2bd.jpg |
|49906eb9-a412-4428-a629-baccbe152c75.jpg |
|-----------------------------------------|

[2024-12-03 11:29:34 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 11
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 11:29:34 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:29:34 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 9
 {executed in 0 msec}
[2024-12-03 11:29:34 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|34669219-c5d3-4d84-a277-fd8c2b8bca4f.jpg |
|f1ed44ba-1254-4232-9a0d-65037abe1e9c.jpg |
|-----------------------------------------|

[2024-12-03 11:29:34 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 9
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:29:34 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:29:34 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 7
 {executed in 0 msec}
[2024-12-03 11:29:34 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|14ecfa41-07fc-40d0-b50b-3fe95a840992.jpg |
|2694c9a6-a7b3-4800-ac73-0c853e16a152.jpg |
|-----------------------------------------|

[2024-12-03 11:29:34 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 7
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:29:34 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:29:34 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 6
 {executed in 0 msec}
[2024-12-03 11:29:34 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3c31d519-96b0-49bd-8657-d1eac4fb3fc1.jpg |
|-----------------------------------------|

[2024-12-03 11:29:34 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 6
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:29:34 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 11:29:36 INFO http-nio-8080-exec-1] [com.green.greengramver2.feed.comment.FeedCommentController] feedCommentGet : FeedCommentGetReq(feedId=27, page=2, size=21, sIdx=3)
[2024-12-03 11:29:36 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 27
        ORDER BY feed_comment_id DESC
        LIMIT 3, 21
 {executed in 0 msec}
[2024-12-03 11:29:36 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|--------|----------------|----------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment   |writernm |pic                                      |
|--------|----------------|----------|---------|-----------------------------------------|
|5       |4               |ㅇ         |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |3               |왜 로그에 두번이 |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |2               |귀엽긴해      |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |1               |ㄷ         |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|--------|----------------|----------|---------|-----------------------------------------|

[2024-12-03 11:29:36 INFO http-nio-8080-exec-1] [com.green.greengramver2.feed.comment.FeedCommentService] res: FeedCommentGetRes(MoreComment=false, commentList=[FeedCommentDto(writerUserId=5, feedCommentId=4, comment=ㅇ, writerNm=66, writerPic=d6440a69-541b-4d3c-969a-a6b643fd10de.jpg), FeedCommentDto(writerUserId=5, feedCommentId=3, comment=왜 로그에 두번이, writerNm=66, writerPic=d6440a69-541b-4d3c-969a-a6b643fd10de.jpg), FeedCommentDto(writerUserId=5, feedCommentId=2, comment=귀엽긴해, writerNm=66, writerPic=d6440a69-541b-4d3c-969a-a6b643fd10de.jpg), FeedCommentDto(writerUserId=5, feedCommentId=1, comment=ㄷ, writerNm=66, writerPic=d6440a69-541b-4d3c-969a-a6b643fd10de.jpg)])
[2024-12-03 12:00:26 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
[2024-12-03 12:00:26 INFO Thread-5] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-03 12:00:27 INFO Thread-5] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-03 12:00:27 INFO Thread-5] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-03 12:00:27 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 7380 (D:\Students\jang jin seong\GreenGramVer2\build\classes\java\main started by Administrator in D:\Students\jang jin seong\GreenGramVer2)
[2024-12-03 12:00:27 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-03 12:00:27 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-03 12:00:27 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-03 12:00:27 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-03 12:00:27 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-03 12:00:27 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-03 12:00:27 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 208 ms
[2024-12-03 12:00:27 INFO restartedMain] [com.green.greengramver2.common.MyFileUtils] MFU 생성자: D:\Students\jang jin seong\download\greengram_ver2
[2024-12-03 12:00:27 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-03 12:00:27 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-03 12:00:27 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-03 12:00:27 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-03 12:00:27 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Started GreenGramVer2Application in 0.446 seconds (process running for 1861.322)
[2024-12-03 12:00:27 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-03 12:05:41 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 6 class path changes (0 additions, 0 deletions, 6 modifications)
[2024-12-03 12:05:41 INFO Thread-7] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-03 12:05:42 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 7380 (D:\Students\jang jin seong\GreenGramVer2\build\classes\java\main started by Administrator in D:\Students\jang jin seong\GreenGramVer2)
[2024-12-03 12:05:42 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-03 12:05:42 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-03 12:05:42 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-03 12:05:42 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-03 12:05:42 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-03 12:05:42 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-03 12:05:42 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 191 ms
[2024-12-03 12:05:42 INFO restartedMain] [com.green.greengramver2.common.MyFileUtils] MFU 생성자: D:\Students\jang jin seong\download\greengram_ver2
[2024-12-03 12:05:42 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-03 12:05:42 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-03 12:05:42 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-03 12:05:42 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-03 12:05:42 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Started GreenGramVer2Application in 0.349 seconds (process running for 2176.22)
[2024-12-03 12:05:42 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-03 12:06:09 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
[2024-12-03 12:06:09 INFO Thread-11] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-03 12:06:09 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 7380 (D:\Students\jang jin seong\GreenGramVer2\build\classes\java\main started by Administrator in D:\Students\jang jin seong\GreenGramVer2)
[2024-12-03 12:06:09 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-03 12:06:09 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-03 12:06:09 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-03 12:06:09 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-03 12:06:09 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-03 12:06:09 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-03 12:06:09 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 168 ms
[2024-12-03 12:06:09 INFO restartedMain] [com.green.greengramver2.common.MyFileUtils] MFU 생성자: D:\Students\jang jin seong\download\greengram_ver2
[2024-12-03 12:06:09 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-03 12:06:09 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-03 12:06:09 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-03 12:06:09 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-03 12:06:09 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Started GreenGramVer2Application in 0.303 seconds (process running for 2203.62)
[2024-12-03 12:06:09 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-03 12:09:50 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-03 12:09:50 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-03 12:09:50 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 0 ms
[2024-12-03 12:09:50 INFO http-nio-8080-exec-8] [org.springdoc.api.AbstractOpenApiResource] Init duration for springdoc-openapi is: 166 ms
[2024-12-03 12:13:31 INFO SpringApplicationShutdownHook] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-03 12:13:33 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 11632 (D:\Students\jang jin seong\GreenGramVer2\build\classes\java\main started by Administrator in D:\Students\jang jin seong\GreenGramVer2)
[2024-12-03 12:13:33 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-03 12:13:33 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-03 12:13:33 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-03 12:13:34 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-03 12:13:34 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-03 12:13:34 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-03 12:13:34 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-03 12:13:34 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-03 12:13:34 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 892 ms
[2024-12-03 12:13:34 INFO restartedMain] [com.green.greengramver2.common.MyFileUtils] MFU 생성자: D:\Students\jang jin seong\download\greengram_ver2
[2024-12-03 12:13:34 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-03 12:13:34 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-03 12:13:34 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-03 12:13:34 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-03 12:13:34 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Started GreenGramVer2Application in 1.897 seconds (process running for 2.285)
[2024-12-03 12:13:36 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-03 12:13:36 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-03 12:13:36 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-03 12:13:36 INFO http-nio-8080-exec-6] [org.springdoc.api.AbstractOpenApiResource] Init duration for springdoc-openapi is: 186 ms
[2024-12-03 12:15:50 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 10692 (D:\Students\jang jin seong\GreenGramVer2\build\classes\java\main started by Administrator in D:\Students\jang jin seong\GreenGramVer2)
[2024-12-03 12:15:50 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-03 12:15:50 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-03 12:15:50 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-03 12:15:51 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-03 12:15:51 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-03 12:15:51 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-03 12:15:51 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-03 12:15:51 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-03 12:15:51 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 800 ms
[2024-12-03 12:15:51 INFO restartedMain] [com.green.greengramver2.common.MyFileUtils] MFU 생성자: D:\Students\jang jin seong\download\greengram_ver2
[2024-12-03 12:15:51 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-03 12:15:51 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-03 12:15:51 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-03 12:15:51 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-03 12:15:51 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Started GreenGramVer2Application in 1.661 seconds (process running for 2.066)
[2024-12-03 12:15:55 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-03 12:15:55 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-03 12:15:55 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-03 12:15:55 INFO http-nio-8080-exec-2] [org.springdoc.api.AbstractOpenApiResource] Init duration for springdoc-openapi is: 177 ms
[2024-12-03 12:16:20 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 10376 (D:\Students\jang jin seong\GreenGramVer2\build\classes\java\main started by Administrator in D:\Students\jang jin seong\GreenGramVer2)
[2024-12-03 12:16:20 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-03 12:16:20 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-03 12:16:20 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-03 12:16:21 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-03 12:16:21 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-03 12:16:21 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-03 12:16:21 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-03 12:16:21 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-03 12:16:21 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 768 ms
[2024-12-03 12:16:21 INFO restartedMain] [com.green.greengramver2.common.MyFileUtils] MFU 생성자: D:\Students\jang jin seong\download\greengram_ver2
[2024-12-03 12:16:21 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-03 12:16:21 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-03 12:16:21 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-03 12:16:21 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-03 12:16:21 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Started GreenGramVer2Application in 1.628 seconds (process running for 1.994)
[2024-12-03 12:16:29 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-03 12:16:29 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-03 12:16:29 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 0 ms
[2024-12-03 12:16:29 INFO http-nio-8080-exec-9] [org.springdoc.api.AbstractOpenApiResource] Init duration for springdoc-openapi is: 177 ms
[2024-12-03 12:27:29 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 7 class path changes (0 additions, 0 deletions, 7 modifications)
[2024-12-03 12:27:29 INFO Thread-5] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-03 12:27:29 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 10376 (D:\Students\jang jin seong\GreenGramVer2\build\classes\java\main started by Administrator in D:\Students\jang jin seong\GreenGramVer2)
[2024-12-03 12:27:29 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-03 12:27:29 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-03 12:27:29 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-03 12:27:29 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-03 12:27:29 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-03 12:27:29 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-03 12:27:29 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 208 ms
[2024-12-03 12:27:29 INFO restartedMain] [com.green.greengramver2.common.MyFileUtils] MFU 생성자: D:\Students\jang jin seong\download\greengram_ver2
[2024-12-03 12:27:29 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-03 12:27:30 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-03 12:27:30 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-03 12:27:30 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-03 12:27:30 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Started GreenGramVer2Application in 0.384 seconds (process running for 670.054)
[2024-12-03 12:27:30 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-03 12:42:13 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 6 class path changes (0 additions, 0 deletions, 6 modifications)
[2024-12-03 12:42:13 INFO Thread-7] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-03 12:42:13 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 10376 (D:\Students\jang jin seong\GreenGramVer2\build\classes\java\main started by Administrator in D:\Students\jang jin seong\GreenGramVer2)
[2024-12-03 12:42:13 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-03 12:42:13 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-03 12:42:13 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-03 12:42:13 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-03 12:42:13 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-03 12:42:13 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-03 12:42:13 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 186 ms
[2024-12-03 12:42:13 INFO restartedMain] [com.green.greengramver2.common.MyFileUtils] MFU 생성자: D:\Students\jang jin seong\download\greengram_ver2
[2024-12-03 12:42:13 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-03 12:42:13 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-03 12:42:13 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-03 12:42:13 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-03 12:42:13 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Started GreenGramVer2Application in 0.349 seconds (process running for 1553.955)
[2024-12-03 12:42:13 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-03 12:45:00 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 6 class path changes (0 additions, 0 deletions, 6 modifications)
[2024-12-03 12:45:00 INFO Thread-11] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-03 12:45:00 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 10376 (D:\Students\jang jin seong\GreenGramVer2\build\classes\java\main started by Administrator in D:\Students\jang jin seong\GreenGramVer2)
[2024-12-03 12:45:00 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-03 12:45:00 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-03 12:45:00 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-03 12:45:00 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-03 12:45:00 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-03 12:45:00 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-03 12:45:00 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 182 ms
[2024-12-03 12:45:00 INFO restartedMain] [com.green.greengramver2.common.MyFileUtils] MFU 생성자: D:\Students\jang jin seong\download\greengram_ver2
[2024-12-03 12:45:00 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-03 12:45:00 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-03 12:45:00 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-03 12:45:00 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-03 12:45:00 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Started GreenGramVer2Application in 0.316 seconds (process running for 1720.766)
[2024-12-03 12:45:00 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-03 12:45:15 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 6 class path changes (0 additions, 0 deletions, 6 modifications)
[2024-12-03 12:45:15 INFO Thread-15] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-03 12:45:15 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 10376 (D:\Students\jang jin seong\GreenGramVer2\build\classes\java\main started by Administrator in D:\Students\jang jin seong\GreenGramVer2)
[2024-12-03 12:45:15 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-03 12:45:16 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-03 12:45:16 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-03 12:45:16 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-03 12:45:16 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-03 12:45:16 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-03 12:45:16 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 170 ms
[2024-12-03 12:45:16 INFO restartedMain] [com.green.greengramver2.common.MyFileUtils] MFU 생성자: D:\Students\jang jin seong\download\greengram_ver2
[2024-12-03 12:45:16 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-03 12:45:16 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-03 12:45:16 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-03 12:45:16 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-03 12:45:16 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Started GreenGramVer2Application in 0.299 seconds (process running for 1736.287)
[2024-12-03 12:45:16 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-03 12:45:52 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 6 class path changes (0 additions, 0 deletions, 6 modifications)
[2024-12-03 12:45:52 INFO Thread-19] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-03 12:45:53 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 10376 (D:\Students\jang jin seong\GreenGramVer2\build\classes\java\main started by Administrator in D:\Students\jang jin seong\GreenGramVer2)
[2024-12-03 12:45:53 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-03 12:45:53 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-03 12:45:53 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-03 12:45:53 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-03 12:45:53 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-03 12:45:53 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-03 12:45:53 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 164 ms
[2024-12-03 12:45:53 INFO restartedMain] [com.green.greengramver2.common.MyFileUtils] MFU 생성자: D:\Students\jang jin seong\download\greengram_ver2
[2024-12-03 12:45:53 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-03 12:45:53 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-03 12:45:53 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-03 12:45:53 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-03 12:45:53 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Started GreenGramVer2Application in 0.293 seconds (process running for 1773.304)
[2024-12-03 12:45:53 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-03 12:48:32 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 6 class path changes (0 additions, 0 deletions, 6 modifications)
[2024-12-03 12:48:32 INFO Thread-23] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-03 12:48:32 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 10376 (D:\Students\jang jin seong\GreenGramVer2\build\classes\java\main started by Administrator in D:\Students\jang jin seong\GreenGramVer2)
[2024-12-03 12:48:32 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-03 12:48:32 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-03 12:48:32 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-03 12:48:32 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-03 12:48:32 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-03 12:48:32 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-03 12:48:32 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 161 ms
[2024-12-03 12:48:32 INFO restartedMain] [com.green.greengramver2.common.MyFileUtils] MFU 생성자: D:\Students\jang jin seong\download\greengram_ver2
[2024-12-03 12:48:32 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-03 12:48:32 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-03 12:48:32 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-03 12:48:32 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-03 12:48:32 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Started GreenGramVer2Application in 0.297 seconds (process running for 1932.509)
[2024-12-03 12:48:32 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-03 12:48:59 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-03 12:48:59 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-03 12:48:59 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 0 ms
[2024-12-03 12:48:59 INFO http-nio-8080-exec-1] [com.green.greengramver2.feed.comment.FeedCommentController] delFeedComment FeedCommentDelReq(feedCommentId=0, signedUserId=2)
[2024-12-03 12:48:59 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-03 12:48:59 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@542e26d4
[2024-12-03 12:48:59 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-03 12:48:59 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. delete
        from feed_comments
        where user_id = 2 and feed_comment_id = 0
 {executed in 1 msec}
[2024-12-03 12:50:11 INFO http-nio-8080-exec-5] [com.green.greengramver2.feed.comment.FeedCommentController] delFeedComment FeedCommentDelReq(feedCommentId=11, signedUserId=1)
[2024-12-03 12:50:11 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. delete
        from feed_comments
        where user_id = 1 and feed_comment_id = 11
 {executed in 6 msec}
[2024-12-03 12:53:34 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-03 12:53:34 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-03 12:53:36 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 10864 (D:\Students\jang jin seong\GreenGramVer2\build\classes\java\main started by Administrator in D:\Students\jang jin seong\GreenGramVer2)
[2024-12-03 12:53:36 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-03 12:53:36 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-03 12:53:36 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-03 12:53:37 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-03 12:53:37 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-03 12:53:37 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-03 12:53:37 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-03 12:53:37 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-03 12:53:37 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 782 ms
[2024-12-03 12:53:37 INFO restartedMain] [com.green.greengramver2.common.MyFileUtils] MFU 생성자: D:\Students\jang jin seong\download\greengram_ver2
[2024-12-03 12:53:37 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-03 12:53:38 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-03 12:53:38 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-03 12:53:38 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-03 12:53:38 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Started GreenGramVer2Application in 1.808 seconds (process running for 2.168)
[2024-12-03 12:53:46 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-03 12:53:46 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-03 12:53:46 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-03 12:53:46 INFO http-nio-8080-exec-1] [com.green.greengramver2.feed.comment.FeedCommentController] feedCommentP FeedCommentPostReq(feedId=27, userId=1, comment=123, feedCommentId=0)
[2024-12-03 12:53:46 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-03 12:53:46 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@dead3b5
[2024-12-03 12:53:46 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-03 12:53:46 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. insert into feed_comments
        set user_id = 1,
            feed_id = 27,
            `comment` = '123'
 {executed in 6 msec}
[2024-12-03 12:53:46 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: insert into feed_comments
        set user_id = 1,
            feed_id = 27,
            `comment` = '123'
 {executed in 1 msec}
[2024-12-03 12:53:46 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|12        |
|----------|

[2024-12-03 12:53:49 INFO http-nio-8080-exec-2] [com.green.greengramver2.feed.comment.FeedCommentController] delFeedComment FeedCommentDelReq(feedCommentId=12, signedUserId=1)
[2024-12-03 12:53:49 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. delete
        from feed_comments
        where user_id = 1 and feed_comment_id = 12
 {executed in 6 msec}
[2024-12-03 12:53:49 INFO http-nio-8080-exec-2] [com.green.greengramver2.feed.comment.FeedCommentController] res 1
[2024-12-03 12:53:59 INFO http-nio-8080-exec-3] [com.green.greengramver2.feed.comment.FeedCommentController] delFeedComment FeedCommentDelReq(feedCommentId=0, signedUserId=2)
[2024-12-03 12:53:59 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. delete
        from feed_comments
        where user_id = 2 and feed_comment_id = 0
 {executed in 0 msec}
[2024-12-03 12:53:59 INFO http-nio-8080-exec-3] [com.green.greengramver2.feed.comment.FeedCommentController] res 0
[2024-12-03 12:55:41 INFO http-nio-8080-exec-7] [com.green.greengramver2.feed.comment.FeedCommentController] feedCommentP FeedCommentPostReq(feedId=27, userId=1, comment=123, feedCommentId=0)
[2024-12-03 12:55:41 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. insert into feed_comments
        set user_id = 1,
            feed_id = 27,
            `comment` = '123'
 {executed in 6 msec}
[2024-12-03 12:55:41 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: insert into feed_comments
        set user_id = 1,
            feed_id = 27,
            `comment` = '123'
 {executed in 0 msec}
[2024-12-03 12:55:41 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|13        |
|----------|

[2024-12-03 12:55:43 INFO http-nio-8080-exec-8] [com.green.greengramver2.feed.comment.FeedCommentController] delFeedComment FeedCommentDelReq(feedCommentId=13, signedUserId=1)
[2024-12-03 12:55:43 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. delete
        from feed_comments
        where user_id = 1 and feed_comment_id = 13
 {executed in 6 msec}
[2024-12-03 12:55:43 INFO http-nio-8080-exec-8] [com.green.greengramver2.feed.comment.FeedCommentController] res 1
[2024-12-03 12:59:45 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-03 12:59:45 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-03 12:59:46 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 4736 (D:\Students\jang jin seong\GreenGramVer2\build\classes\java\main started by Administrator in D:\Students\jang jin seong\GreenGramVer2)
[2024-12-03 12:59:46 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-03 12:59:46 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-03 12:59:46 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-03 12:59:47 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-03 12:59:47 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-03 12:59:47 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-03 12:59:47 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-03 12:59:47 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-03 12:59:47 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 763 ms
[2024-12-03 12:59:47 INFO restartedMain] [com.green.greengramver2.common.MyFileUtils] MFU 생성자: D:\Students\jang jin seong\download\greengram_ver2
[2024-12-03 12:59:47 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-03 12:59:48 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-03 12:59:48 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-03 12:59:48 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-03 12:59:48 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Started GreenGramVer2Application in 1.677 seconds (process running for 2.028)
[2024-12-03 12:59:50 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-03 12:59:50 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-03 12:59:50 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 0 ms
[2024-12-03 12:59:50 INFO http-nio-8080-exec-1] [com.green.greengramver2.feed.comment.FeedCommentController] feedCommentP FeedCommentPostReq(feedId=27, userId=1, comment=123, feedCommentId=0)
[2024-12-03 12:59:50 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-03 12:59:50 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@729067c5
[2024-12-03 12:59:50 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-03 12:59:50 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. insert into feed_comments
        set user_id = 1,
            feed_id = 27,
            `comment` = '123'
 {executed in 6 msec}
[2024-12-03 12:59:50 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: insert into feed_comments
        set user_id = 1,
            feed_id = 27,
            `comment` = '123'
 {executed in 1 msec}
[2024-12-03 12:59:50 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|14        |
|----------|

[2024-12-03 12:59:52 INFO http-nio-8080-exec-2] [com.green.greengramver2.feed.comment.FeedCommentController] delFeedComment FeedCommentDelReq(feedCommentId=14, signedUserId=1)
[2024-12-03 12:59:52 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. delete
        from feed_comments
        where user_id = 1 and feed_comment_id = 14
 {executed in 7 msec}
[2024-12-03 12:59:52 INFO http-nio-8080-exec-2] [com.green.greengramver2.feed.comment.FeedCommentController] res 1
[2024-12-03 13:06:01 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 6 class path changes (0 additions, 0 deletions, 6 modifications)
[2024-12-03 13:06:01 INFO Thread-5] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-03 13:06:01 INFO Thread-5] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-03 13:06:01 INFO Thread-5] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-03 13:06:01 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 4736 (D:\Students\jang jin seong\GreenGramVer2\build\classes\java\main started by Administrator in D:\Students\jang jin seong\GreenGramVer2)
[2024-12-03 13:06:01 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-03 13:06:01 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-03 13:06:01 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-03 13:06:01 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-03 13:06:01 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-03 13:06:01 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-03 13:06:01 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 200 ms
[2024-12-03 13:06:01 INFO restartedMain] [com.green.greengramver2.common.MyFileUtils] MFU 생성자: D:\Students\jang jin seong\download\greengram_ver2
[2024-12-03 13:06:01 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-03 13:06:02 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-03 13:06:02 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-03 13:06:02 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-03 13:06:02 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Started GreenGramVer2Application in 0.374 seconds (process running for 375.862)
[2024-12-03 13:06:02 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-03 13:06:29 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-03 13:06:29 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-03 13:06:29 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-03 13:06:29 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.HikariDataSource] HikariPool-2 - Starting...
[2024-12-03 13:06:29 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.pool.HikariPool] HikariPool-2 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@5f25c328
[2024-12-03 13:06:29 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.HikariDataSource] HikariPool-2 - Start completed.
[2024-12-03 13:06:29 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 27
        ORDER BY feed_comment_id DESC
        LIMIT 3, 21
 {executed in 0 msec}
[2024-12-03 13:06:29 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|--------|----------------|----------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment   |writernm |pic                                      |
|--------|----------------|----------|---------|-----------------------------------------|
|5       |3               |왜 로그에 두번이 |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |2               |귀엽긴해      |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |1               |ㄷ         |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|--------|----------------|----------|---------|-----------------------------------------|

[2024-12-03 13:06:29 INFO http-nio-8080-exec-1] [com.green.greengramver2.feed.comment.FeedCommentService] res: FeedCommentGetRes(MoreComment=false, commentList=[FeedCommentDto(writerUserId=5, feedCommentId=3, comment=왜 로그에 두번이, writerNm=66, writerPic=d6440a69-541b-4d3c-969a-a6b643fd10de.jpg), FeedCommentDto(writerUserId=5, feedCommentId=2, comment=귀엽긴해, writerNm=66, writerPic=d6440a69-541b-4d3c-969a-a6b643fd10de.jpg), FeedCommentDto(writerUserId=5, feedCommentId=1, comment=ㄷ, writerNm=66, writerPic=d6440a69-541b-4d3c-969a-a6b643fd10de.jpg)])
[2024-12-03 13:07:54 INFO http-nio-8080-exec-7] [com.green.greengramver2.feed.comment.FeedCommentController] feedCommentGet : FeedCommentGetReq(feedId=27, page=2, size=21, sIdx=3)
[2024-12-03 13:07:54 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 27
        ORDER BY feed_comment_id DESC
        LIMIT 3, 21
 {executed in 0 msec}
[2024-12-03 13:07:54 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|----------------|----------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment   |writernm |pic                                      |
|--------|----------------|----------|---------|-----------------------------------------|
|5       |3               |왜 로그에 두번이 |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |2               |귀엽긴해      |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |1               |ㄷ         |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|--------|----------------|----------|---------|-----------------------------------------|

[2024-12-03 13:07:54 INFO http-nio-8080-exec-7] [com.green.greengramver2.feed.comment.FeedCommentService] res: FeedCommentGetRes(MoreComment=false, commentList=[FeedCommentDto(writerUserId=5, feedCommentId=3, comment=왜 로그에 두번이, writerNm=66, writerPic=d6440a69-541b-4d3c-969a-a6b643fd10de.jpg), FeedCommentDto(writerUserId=5, feedCommentId=2, comment=귀엽긴해, writerNm=66, writerPic=d6440a69-541b-4d3c-969a-a6b643fd10de.jpg), FeedCommentDto(writerUserId=5, feedCommentId=1, comment=ㄷ, writerNm=66, writerPic=d6440a69-541b-4d3c-969a-a6b643fd10de.jpg)])
[2024-12-03 13:10:40 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-2 - Shutdown initiated...
[2024-12-03 13:10:40 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-2 - Shutdown completed.
[2024-12-03 13:10:42 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 5532 (D:\Students\jang jin seong\GreenGramVer2\build\classes\java\main started by Administrator in D:\Students\jang jin seong\GreenGramVer2)
[2024-12-03 13:10:42 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-03 13:10:42 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-03 13:10:42 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-03 13:10:43 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-03 13:10:43 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-03 13:10:43 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-03 13:10:43 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-03 13:10:43 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-03 13:10:43 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 792 ms
[2024-12-03 13:10:43 INFO restartedMain] [com.green.greengramver2.common.MyFileUtils] MFU 생성자: D:\Students\jang jin seong\download\greengram_ver2
[2024-12-03 13:10:43 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-03 13:10:43 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-03 13:10:43 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-03 13:10:43 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-03 13:10:43 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Started GreenGramVer2Application in 1.754 seconds (process running for 2.115)
[2024-12-03 13:10:51 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-03 13:10:51 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-03 13:10:51 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 0 ms
[2024-12-03 13:10:55 INFO http-nio-8080-exec-5] [org.springdoc.api.AbstractOpenApiResource] Init duration for springdoc-openapi is: 175 ms
[2024-12-03 13:11:07 ERRORhttp-nio-8080-exec-3] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.IllegalStateException: Invalid number of parameter names: 1 for constructor public com.green.greengramver2.feed.comment.model.FeedCommentDelReq(long,long)] with root cause
java.lang.IllegalStateException: Invalid number of parameter names: 1 for constructor public com.green.greengramver2.feed.comment.model.FeedCommentDelReq(long,long)
	at org.springframework.util.Assert.state(Assert.java:97)
	at org.springframework.beans.BeanUtils.getParameterNames(BeanUtils.java:656)
	at org.springframework.validation.DataBinder.createObject(DataBinder.java:934)
	at org.springframework.validation.DataBinder.construct(DataBinder.java:905)
	at org.springframework.web.bind.ServletRequestDataBinder.construct(ServletRequestDataBinder.java:116)
	at org.springframework.web.servlet.mvc.method.annotation.ServletModelAttributeMethodProcessor.constructAttribute(ServletModelAttributeMethodProcessor.java:157)
	at org.springframework.web.method.annotation.ModelAttributeMethodProcessor.resolveArgument(ModelAttributeMethodProcessor.java:148)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:224)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:178)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doDelete(FrameworkServlet.java:936)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:596)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-03 13:11:46 ERRORhttp-nio-8080-exec-7] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.IllegalStateException: Invalid number of parameter names: 1 for constructor public com.green.greengramver2.feed.comment.model.FeedCommentDelReq(long,long)] with root cause
java.lang.IllegalStateException: Invalid number of parameter names: 1 for constructor public com.green.greengramver2.feed.comment.model.FeedCommentDelReq(long,long)
	at org.springframework.util.Assert.state(Assert.java:97)
	at org.springframework.beans.BeanUtils.getParameterNames(BeanUtils.java:656)
	at org.springframework.validation.DataBinder.createObject(DataBinder.java:934)
	at org.springframework.validation.DataBinder.construct(DataBinder.java:905)
	at org.springframework.web.bind.ServletRequestDataBinder.construct(ServletRequestDataBinder.java:116)
	at org.springframework.web.servlet.mvc.method.annotation.ServletModelAttributeMethodProcessor.constructAttribute(ServletModelAttributeMethodProcessor.java:157)
	at org.springframework.web.method.annotation.ModelAttributeMethodProcessor.resolveArgument(ModelAttributeMethodProcessor.java:148)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:224)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:178)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doDelete(FrameworkServlet.java:936)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:596)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-03 13:12:24 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 11032 (D:\Students\jang jin seong\GreenGramVer2\build\classes\java\main started by Administrator in D:\Students\jang jin seong\GreenGramVer2)
[2024-12-03 13:12:24 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-03 13:12:24 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-03 13:12:24 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-03 13:12:25 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-03 13:12:25 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-03 13:12:25 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-03 13:12:25 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-03 13:12:25 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-03 13:12:25 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 861 ms
[2024-12-03 13:12:25 INFO restartedMain] [com.green.greengramver2.common.MyFileUtils] MFU 생성자: D:\Students\jang jin seong\download\greengram_ver2
[2024-12-03 13:12:25 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-03 13:12:26 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-03 13:12:26 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-03 13:12:26 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-03 13:12:26 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Started GreenGramVer2Application in 1.769 seconds (process running for 2.118)
[2024-12-03 13:12:28 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-03 13:12:28 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-03 13:12:28 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 0 ms
[2024-12-03 13:12:28 INFO http-nio-8080-exec-1] [com.green.greengramver2.feed.comment.FeedCommentController] delFeedComment FeedCommentDelReq(feedCommentId=0, signedUserId=0)
[2024-12-03 13:12:28 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-03 13:12:28 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@3208e35c
[2024-12-03 13:12:28 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-03 13:12:28 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. delete
        from feed_comments
        where user_id = 0 and feed_comment_id = 0
 {executed in 1 msec}
[2024-12-03 13:12:43 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-03 13:12:43 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-03 13:12:45 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 10500 (D:\Students\jang jin seong\GreenGramVer2\build\classes\java\main started by Administrator in D:\Students\jang jin seong\GreenGramVer2)
[2024-12-03 13:12:45 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-03 13:12:45 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-03 13:12:45 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-03 13:12:46 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-03 13:12:46 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-03 13:12:46 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-03 13:12:46 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-03 13:12:46 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-03 13:12:46 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 791 ms
[2024-12-03 13:12:46 INFO restartedMain] [com.green.greengramver2.common.MyFileUtils] MFU 생성자: D:\Students\jang jin seong\download\greengram_ver2
[2024-12-03 13:12:46 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-03 13:12:47 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-03 13:12:47 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-03 13:12:47 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-03 13:12:47 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Started GreenGramVer2Application in 1.807 seconds (process running for 2.177)
[2024-12-03 13:12:48 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-03 13:12:48 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-03 13:12:48 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-03 13:12:48 INFO http-nio-8080-exec-1] [com.green.greengramver2.feed.comment.FeedCommentController] delFeedComment FeedCommentDelReq(feedCommentId=0, signedUserId=0)
[2024-12-03 13:12:48 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-03 13:12:48 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@60de03bd
[2024-12-03 13:12:48 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-03 13:12:48 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. delete
        from feed_comments
        where user_id = 0 and feed_comment_id = 0
 {executed in 0 msec}
[2024-12-03 13:12:48 INFO http-nio-8080-exec-1] [com.green.greengramver2.feed.comment.FeedCommentController] delFeedComment FeedCommentDelReq(feedCommentId=0, signedUserId=0)
[2024-12-03 13:13:51 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-03 13:13:51 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-03 13:13:53 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 3064 (D:\Students\jang jin seong\GreenGramVer2\build\classes\java\main started by Administrator in D:\Students\jang jin seong\GreenGramVer2)
[2024-12-03 13:13:53 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-03 13:13:53 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-03 13:13:53 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-03 13:13:54 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-03 13:13:54 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-03 13:13:54 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-03 13:13:54 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-03 13:13:54 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-03 13:13:54 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 796 ms
[2024-12-03 13:13:54 INFO restartedMain] [com.green.greengramver2.common.MyFileUtils] MFU 생성자: D:\Students\jang jin seong\download\greengram_ver2
[2024-12-03 13:13:54 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-03 13:13:55 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-03 13:13:55 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-03 13:13:55 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-03 13:13:55 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Started GreenGramVer2Application in 1.707 seconds (process running for 2.06)
[2024-12-03 13:13:56 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-03 13:13:56 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-03 13:13:56 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-03 13:13:56 INFO http-nio-8080-exec-1] [com.green.greengramver2.feed.comment.FeedCommentController] delFeedComment FeedCommentDelReq(feedCommentId=0, signedUserId=0)
[2024-12-03 13:13:56 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-03 13:13:56 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@732180eb
[2024-12-03 13:13:56 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-03 13:13:56 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. delete
        from feed_comments
        where user_id = 0 and feed_comment_id = 0
 {executed in 0 msec}
[2024-12-03 13:16:06 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 6 class path changes (0 additions, 0 deletions, 6 modifications)
[2024-12-03 13:16:06 INFO Thread-5] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-03 13:16:06 INFO Thread-5] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-03 13:16:06 INFO Thread-5] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-03 13:16:06 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 3064 (D:\Students\jang jin seong\GreenGramVer2\build\classes\java\main started by Administrator in D:\Students\jang jin seong\GreenGramVer2)
[2024-12-03 13:16:06 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-03 13:16:06 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-03 13:16:06 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-03 13:16:06 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-03 13:16:06 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-03 13:16:06 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-03 13:16:06 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 188 ms
[2024-12-03 13:16:06 INFO restartedMain] [com.green.greengramver2.common.MyFileUtils] MFU 생성자: D:\Students\jang jin seong\download\greengram_ver2
[2024-12-03 13:16:06 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-03 13:16:06 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-03 13:16:06 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-03 13:16:06 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-03 13:16:06 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Started GreenGramVer2Application in 0.341 seconds (process running for 133.488)
[2024-12-03 13:16:06 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-03 13:16:23 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 6 class path changes (0 additions, 0 deletions, 6 modifications)
[2024-12-03 13:16:23 INFO Thread-7] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-03 13:16:23 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 3064 (D:\Students\jang jin seong\GreenGramVer2\build\classes\java\main started by Administrator in D:\Students\jang jin seong\GreenGramVer2)
[2024-12-03 13:16:23 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-03 13:16:23 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-03 13:16:23 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-03 13:16:23 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-03 13:16:23 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-03 13:16:23 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-03 13:16:23 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 179 ms
[2024-12-03 13:16:23 INFO restartedMain] [com.green.greengramver2.common.MyFileUtils] MFU 생성자: D:\Students\jang jin seong\download\greengram_ver2
[2024-12-03 13:16:24 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-03 13:16:24 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-03 13:16:24 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-03 13:16:24 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-03 13:16:24 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Started GreenGramVer2Application in 0.369 seconds (process running for 151.048)
[2024-12-03 13:16:24 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-03 14:00:49 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 6 class path changes (0 additions, 0 deletions, 6 modifications)
[2024-12-03 14:00:49 INFO Thread-11] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-03 14:00:49 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 3064 (D:\Students\jang jin seong\GreenGramVer2\build\classes\java\main started by Administrator in D:\Students\jang jin seong\GreenGramVer2)
[2024-12-03 14:00:49 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-03 14:00:49 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-03 14:00:49 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-03 14:00:49 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-03 14:00:49 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-03 14:00:49 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-03 14:00:49 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 182 ms
[2024-12-03 14:00:49 INFO restartedMain] [com.green.greengramver2.common.MyFileUtils] MFU 생성자: D:\Students\jang jin seong\download\greengram_ver2
[2024-12-03 14:00:49 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-03 14:00:49 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-03 14:00:49 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-03 14:00:49 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-03 14:00:49 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Started GreenGramVer2Application in 0.349 seconds (process running for 2816.629)
[2024-12-03 14:00:49 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-03 14:01:03 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-03 14:01:03 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-03 14:01:03 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 0 ms
[2024-12-03 14:01:06 INFO http-nio-8080-exec-5] [com.zaxxer.hikari.HikariDataSource] HikariPool-2 - Starting...
[2024-12-03 14:01:06 INFO http-nio-8080-exec-5] [com.zaxxer.hikari.pool.HikariPool] HikariPool-2 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@e901542
[2024-12-03 14:01:06 INFO http-nio-8080-exec-5] [com.zaxxer.hikari.HikariDataSource] HikariPool-2 - Start completed.
[2024-12-03 14:01:06 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 0
        ORDER BY feed_comment_id DESC
        LIMIT 3, 21
 {executed in 0 msec}
[2024-12-03 14:01:06 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 14:01:06 INFO http-nio-8080-exec-5] [com.green.greengramver2.feed.comment.FeedCommentService] res: FeedCommentGetRes(MoreComment=false, commentList=[])
[2024-12-03 14:02:01 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-2 - Shutdown initiated...
[2024-12-03 14:02:01 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-2 - Shutdown completed.
[2024-12-03 14:04:52 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 10604 (D:\Students\jang jin seong\GreenGramVer2\build\classes\java\main started by Administrator in D:\Students\jang jin seong\GreenGramVer2)
[2024-12-03 14:04:52 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-03 14:04:52 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-03 14:04:52 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-03 14:04:53 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-03 14:04:53 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-03 14:04:53 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-03 14:04:53 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-03 14:04:53 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-03 14:04:53 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 758 ms
[2024-12-03 14:04:53 INFO restartedMain] [com.green.greengramver2.common.MyFileUtils] MFU 생성자: D:\Students\jang jin seong\download\greengram_ver2
[2024-12-03 14:04:53 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-03 14:04:53 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-03 14:04:53 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-03 14:04:53 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-03 14:04:53 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Started GreenGramVer2Application in 1.606 seconds (process running for 1.957)
[2024-12-03 14:04:59 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-03 14:04:59 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-03 14:04:59 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 0 ms
[2024-12-03 14:04:59 INFO http-nio-8080-exec-1] [com.green.greengramver2.feed.comment.FeedCommentController] feedCommentGet : FeedCommentGetReq(feedId=2, page=27, size=21, sIdx=503)
[2024-12-03 14:04:59 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-03 14:04:59 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@18349a3a
[2024-12-03 14:04:59 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-03 14:04:59 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 2
        ORDER BY feed_comment_id DESC
        LIMIT 503, 21
 {executed in 1 msec}
[2024-12-03 14:04:59 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 14:04:59 INFO http-nio-8080-exec-1] [com.green.greengramver2.feed.comment.FeedCommentService] res: FeedCommentGetRes(MoreComment=false, commentList=[])
[2024-12-03 14:05:13 INFO http-nio-8080-exec-4] [com.green.greengramver2.feed.comment.FeedCommentController] feedCommentGet : FeedCommentGetReq(feedId=27, page=2, size=21, sIdx=3)
[2024-12-03 14:05:13 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 27
        ORDER BY feed_comment_id DESC
        LIMIT 3, 21
 {executed in 0 msec}
[2024-12-03 14:05:13 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|----------------|----------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment   |writernm |pic                                      |
|--------|----------------|----------|---------|-----------------------------------------|
|5       |3               |왜 로그에 두번이 |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |2               |귀엽긴해      |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |1               |ㄷ         |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|--------|----------------|----------|---------|-----------------------------------------|

[2024-12-03 14:05:13 INFO http-nio-8080-exec-4] [com.green.greengramver2.feed.comment.FeedCommentService] res: FeedCommentGetRes(MoreComment=false, commentList=[FeedCommentDto(writerUserId=5, feedCommentId=3, comment=왜 로그에 두번이, writerNm=66, writerPic=d6440a69-541b-4d3c-969a-a6b643fd10de.jpg), FeedCommentDto(writerUserId=5, feedCommentId=2, comment=귀엽긴해, writerNm=66, writerPic=d6440a69-541b-4d3c-969a-a6b643fd10de.jpg), FeedCommentDto(writerUserId=5, feedCommentId=1, comment=ㄷ, writerNm=66, writerPic=d6440a69-541b-4d3c-969a-a6b643fd10de.jpg)])
[2024-12-03 14:05:19 INFO http-nio-8080-exec-7] [com.green.greengramver2.feed.comment.FeedCommentController] feedCommentGet : FeedCommentGetReq(feedId=27, page=1, size=4, sIdx=0)
[2024-12-03 14:05:28 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-03 14:05:28 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-03 14:05:29 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 10552 (D:\Students\jang jin seong\GreenGramVer2\build\classes\java\main started by Administrator in D:\Students\jang jin seong\GreenGramVer2)
[2024-12-03 14:05:29 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-03 14:05:29 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-03 14:05:29 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-03 14:05:30 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-03 14:05:30 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-03 14:05:30 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-03 14:05:30 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-03 14:05:30 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-03 14:05:30 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 757 ms
[2024-12-03 14:05:30 INFO restartedMain] [com.green.greengramver2.common.MyFileUtils] MFU 생성자: D:\Students\jang jin seong\download\greengram_ver2
[2024-12-03 14:05:30 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-03 14:05:30 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-03 14:05:30 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-03 14:05:30 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-03 14:05:30 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Started GreenGramVer2Application in 1.605 seconds (process running for 1.949)
[2024-12-03 14:05:32 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-03 14:05:32 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-03 14:05:32 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-03 14:05:32 INFO http-nio-8080-exec-1] [com.green.greengramver2.feed.comment.FeedCommentController] feedCommentGet : FeedCommentGetReq(feedId=27, page=1, size=4, sIdx=0)
[2024-12-03 14:07:26 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 7832 (D:\Students\jang jin seong\GreenGramVer2\build\classes\java\main started by Administrator in D:\Students\jang jin seong\GreenGramVer2)
[2024-12-03 14:07:26 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-03 14:07:26 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-03 14:07:26 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-03 14:07:27 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-03 14:07:27 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-03 14:07:27 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-03 14:07:27 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-03 14:07:27 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-03 14:07:27 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 778 ms
[2024-12-03 14:07:27 INFO restartedMain] [com.green.greengramver2.common.MyFileUtils] MFU 생성자: D:\Students\jang jin seong\download\greengram_ver2
[2024-12-03 14:07:27 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-03 14:07:28 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-03 14:07:28 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-03 14:07:28 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-03 14:07:28 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Started GreenGramVer2Application in 1.78 seconds (process running for 2.162)
[2024-12-03 14:07:29 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-03 14:07:29 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-03 14:07:29 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-03 14:07:29 INFO http-nio-8080-exec-1] [com.green.greengramver2.feed.comment.FeedCommentController] feedCommentGet : FeedCommentGetReq(feedId=27, page=1, size=4, sIdx=0)
[2024-12-03 14:07:29 INFO http-nio-8080-exec-1] [com.green.greengramver2.feed.comment.FeedCommentController] feedCommentGet : FeedCommentGetRes(MoreComment=false, commentList=[])
[2024-12-03 14:08:28 INFO http-nio-8080-exec-10] [com.green.greengramver2.feed.model.FeedGetReq] FeedGetReq 1,null,1
[2024-12-03 14:08:28 INFO http-nio-8080-exec-10] [com.green.greengramver2.feed.FeedController] feedC getFeedList p: FeedGetReq(super=Paging(page=1, size=20, sIdx=0), signedUserId=1)
[2024-12-03 14:08:28 INFO http-nio-8080-exec-10] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-03 14:08:28 INFO http-nio-8080-exec-10] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@173f04a0
[2024-12-03 14:08:28 INFO http-nio-8080-exec-10] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-03 14:08:28 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, writer_user_id AS writerUserId,
        if(nick_name IS NULL , uid, nick_name) AS writerNm,
        pic AS writerPic, contents, location, a.created_at AS createdAt,
        if(c.feed_id IS NULL ,0 , 1) AS isLike
        FROM feed A
        JOIN user B
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c
        ON a.feed_id = c.feed_id
        AND c.user_id = 1
        ORDER BY a.feed_id DESC
        LIMIT 0,20
 {executed in 1 msec}
[2024-12-03 14:08:28 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|feed_id |writer_user_id |writernm |pic                                      |contents     |location |created_at          |islike |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|27      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |I am panguin |남극       |2024-11-29 17:07:59 |0      |
|26      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |I am panguin |남극       |2024-11-29 16:46:01 |0      |
|25      |5              |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |4123         |213      |2024-11-29 16:32:31 |0      |
|24      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |31231        |123      |2024-11-29 16:01:53 |0      |
|23      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |4754         |444      |2024-11-29 16:00:03 |0      |
|22      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |aaa          |aa       |2024-11-29 15:58:25 |0      |
|14      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:51:21 |1      |
|13      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:51:14 |1      |
|12      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:42:17 |1      |
|11      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |123          |33123    |2024-11-29 10:42:01 |0      |
|9       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |21123        |3        |2024-11-29 10:37:22 |0      |
|7       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-28 17:20:59 |1      |
|6       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |             |         |2024-11-28 17:15:01 |0      |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|

[2024-12-03 14:08:28 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 27
 {executed in 1 msec}
[2024-12-03 14:08:28 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5a0d637a-00c7-441f-a9fa-c0dc68af2602.jpg |
|-----------------------------------------|

[2024-12-03 14:08:28 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 27
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 14:08:28 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|----------------|----------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment   |writernm |pic                                      |
|--------|----------------|----------|---------|-----------------------------------------|
|5       |7               |2         |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |6               |123       |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |4               |ㅇ         |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |3               |왜 로그에 두번이 |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|--------|----------------|----------|---------|-----------------------------------------|

[2024-12-03 14:08:28 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 26
 {executed in 0 msec}
[2024-12-03 14:08:28 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3e5fe979-fe9c-4ed6-9ad7-c1dbf4f2538f.jpg |
|-----------------------------------------|

[2024-12-03 14:08:28 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 26
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 14:08:28 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|1       |9               |s       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|5       |8               |123     |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-03 14:08:28 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 25
 {executed in 0 msec}
[2024-12-03 14:08:28 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|8213634a-99df-42d8-963e-87bc120cc8a7.jpg |
|-----------------------------------------|

[2024-12-03 14:08:28 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 25
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:08:28 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 14:08:28 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 24
 {executed in 0 msec}
[2024-12-03 14:08:28 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|dfe6f2c1-3753-4a6a-aff4-0de7fa2786b8.jpg |
|-----------------------------------------|

[2024-12-03 14:08:28 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 24
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 14:08:28 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 14:08:28 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 23
 {executed in 0 msec}
[2024-12-03 14:08:28 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f3e6375d-35d8-4a4a-a976-26ca5c6abaac.jpg |
|-----------------------------------------|

[2024-12-03 14:08:28 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 23
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 14:08:28 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 14:08:28 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 22
 {executed in 0 msec}
[2024-12-03 14:08:28 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e97360ca-fe79-48c3-acaa-cd71042a0a78.tif |
|-----------------------------------------|

[2024-12-03 14:08:28 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 22
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 14:08:28 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 14:08:28 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 14
 {executed in 1 msec}
[2024-12-03 14:08:28 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a3709fe6-3e0d-4f04-8cef-1cc328c4fc0c.jpg |
|ada457b9-68aa-4a78-b0c8-c5035af844e2.jpg |
|-----------------------------------------|

[2024-12-03 14:08:28 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 14
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 14:08:28 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 14:08:28 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 13
 {executed in 0 msec}
[2024-12-03 14:08:28 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6fe5de58-57ef-47e7-80c7-49c0506ca143.jpg |
|920ca8e8-5dc2-4844-aa7f-d7782e94d380.jpg |
|-----------------------------------------|

[2024-12-03 14:08:28 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 13
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:08:28 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 14:08:28 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 12
 {executed in 0 msec}
[2024-12-03 14:08:28 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|84e77be4-2b62-4f40-8f8b-0803e1080449.jpg |
|84f31709-40aa-40eb-a7e7-da0219067927.jpg |
|-----------------------------------------|

[2024-12-03 14:08:28 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 12
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:08:28 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 14:08:28 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 11
 {executed in 1 msec}
[2024-12-03 14:08:28 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3fc51a83-46ea-43ca-a85b-6fad4794a2bd.jpg |
|49906eb9-a412-4428-a629-baccbe152c75.jpg |
|-----------------------------------------|

[2024-12-03 14:08:28 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 11
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:08:28 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 14:08:28 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 9
 {executed in 0 msec}
[2024-12-03 14:08:28 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|34669219-c5d3-4d84-a277-fd8c2b8bca4f.jpg |
|f1ed44ba-1254-4232-9a0d-65037abe1e9c.jpg |
|-----------------------------------------|

[2024-12-03 14:08:28 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 9
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:08:28 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 14:08:28 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 7
 {executed in 0 msec}
[2024-12-03 14:08:28 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|14ecfa41-07fc-40d0-b50b-3fe95a840992.jpg |
|2694c9a6-a7b3-4800-ac73-0c853e16a152.jpg |
|-----------------------------------------|

[2024-12-03 14:08:28 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 7
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:08:28 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 14:08:28 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 6
 {executed in 1 msec}
[2024-12-03 14:08:28 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3c31d519-96b0-49bd-8657-d1eac4fb3fc1.jpg |
|-----------------------------------------|

[2024-12-03 14:08:28 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 6
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:08:28 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 14:08:49 INFO http-nio-8080-exec-4] [com.green.greengramver2.feed.comment.FeedCommentController] feedCommentGet : FeedCommentGetReq(feedId=27, page=2, size=21, sIdx=3)
[2024-12-03 14:08:49 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 27
        ORDER BY feed_comment_id DESC
        LIMIT 3, 21
 {executed in 0 msec}
[2024-12-03 14:08:49 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|----------------|----------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment   |writernm |pic                                      |
|--------|----------------|----------|---------|-----------------------------------------|
|5       |3               |왜 로그에 두번이 |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |2               |귀엽긴해      |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |1               |ㄷ         |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|--------|----------------|----------|---------|-----------------------------------------|

[2024-12-03 14:08:49 INFO http-nio-8080-exec-4] [com.green.greengramver2.feed.comment.FeedCommentService] res: FeedCommentGetRes(MoreComment=false, commentList=[FeedCommentDto(writerUserId=5, feedCommentId=3, comment=왜 로그에 두번이, writerNm=66, writerPic=d6440a69-541b-4d3c-969a-a6b643fd10de.jpg), FeedCommentDto(writerUserId=5, feedCommentId=2, comment=귀엽긴해, writerNm=66, writerPic=d6440a69-541b-4d3c-969a-a6b643fd10de.jpg), FeedCommentDto(writerUserId=5, feedCommentId=1, comment=ㄷ, writerNm=66, writerPic=d6440a69-541b-4d3c-969a-a6b643fd10de.jpg)])
[2024-12-03 14:08:49 INFO http-nio-8080-exec-4] [com.green.greengramver2.feed.comment.FeedCommentController] feedCommentGet : FeedCommentGetRes(MoreComment=false, commentList=[FeedCommentDto(writerUserId=5, feedCommentId=3, comment=왜 로그에 두번이, writerNm=66, writerPic=d6440a69-541b-4d3c-969a-a6b643fd10de.jpg), FeedCommentDto(writerUserId=5, feedCommentId=2, comment=귀엽긴해, writerNm=66, writerPic=d6440a69-541b-4d3c-969a-a6b643fd10de.jpg), FeedCommentDto(writerUserId=5, feedCommentId=1, comment=ㄷ, writerNm=66, writerPic=d6440a69-541b-4d3c-969a-a6b643fd10de.jpg)])
[2024-12-03 14:09:08 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-03 14:09:08 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-03 14:09:11 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 3988 (D:\Students\jang jin seong\GreenGramVer2\build\classes\java\main started by Administrator in D:\Students\jang jin seong\GreenGramVer2)
[2024-12-03 14:09:11 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-03 14:09:11 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-03 14:09:11 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-03 14:09:11 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-03 14:09:11 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-03 14:09:11 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-03 14:09:11 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-03 14:09:11 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-03 14:09:11 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 775 ms
[2024-12-03 14:09:11 INFO restartedMain] [com.green.greengramver2.common.MyFileUtils] MFU 생성자: D:\Students\jang jin seong\download\greengram_ver2
[2024-12-03 14:09:12 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-03 14:09:12 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-03 14:09:12 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-03 14:09:12 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-03 14:09:12 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Started GreenGramVer2Application in 1.726 seconds (process running for 2.154)
[2024-12-03 14:09:14 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-03 14:09:14 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-03 14:09:14 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 0 ms
[2024-12-03 14:09:14 INFO http-nio-8080-exec-9] [com.green.greengramver2.feed.model.FeedGetReq] FeedGetReq 1,null,1
[2024-12-03 14:09:14 INFO http-nio-8080-exec-9] [com.green.greengramver2.feed.FeedController] feedC getFeedList p: FeedGetReq(super=Paging(page=1, size=20, sIdx=0), signedUserId=1)
[2024-12-03 14:09:14 INFO http-nio-8080-exec-9] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-03 14:09:14 INFO http-nio-8080-exec-9] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@27f6f5a2
[2024-12-03 14:09:14 INFO http-nio-8080-exec-9] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-03 14:09:14 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, writer_user_id AS writerUserId,
        if(nick_name IS NULL , uid, nick_name) AS writerNm,
        pic AS writerPic, contents, location, a.created_at AS createdAt,
        if(c.feed_id IS NULL ,0 , 1) AS isLike
        FROM feed A
        JOIN user B
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c
        ON a.feed_id = c.feed_id
        AND c.user_id = 1
        ORDER BY a.feed_id DESC
        LIMIT 0,20
 {executed in 0 msec}
[2024-12-03 14:09:14 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|feed_id |writer_user_id |writernm |pic                                      |contents     |location |created_at          |islike |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|27      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |I am panguin |남극       |2024-11-29 17:07:59 |0      |
|26      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |I am panguin |남극       |2024-11-29 16:46:01 |0      |
|25      |5              |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |4123         |213      |2024-11-29 16:32:31 |0      |
|24      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |31231        |123      |2024-11-29 16:01:53 |0      |
|23      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |4754         |444      |2024-11-29 16:00:03 |0      |
|22      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |aaa          |aa       |2024-11-29 15:58:25 |0      |
|14      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:51:21 |1      |
|13      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:51:14 |1      |
|12      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:42:17 |1      |
|11      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |123          |33123    |2024-11-29 10:42:01 |0      |
|9       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |21123        |3        |2024-11-29 10:37:22 |0      |
|7       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-28 17:20:59 |1      |
|6       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |             |         |2024-11-28 17:15:01 |0      |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|

[2024-12-03 14:09:14 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 27
 {executed in 0 msec}
[2024-12-03 14:09:14 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5a0d637a-00c7-441f-a9fa-c0dc68af2602.jpg |
|-----------------------------------------|

[2024-12-03 14:09:14 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 27
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:09:14 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|----------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment   |writernm |pic                                      |
|--------|----------------|----------|---------|-----------------------------------------|
|5       |7               |2         |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |6               |123       |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |4               |ㅇ         |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |3               |왜 로그에 두번이 |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|--------|----------------|----------|---------|-----------------------------------------|

[2024-12-03 14:09:14 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 26
 {executed in 0 msec}
[2024-12-03 14:09:14 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3e5fe979-fe9c-4ed6-9ad7-c1dbf4f2538f.jpg |
|-----------------------------------------|

[2024-12-03 14:09:14 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 26
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 14:09:14 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|1       |9               |s       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|5       |8               |123     |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-03 14:09:14 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 25
 {executed in 0 msec}
[2024-12-03 14:09:14 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|8213634a-99df-42d8-963e-87bc120cc8a7.jpg |
|-----------------------------------------|

[2024-12-03 14:09:14 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 25
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:09:14 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 14:09:14 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 24
 {executed in 0 msec}
[2024-12-03 14:09:14 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|dfe6f2c1-3753-4a6a-aff4-0de7fa2786b8.jpg |
|-----------------------------------------|

[2024-12-03 14:09:14 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 24
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 14:09:14 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 14:09:14 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 23
 {executed in 0 msec}
[2024-12-03 14:09:14 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f3e6375d-35d8-4a4a-a976-26ca5c6abaac.jpg |
|-----------------------------------------|

[2024-12-03 14:09:14 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 23
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:09:14 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 14:09:14 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 22
 {executed in 0 msec}
[2024-12-03 14:09:14 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e97360ca-fe79-48c3-acaa-cd71042a0a78.tif |
|-----------------------------------------|

[2024-12-03 14:09:14 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 22
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 14:09:14 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 14:09:14 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 14
 {executed in 0 msec}
[2024-12-03 14:09:14 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a3709fe6-3e0d-4f04-8cef-1cc328c4fc0c.jpg |
|ada457b9-68aa-4a78-b0c8-c5035af844e2.jpg |
|-----------------------------------------|

[2024-12-03 14:09:14 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 14
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 14:09:14 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 14:09:14 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 13
 {executed in 0 msec}
[2024-12-03 14:09:14 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6fe5de58-57ef-47e7-80c7-49c0506ca143.jpg |
|920ca8e8-5dc2-4844-aa7f-d7782e94d380.jpg |
|-----------------------------------------|

[2024-12-03 14:09:14 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 13
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:09:14 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 14:09:14 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 12
 {executed in 0 msec}
[2024-12-03 14:09:14 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|84e77be4-2b62-4f40-8f8b-0803e1080449.jpg |
|84f31709-40aa-40eb-a7e7-da0219067927.jpg |
|-----------------------------------------|

[2024-12-03 14:09:14 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 12
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 14:09:14 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 14:09:14 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 11
 {executed in 0 msec}
[2024-12-03 14:09:14 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3fc51a83-46ea-43ca-a85b-6fad4794a2bd.jpg |
|49906eb9-a412-4428-a629-baccbe152c75.jpg |
|-----------------------------------------|

[2024-12-03 14:09:14 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 11
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:09:14 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 14:09:14 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 9
 {executed in 0 msec}
[2024-12-03 14:09:14 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|34669219-c5d3-4d84-a277-fd8c2b8bca4f.jpg |
|f1ed44ba-1254-4232-9a0d-65037abe1e9c.jpg |
|-----------------------------------------|

[2024-12-03 14:09:14 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 9
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:09:14 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 14:09:14 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 7
 {executed in 0 msec}
[2024-12-03 14:09:14 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|14ecfa41-07fc-40d0-b50b-3fe95a840992.jpg |
|2694c9a6-a7b3-4800-ac73-0c853e16a152.jpg |
|-----------------------------------------|

[2024-12-03 14:09:14 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 7
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:09:14 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 14:09:14 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 6
 {executed in 1 msec}
[2024-12-03 14:09:14 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3c31d519-96b0-49bd-8657-d1eac4fb3fc1.jpg |
|-----------------------------------------|

[2024-12-03 14:09:14 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 6
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:09:14 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 14:09:16 INFO http-nio-8080-exec-1] [com.green.greengramver2.feed.comment.FeedCommentController] feedCommentGet : FeedCommentGetReq(feedId=27, page=2, size=21, sIdx=3)
[2024-12-03 14:09:16 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 27
        ORDER BY feed_comment_id DESC
        LIMIT 3, 21
 {executed in 0 msec}
[2024-12-03 14:09:16 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|--------|----------------|----------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment   |writernm |pic                                      |
|--------|----------------|----------|---------|-----------------------------------------|
|5       |3               |왜 로그에 두번이 |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |2               |귀엽긴해      |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |1               |ㄷ         |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|--------|----------------|----------|---------|-----------------------------------------|

[2024-12-03 14:09:16 INFO http-nio-8080-exec-1] [com.green.greengramver2.feed.comment.FeedCommentService] res: FeedCommentGetRes(MoreComment=false, commentList=[FeedCommentDto(writerUserId=5, feedCommentId=3, comment=왜 로그에 두번이, writerNm=66, writerPic=d6440a69-541b-4d3c-969a-a6b643fd10de.jpg), FeedCommentDto(writerUserId=5, feedCommentId=2, comment=귀엽긴해, writerNm=66, writerPic=d6440a69-541b-4d3c-969a-a6b643fd10de.jpg), FeedCommentDto(writerUserId=5, feedCommentId=1, comment=ㄷ, writerNm=66, writerPic=d6440a69-541b-4d3c-969a-a6b643fd10de.jpg)])
[2024-12-03 14:09:16 INFO http-nio-8080-exec-1] [com.green.greengramver2.feed.comment.FeedCommentController] feedCommentGet : FeedCommentGetRes(MoreComment=false, commentList=[FeedCommentDto(writerUserId=5, feedCommentId=3, comment=왜 로그에 두번이, writerNm=66, writerPic=d6440a69-541b-4d3c-969a-a6b643fd10de.jpg), FeedCommentDto(writerUserId=5, feedCommentId=2, comment=귀엽긴해, writerNm=66, writerPic=d6440a69-541b-4d3c-969a-a6b643fd10de.jpg), FeedCommentDto(writerUserId=5, feedCommentId=1, comment=ㄷ, writerNm=66, writerPic=d6440a69-541b-4d3c-969a-a6b643fd10de.jpg)])
[2024-12-03 14:09:47 INFO http-nio-8080-exec-2] [com.green.greengramver2.feed.comment.FeedCommentController] feedCommentP FeedCommentPostReq(feedId=27, userId=1, comment=1, feedCommentId=0)
[2024-12-03 14:09:47 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. insert into feed_comments
        set user_id = 1,
            feed_id = 27,
            `comment` = '1'
 {executed in 6 msec}
[2024-12-03 14:09:47 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: insert into feed_comments
        set user_id = 1,
            feed_id = 27,
            `comment` = '1'
 {executed in 0 msec}
[2024-12-03 14:09:47 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|15        |
|----------|

[2024-12-03 14:09:48 INFO http-nio-8080-exec-4] [com.green.greengramver2.feed.comment.FeedCommentController] feedCommentP FeedCommentPostReq(feedId=27, userId=1, comment=2, feedCommentId=0)
[2024-12-03 14:09:48 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. insert into feed_comments
        set user_id = 1,
            feed_id = 27,
            `comment` = '2'
 {executed in 6 msec}
[2024-12-03 14:09:48 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: insert into feed_comments
        set user_id = 1,
            feed_id = 27,
            `comment` = '2'
 {executed in 0 msec}
[2024-12-03 14:09:48 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|16        |
|----------|

[2024-12-03 14:09:49 INFO http-nio-8080-exec-3] [com.green.greengramver2.feed.comment.FeedCommentController] feedCommentP FeedCommentPostReq(feedId=27, userId=1, comment=3, feedCommentId=0)
[2024-12-03 14:09:49 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. insert into feed_comments
        set user_id = 1,
            feed_id = 27,
            `comment` = '3'
 {executed in 6 msec}
[2024-12-03 14:09:49 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: insert into feed_comments
        set user_id = 1,
            feed_id = 27,
            `comment` = '3'
 {executed in 0 msec}
[2024-12-03 14:09:49 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|17        |
|----------|

[2024-12-03 14:09:50 INFO http-nio-8080-exec-5] [com.green.greengramver2.feed.comment.FeedCommentController] feedCommentP FeedCommentPostReq(feedId=27, userId=1, comment=4, feedCommentId=0)
[2024-12-03 14:09:50 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. insert into feed_comments
        set user_id = 1,
            feed_id = 27,
            `comment` = '4'
 {executed in 6 msec}
[2024-12-03 14:09:50 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: insert into feed_comments
        set user_id = 1,
            feed_id = 27,
            `comment` = '4'
 {executed in 0 msec}
[2024-12-03 14:09:50 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|18        |
|----------|

[2024-12-03 14:09:51 INFO http-nio-8080-exec-6] [com.green.greengramver2.feed.comment.FeedCommentController] feedCommentP FeedCommentPostReq(feedId=27, userId=1, comment=5, feedCommentId=0)
[2024-12-03 14:09:51 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. insert into feed_comments
        set user_id = 1,
            feed_id = 27,
            `comment` = '5'
 {executed in 6 msec}
[2024-12-03 14:09:51 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: insert into feed_comments
        set user_id = 1,
            feed_id = 27,
            `comment` = '5'
 {executed in 0 msec}
[2024-12-03 14:09:51 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|19        |
|----------|

[2024-12-03 14:09:51 INFO http-nio-8080-exec-7] [com.green.greengramver2.feed.comment.FeedCommentController] feedCommentP FeedCommentPostReq(feedId=27, userId=1, comment=6, feedCommentId=0)
[2024-12-03 14:09:51 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. insert into feed_comments
        set user_id = 1,
            feed_id = 27,
            `comment` = '6'
 {executed in 6 msec}
[2024-12-03 14:09:51 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: insert into feed_comments
        set user_id = 1,
            feed_id = 27,
            `comment` = '6'
 {executed in 0 msec}
[2024-12-03 14:09:51 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|20        |
|----------|

[2024-12-03 14:09:52 INFO http-nio-8080-exec-8] [com.green.greengramver2.feed.comment.FeedCommentController] feedCommentP FeedCommentPostReq(feedId=27, userId=1, comment=7, feedCommentId=0)
[2024-12-03 14:09:52 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. insert into feed_comments
        set user_id = 1,
            feed_id = 27,
            `comment` = '7'
 {executed in 1 msec}
[2024-12-03 14:09:52 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: insert into feed_comments
        set user_id = 1,
            feed_id = 27,
            `comment` = '7'
 {executed in 0 msec}
[2024-12-03 14:09:52 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|21        |
|----------|

[2024-12-03 14:09:53 INFO http-nio-8080-exec-10] [com.green.greengramver2.feed.comment.FeedCommentController] feedCommentP FeedCommentPostReq(feedId=27, userId=1, comment=8, feedCommentId=0)
[2024-12-03 14:09:53 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. insert into feed_comments
        set user_id = 1,
            feed_id = 27,
            `comment` = '8'
 {executed in 5 msec}
[2024-12-03 14:09:53 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: insert into feed_comments
        set user_id = 1,
            feed_id = 27,
            `comment` = '8'
 {executed in 0 msec}
[2024-12-03 14:09:53 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|22        |
|----------|

[2024-12-03 14:09:54 INFO http-nio-8080-exec-9] [com.green.greengramver2.feed.comment.FeedCommentController] feedCommentP FeedCommentPostReq(feedId=27, userId=1, comment=9, feedCommentId=0)
[2024-12-03 14:09:54 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. insert into feed_comments
        set user_id = 1,
            feed_id = 27,
            `comment` = '9'
 {executed in 6 msec}
[2024-12-03 14:09:54 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: insert into feed_comments
        set user_id = 1,
            feed_id = 27,
            `comment` = '9'
 {executed in 0 msec}
[2024-12-03 14:09:54 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|23        |
|----------|

[2024-12-03 14:09:55 INFO http-nio-8080-exec-1] [com.green.greengramver2.feed.comment.FeedCommentController] feedCommentP FeedCommentPostReq(feedId=27, userId=1, comment=10, feedCommentId=0)
[2024-12-03 14:09:55 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. insert into feed_comments
        set user_id = 1,
            feed_id = 27,
            `comment` = '10'
 {executed in 2 msec}
[2024-12-03 14:09:55 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: insert into feed_comments
        set user_id = 1,
            feed_id = 27,
            `comment` = '10'
 {executed in 0 msec}
[2024-12-03 14:09:55 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|24        |
|----------|

[2024-12-03 14:09:57 INFO http-nio-8080-exec-2] [com.green.greengramver2.feed.comment.FeedCommentController] feedCommentP FeedCommentPostReq(feedId=27, userId=1, comment=11, feedCommentId=0)
[2024-12-03 14:09:57 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. insert into feed_comments
        set user_id = 1,
            feed_id = 27,
            `comment` = '11'
 {executed in 5 msec}
[2024-12-03 14:09:57 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: insert into feed_comments
        set user_id = 1,
            feed_id = 27,
            `comment` = '11'
 {executed in 0 msec}
[2024-12-03 14:09:57 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|25        |
|----------|

[2024-12-03 14:09:58 INFO http-nio-8080-exec-4] [com.green.greengramver2.feed.comment.FeedCommentController] feedCommentP FeedCommentPostReq(feedId=27, userId=1, comment=12, feedCommentId=0)
[2024-12-03 14:09:58 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. insert into feed_comments
        set user_id = 1,
            feed_id = 27,
            `comment` = '12'
 {executed in 1 msec}
[2024-12-03 14:09:58 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: insert into feed_comments
        set user_id = 1,
            feed_id = 27,
            `comment` = '12'
 {executed in 0 msec}
[2024-12-03 14:09:58 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|26        |
|----------|

[2024-12-03 14:09:59 INFO http-nio-8080-exec-3] [com.green.greengramver2.feed.comment.FeedCommentController] feedCommentP FeedCommentPostReq(feedId=27, userId=1, comment=13, feedCommentId=0)
[2024-12-03 14:09:59 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. insert into feed_comments
        set user_id = 1,
            feed_id = 27,
            `comment` = '13'
 {executed in 6 msec}
[2024-12-03 14:09:59 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: insert into feed_comments
        set user_id = 1,
            feed_id = 27,
            `comment` = '13'
 {executed in 0 msec}
[2024-12-03 14:09:59 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|27        |
|----------|

[2024-12-03 14:09:59 INFO http-nio-8080-exec-5] [com.green.greengramver2.feed.comment.FeedCommentController] feedCommentP FeedCommentPostReq(feedId=27, userId=1, comment=14, feedCommentId=0)
[2024-12-03 14:10:00 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. insert into feed_comments
        set user_id = 1,
            feed_id = 27,
            `comment` = '14'
 {executed in 6 msec}
[2024-12-03 14:10:00 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: insert into feed_comments
        set user_id = 1,
            feed_id = 27,
            `comment` = '14'
 {executed in 0 msec}
[2024-12-03 14:10:00 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|28        |
|----------|

[2024-12-03 14:10:00 INFO http-nio-8080-exec-6] [com.green.greengramver2.feed.comment.FeedCommentController] feedCommentP FeedCommentPostReq(feedId=27, userId=1, comment=15, feedCommentId=0)
[2024-12-03 14:10:00 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. insert into feed_comments
        set user_id = 1,
            feed_id = 27,
            `comment` = '15'
 {executed in 2 msec}
[2024-12-03 14:10:00 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: insert into feed_comments
        set user_id = 1,
            feed_id = 27,
            `comment` = '15'
 {executed in 0 msec}
[2024-12-03 14:10:00 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|29        |
|----------|

[2024-12-03 14:10:01 INFO http-nio-8080-exec-7] [com.green.greengramver2.feed.comment.FeedCommentController] feedCommentP FeedCommentPostReq(feedId=27, userId=1, comment=16, feedCommentId=0)
[2024-12-03 14:10:01 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. insert into feed_comments
        set user_id = 1,
            feed_id = 27,
            `comment` = '16'
 {executed in 5 msec}
[2024-12-03 14:10:01 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: insert into feed_comments
        set user_id = 1,
            feed_id = 27,
            `comment` = '16'
 {executed in 0 msec}
[2024-12-03 14:10:01 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|30        |
|----------|

[2024-12-03 14:10:05 INFO http-nio-8080-exec-6] [com.green.greengramver2.feed.model.FeedGetReq] FeedGetReq 1,null,1
[2024-12-03 14:10:05 INFO http-nio-8080-exec-6] [com.green.greengramver2.feed.FeedController] feedC getFeedList p: FeedGetReq(super=Paging(page=1, size=20, sIdx=0), signedUserId=1)
[2024-12-03 14:10:05 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, writer_user_id AS writerUserId,
        if(nick_name IS NULL , uid, nick_name) AS writerNm,
        pic AS writerPic, contents, location, a.created_at AS createdAt,
        if(c.feed_id IS NULL ,0 , 1) AS isLike
        FROM feed A
        JOIN user B
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c
        ON a.feed_id = c.feed_id
        AND c.user_id = 1
        ORDER BY a.feed_id DESC
        LIMIT 0,20
 {executed in 0 msec}
[2024-12-03 14:10:05 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|feed_id |writer_user_id |writernm |pic                                      |contents     |location |created_at          |islike |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|27      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |I am panguin |남극       |2024-11-29 17:07:59 |0      |
|26      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |I am panguin |남극       |2024-11-29 16:46:01 |0      |
|25      |5              |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |4123         |213      |2024-11-29 16:32:31 |0      |
|24      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |31231        |123      |2024-11-29 16:01:53 |0      |
|23      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |4754         |444      |2024-11-29 16:00:03 |0      |
|22      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |aaa          |aa       |2024-11-29 15:58:25 |0      |
|14      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:51:21 |1      |
|13      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:51:14 |1      |
|12      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:42:17 |1      |
|11      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |123          |33123    |2024-11-29 10:42:01 |0      |
|9       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |21123        |3        |2024-11-29 10:37:22 |0      |
|7       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-28 17:20:59 |1      |
|6       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |             |         |2024-11-28 17:15:01 |0      |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|

[2024-12-03 14:10:05 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 27
 {executed in 0 msec}
[2024-12-03 14:10:05 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5a0d637a-00c7-441f-a9fa-c0dc68af2602.jpg |
|-----------------------------------------|

[2024-12-03 14:10:05 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 27
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 14:10:05 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|1       |30              |16      |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |29              |15      |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |28              |14      |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |27              |13      |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-03 14:10:05 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 26
 {executed in 1 msec}
[2024-12-03 14:10:05 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3e5fe979-fe9c-4ed6-9ad7-c1dbf4f2538f.jpg |
|-----------------------------------------|

[2024-12-03 14:10:05 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 26
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 14:10:05 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|1       |9               |s       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|5       |8               |123     |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-03 14:10:05 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 25
 {executed in 0 msec}
[2024-12-03 14:10:05 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|8213634a-99df-42d8-963e-87bc120cc8a7.jpg |
|-----------------------------------------|

[2024-12-03 14:10:05 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 25
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:10:05 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 14:10:05 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 24
 {executed in 1 msec}
[2024-12-03 14:10:05 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|dfe6f2c1-3753-4a6a-aff4-0de7fa2786b8.jpg |
|-----------------------------------------|

[2024-12-03 14:10:05 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 24
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 14:10:05 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 14:10:05 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 23
 {executed in 0 msec}
[2024-12-03 14:10:05 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f3e6375d-35d8-4a4a-a976-26ca5c6abaac.jpg |
|-----------------------------------------|

[2024-12-03 14:10:05 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 23
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:10:05 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 14:10:05 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 22
 {executed in 0 msec}
[2024-12-03 14:10:05 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e97360ca-fe79-48c3-acaa-cd71042a0a78.tif |
|-----------------------------------------|

[2024-12-03 14:10:05 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 22
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:10:05 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 14:10:05 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 14
 {executed in 0 msec}
[2024-12-03 14:10:05 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a3709fe6-3e0d-4f04-8cef-1cc328c4fc0c.jpg |
|ada457b9-68aa-4a78-b0c8-c5035af844e2.jpg |
|-----------------------------------------|

[2024-12-03 14:10:05 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 14
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:10:05 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 14:10:05 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 13
 {executed in 0 msec}
[2024-12-03 14:10:05 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6fe5de58-57ef-47e7-80c7-49c0506ca143.jpg |
|920ca8e8-5dc2-4844-aa7f-d7782e94d380.jpg |
|-----------------------------------------|

[2024-12-03 14:10:05 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 13
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:10:05 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 14:10:05 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 12
 {executed in 0 msec}
[2024-12-03 14:10:05 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|84e77be4-2b62-4f40-8f8b-0803e1080449.jpg |
|84f31709-40aa-40eb-a7e7-da0219067927.jpg |
|-----------------------------------------|

[2024-12-03 14:10:05 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 12
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:10:05 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 14:10:05 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 11
 {executed in 0 msec}
[2024-12-03 14:10:05 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3fc51a83-46ea-43ca-a85b-6fad4794a2bd.jpg |
|49906eb9-a412-4428-a629-baccbe152c75.jpg |
|-----------------------------------------|

[2024-12-03 14:10:05 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 11
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:10:05 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 14:10:05 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 9
 {executed in 1 msec}
[2024-12-03 14:10:05 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|34669219-c5d3-4d84-a277-fd8c2b8bca4f.jpg |
|f1ed44ba-1254-4232-9a0d-65037abe1e9c.jpg |
|-----------------------------------------|

[2024-12-03 14:10:05 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 9
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:10:05 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 14:10:05 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 7
 {executed in 0 msec}
[2024-12-03 14:10:05 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|14ecfa41-07fc-40d0-b50b-3fe95a840992.jpg |
|2694c9a6-a7b3-4800-ac73-0c853e16a152.jpg |
|-----------------------------------------|

[2024-12-03 14:10:05 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 7
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 14:10:05 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 14:10:05 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 6
 {executed in 0 msec}
[2024-12-03 14:10:05 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3c31d519-96b0-49bd-8657-d1eac4fb3fc1.jpg |
|-----------------------------------------|

[2024-12-03 14:10:05 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 6
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:10:05 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 14:10:09 INFO http-nio-8080-exec-8] [com.green.greengramver2.feed.comment.FeedCommentController] feedCommentGet : FeedCommentGetReq(feedId=27, page=2, size=21, sIdx=3)
[2024-12-03 14:10:09 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 27
        ORDER BY feed_comment_id DESC
        LIMIT 3, 21
 {executed in 0 msec}
[2024-12-03 14:10:09 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|----------------|----------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment   |writernm |pic                                      |
|--------|----------------|----------|---------|-----------------------------------------|
|1       |27              |13        |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |26              |12        |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |25              |11        |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |24              |10        |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |23              |9         |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |22              |8         |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |21              |7         |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |20              |6         |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |19              |5         |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |18              |4         |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |17              |3         |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |16              |2         |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |15              |1         |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|5       |7               |2         |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |6               |123       |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |4               |ㅇ         |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |3               |왜 로그에 두번이 |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |2               |귀엽긴해      |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |1               |ㄷ         |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|--------|----------------|----------|---------|-----------------------------------------|

[2024-12-03 14:10:09 INFO http-nio-8080-exec-8] [com.green.greengramver2.feed.comment.FeedCommentService] res: FeedCommentGetRes(MoreComment=false, commentList=[FeedCommentDto(writerUserId=1, feedCommentId=27, comment=13, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=26, comment=12, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=25, comment=11, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=24, comment=10, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=23, comment=9, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=22, comment=8, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=21, comment=7, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=20, comment=6, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=19, comment=5, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=18, comment=4, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=17, comment=3, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=16, comment=2, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=15, comment=1, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=5, feedCommentId=7, comment=2, writerNm=66, writerPic=d6440a69-541b-4d3c-969a-a6b643fd10de.jpg), FeedCommentDto(writerUserId=5, feedCommentId=6, comment=123, writerNm=66, writerPic=d6440a69-541b-4d3c-969a-a6b643fd10de.jpg), FeedCommentDto(writerUserId=5, feedCommentId=4, comment=ㅇ, writerNm=66, writerPic=d6440a69-541b-4d3c-969a-a6b643fd10de.jpg), FeedCommentDto(writerUserId=5, feedCommentId=3, comment=왜 로그에 두번이, writerNm=66, writerPic=d6440a69-541b-4d3c-969a-a6b643fd10de.jpg), FeedCommentDto(writerUserId=5, feedCommentId=2, comment=귀엽긴해, writerNm=66, writerPic=d6440a69-541b-4d3c-969a-a6b643fd10de.jpg), FeedCommentDto(writerUserId=5, feedCommentId=1, comment=ㄷ, writerNm=66, writerPic=d6440a69-541b-4d3c-969a-a6b643fd10de.jpg)])
[2024-12-03 14:10:09 INFO http-nio-8080-exec-8] [com.green.greengramver2.feed.comment.FeedCommentController] feedCommentGet : FeedCommentGetRes(MoreComment=false, commentList=[FeedCommentDto(writerUserId=1, feedCommentId=27, comment=13, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=26, comment=12, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=25, comment=11, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=24, comment=10, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=23, comment=9, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=22, comment=8, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=21, comment=7, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=20, comment=6, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=19, comment=5, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=18, comment=4, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=17, comment=3, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=16, comment=2, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=15, comment=1, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=5, feedCommentId=7, comment=2, writerNm=66, writerPic=d6440a69-541b-4d3c-969a-a6b643fd10de.jpg), FeedCommentDto(writerUserId=5, feedCommentId=6, comment=123, writerNm=66, writerPic=d6440a69-541b-4d3c-969a-a6b643fd10de.jpg), FeedCommentDto(writerUserId=5, feedCommentId=4, comment=ㅇ, writerNm=66, writerPic=d6440a69-541b-4d3c-969a-a6b643fd10de.jpg), FeedCommentDto(writerUserId=5, feedCommentId=3, comment=왜 로그에 두번이, writerNm=66, writerPic=d6440a69-541b-4d3c-969a-a6b643fd10de.jpg), FeedCommentDto(writerUserId=5, feedCommentId=2, comment=귀엽긴해, writerNm=66, writerPic=d6440a69-541b-4d3c-969a-a6b643fd10de.jpg), FeedCommentDto(writerUserId=5, feedCommentId=1, comment=ㄷ, writerNm=66, writerPic=d6440a69-541b-4d3c-969a-a6b643fd10de.jpg)])
[2024-12-03 14:10:19 INFO http-nio-8080-exec-10] [com.green.greengramver2.feed.comment.FeedCommentController] feedCommentP FeedCommentPostReq(feedId=27, userId=1, comment=17, feedCommentId=0)
[2024-12-03 14:10:19 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. insert into feed_comments
        set user_id = 1,
            feed_id = 27,
            `comment` = '17'
 {executed in 6 msec}
[2024-12-03 14:10:19 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: insert into feed_comments
        set user_id = 1,
            feed_id = 27,
            `comment` = '17'
 {executed in 0 msec}
[2024-12-03 14:10:19 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|31        |
|----------|

[2024-12-03 14:10:21 INFO http-nio-8080-exec-1] [com.green.greengramver2.feed.comment.FeedCommentController] feedCommentP FeedCommentPostReq(feedId=27, userId=1, comment=18, feedCommentId=0)
[2024-12-03 14:10:21 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. insert into feed_comments
        set user_id = 1,
            feed_id = 27,
            `comment` = '18'
 {executed in 6 msec}
[2024-12-03 14:10:21 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: insert into feed_comments
        set user_id = 1,
            feed_id = 27,
            `comment` = '18'
 {executed in 0 msec}
[2024-12-03 14:10:21 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|32        |
|----------|

[2024-12-03 14:10:22 INFO http-nio-8080-exec-9] [com.green.greengramver2.feed.comment.FeedCommentController] feedCommentP FeedCommentPostReq(feedId=27, userId=1, comment=19, feedCommentId=0)
[2024-12-03 14:10:22 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. insert into feed_comments
        set user_id = 1,
            feed_id = 27,
            `comment` = '19'
 {executed in 6 msec}
[2024-12-03 14:10:22 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: insert into feed_comments
        set user_id = 1,
            feed_id = 27,
            `comment` = '19'
 {executed in 0 msec}
[2024-12-03 14:10:22 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|33        |
|----------|

[2024-12-03 14:10:23 INFO http-nio-8080-exec-2] [com.green.greengramver2.feed.comment.FeedCommentController] feedCommentP FeedCommentPostReq(feedId=27, userId=1, comment=20, feedCommentId=0)
[2024-12-03 14:10:23 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. insert into feed_comments
        set user_id = 1,
            feed_id = 27,
            `comment` = '20'
 {executed in 6 msec}
[2024-12-03 14:10:23 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: insert into feed_comments
        set user_id = 1,
            feed_id = 27,
            `comment` = '20'
 {executed in 0 msec}
[2024-12-03 14:10:23 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|34        |
|----------|

[2024-12-03 14:10:28 INFO http-nio-8080-exec-9] [com.green.greengramver2.feed.model.FeedGetReq] FeedGetReq 1,null,1
[2024-12-03 14:10:28 INFO http-nio-8080-exec-9] [com.green.greengramver2.feed.FeedController] feedC getFeedList p: FeedGetReq(super=Paging(page=1, size=20, sIdx=0), signedUserId=1)
[2024-12-03 14:10:28 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, writer_user_id AS writerUserId,
        if(nick_name IS NULL , uid, nick_name) AS writerNm,
        pic AS writerPic, contents, location, a.created_at AS createdAt,
        if(c.feed_id IS NULL ,0 , 1) AS isLike
        FROM feed A
        JOIN user B
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c
        ON a.feed_id = c.feed_id
        AND c.user_id = 1
        ORDER BY a.feed_id DESC
        LIMIT 0,20
 {executed in 1 msec}
[2024-12-03 14:10:28 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|feed_id |writer_user_id |writernm |pic                                      |contents     |location |created_at          |islike |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|27      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |I am panguin |남극       |2024-11-29 17:07:59 |0      |
|26      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |I am panguin |남극       |2024-11-29 16:46:01 |0      |
|25      |5              |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |4123         |213      |2024-11-29 16:32:31 |0      |
|24      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |31231        |123      |2024-11-29 16:01:53 |0      |
|23      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |4754         |444      |2024-11-29 16:00:03 |0      |
|22      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |aaa          |aa       |2024-11-29 15:58:25 |0      |
|14      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:51:21 |1      |
|13      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:51:14 |1      |
|12      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:42:17 |1      |
|11      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |123          |33123    |2024-11-29 10:42:01 |0      |
|9       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |21123        |3        |2024-11-29 10:37:22 |0      |
|7       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-28 17:20:59 |1      |
|6       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |             |         |2024-11-28 17:15:01 |0      |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|

[2024-12-03 14:10:28 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 27
 {executed in 0 msec}
[2024-12-03 14:10:28 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5a0d637a-00c7-441f-a9fa-c0dc68af2602.jpg |
|-----------------------------------------|

[2024-12-03 14:10:28 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 27
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:10:28 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|1       |34              |20      |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |33              |19      |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |32              |18      |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |31              |17      |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-03 14:10:28 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 26
 {executed in 0 msec}
[2024-12-03 14:10:28 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3e5fe979-fe9c-4ed6-9ad7-c1dbf4f2538f.jpg |
|-----------------------------------------|

[2024-12-03 14:10:28 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 26
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 14:10:28 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|1       |9               |s       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|5       |8               |123     |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-03 14:10:28 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 25
 {executed in 1 msec}
[2024-12-03 14:10:28 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|8213634a-99df-42d8-963e-87bc120cc8a7.jpg |
|-----------------------------------------|

[2024-12-03 14:10:28 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 25
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:10:28 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 14:10:28 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 24
 {executed in 0 msec}
[2024-12-03 14:10:28 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|dfe6f2c1-3753-4a6a-aff4-0de7fa2786b8.jpg |
|-----------------------------------------|

[2024-12-03 14:10:28 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 24
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 14:10:28 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 14:10:28 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 23
 {executed in 0 msec}
[2024-12-03 14:10:28 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f3e6375d-35d8-4a4a-a976-26ca5c6abaac.jpg |
|-----------------------------------------|

[2024-12-03 14:10:28 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 23
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:10:28 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 14:10:28 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 22
 {executed in 0 msec}
[2024-12-03 14:10:28 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e97360ca-fe79-48c3-acaa-cd71042a0a78.tif |
|-----------------------------------------|

[2024-12-03 14:10:28 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 22
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 14:10:28 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 14:10:28 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 14
 {executed in 0 msec}
[2024-12-03 14:10:28 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a3709fe6-3e0d-4f04-8cef-1cc328c4fc0c.jpg |
|ada457b9-68aa-4a78-b0c8-c5035af844e2.jpg |
|-----------------------------------------|

[2024-12-03 14:10:28 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 14
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:10:28 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 14:10:28 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 13
 {executed in 0 msec}
[2024-12-03 14:10:28 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6fe5de58-57ef-47e7-80c7-49c0506ca143.jpg |
|920ca8e8-5dc2-4844-aa7f-d7782e94d380.jpg |
|-----------------------------------------|

[2024-12-03 14:10:28 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 13
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:10:28 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 14:10:28 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 12
 {executed in 0 msec}
[2024-12-03 14:10:28 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|84e77be4-2b62-4f40-8f8b-0803e1080449.jpg |
|84f31709-40aa-40eb-a7e7-da0219067927.jpg |
|-----------------------------------------|

[2024-12-03 14:10:28 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 12
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:10:28 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 14:10:28 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 11
 {executed in 0 msec}
[2024-12-03 14:10:28 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3fc51a83-46ea-43ca-a85b-6fad4794a2bd.jpg |
|49906eb9-a412-4428-a629-baccbe152c75.jpg |
|-----------------------------------------|

[2024-12-03 14:10:28 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 11
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:10:28 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 14:10:28 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 9
 {executed in 0 msec}
[2024-12-03 14:10:28 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|34669219-c5d3-4d84-a277-fd8c2b8bca4f.jpg |
|f1ed44ba-1254-4232-9a0d-65037abe1e9c.jpg |
|-----------------------------------------|

[2024-12-03 14:10:28 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 9
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:10:28 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 14:10:28 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 7
 {executed in 1 msec}
[2024-12-03 14:10:28 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|14ecfa41-07fc-40d0-b50b-3fe95a840992.jpg |
|2694c9a6-a7b3-4800-ac73-0c853e16a152.jpg |
|-----------------------------------------|

[2024-12-03 14:10:28 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 7
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:10:28 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 14:10:28 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 6
 {executed in 0 msec}
[2024-12-03 14:10:28 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3c31d519-96b0-49bd-8657-d1eac4fb3fc1.jpg |
|-----------------------------------------|

[2024-12-03 14:10:28 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 6
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:10:28 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 14:10:31 INFO http-nio-8080-exec-4] [com.green.greengramver2.feed.comment.FeedCommentController] feedCommentGet : FeedCommentGetReq(feedId=27, page=2, size=21, sIdx=3)
[2024-12-03 14:10:31 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 27
        ORDER BY feed_comment_id DESC
        LIMIT 3, 21
 {executed in 1 msec}
[2024-12-03 14:10:31 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|----------------|----------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment   |writernm |pic                                      |
|--------|----------------|----------|---------|-----------------------------------------|
|1       |31              |17        |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |30              |16        |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |29              |15        |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |28              |14        |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |27              |13        |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |26              |12        |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |25              |11        |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |24              |10        |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |23              |9         |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |22              |8         |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |21              |7         |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |20              |6         |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |19              |5         |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |18              |4         |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |17              |3         |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |16              |2         |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |15              |1         |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|5       |7               |2         |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |6               |123       |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |4               |ㅇ         |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |3               |왜 로그에 두번이 |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|--------|----------------|----------|---------|-----------------------------------------|

[2024-12-03 14:10:31 INFO http-nio-8080-exec-4] [com.green.greengramver2.feed.comment.FeedCommentService] res: FeedCommentGetRes(MoreComment=true, commentList=[FeedCommentDto(writerUserId=1, feedCommentId=31, comment=17, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=30, comment=16, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=29, comment=15, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=28, comment=14, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=27, comment=13, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=26, comment=12, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=25, comment=11, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=24, comment=10, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=23, comment=9, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=22, comment=8, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=21, comment=7, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=20, comment=6, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=19, comment=5, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=18, comment=4, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=17, comment=3, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=16, comment=2, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=15, comment=1, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=5, feedCommentId=7, comment=2, writerNm=66, writerPic=d6440a69-541b-4d3c-969a-a6b643fd10de.jpg), FeedCommentDto(writerUserId=5, feedCommentId=6, comment=123, writerNm=66, writerPic=d6440a69-541b-4d3c-969a-a6b643fd10de.jpg), FeedCommentDto(writerUserId=5, feedCommentId=4, comment=ㅇ, writerNm=66, writerPic=d6440a69-541b-4d3c-969a-a6b643fd10de.jpg)])
[2024-12-03 14:10:31 INFO http-nio-8080-exec-4] [com.green.greengramver2.feed.comment.FeedCommentController] feedCommentGet : FeedCommentGetRes(MoreComment=true, commentList=[FeedCommentDto(writerUserId=1, feedCommentId=31, comment=17, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=30, comment=16, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=29, comment=15, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=28, comment=14, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=27, comment=13, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=26, comment=12, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=25, comment=11, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=24, comment=10, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=23, comment=9, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=22, comment=8, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=21, comment=7, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=20, comment=6, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=19, comment=5, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=18, comment=4, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=17, comment=3, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=16, comment=2, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=15, comment=1, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=5, feedCommentId=7, comment=2, writerNm=66, writerPic=d6440a69-541b-4d3c-969a-a6b643fd10de.jpg), FeedCommentDto(writerUserId=5, feedCommentId=6, comment=123, writerNm=66, writerPic=d6440a69-541b-4d3c-969a-a6b643fd10de.jpg), FeedCommentDto(writerUserId=5, feedCommentId=4, comment=ㅇ, writerNm=66, writerPic=d6440a69-541b-4d3c-969a-a6b643fd10de.jpg)])
[2024-12-03 14:10:57 INFO http-nio-8080-exec-3] [com.green.greengramver2.feed.comment.FeedCommentController] feedCommentGet : FeedCommentGetReq(feedId=27, page=3, size=21, sIdx=23)
[2024-12-03 14:10:57 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 27
        ORDER BY feed_comment_id DESC
        LIMIT 23, 21
 {executed in 0 msec}
[2024-12-03 14:10:57 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|--------|----------------|----------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment   |writernm |pic                                      |
|--------|----------------|----------|---------|-----------------------------------------|
|5       |3               |왜 로그에 두번이 |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |2               |귀엽긴해      |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |1               |ㄷ         |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|--------|----------------|----------|---------|-----------------------------------------|

[2024-12-03 14:10:57 INFO http-nio-8080-exec-3] [com.green.greengramver2.feed.comment.FeedCommentService] res: FeedCommentGetRes(MoreComment=false, commentList=[FeedCommentDto(writerUserId=5, feedCommentId=3, comment=왜 로그에 두번이, writerNm=66, writerPic=d6440a69-541b-4d3c-969a-a6b643fd10de.jpg), FeedCommentDto(writerUserId=5, feedCommentId=2, comment=귀엽긴해, writerNm=66, writerPic=d6440a69-541b-4d3c-969a-a6b643fd10de.jpg), FeedCommentDto(writerUserId=5, feedCommentId=1, comment=ㄷ, writerNm=66, writerPic=d6440a69-541b-4d3c-969a-a6b643fd10de.jpg)])
[2024-12-03 14:10:57 INFO http-nio-8080-exec-3] [com.green.greengramver2.feed.comment.FeedCommentController] feedCommentGet : FeedCommentGetRes(MoreComment=false, commentList=[FeedCommentDto(writerUserId=5, feedCommentId=3, comment=왜 로그에 두번이, writerNm=66, writerPic=d6440a69-541b-4d3c-969a-a6b643fd10de.jpg), FeedCommentDto(writerUserId=5, feedCommentId=2, comment=귀엽긴해, writerNm=66, writerPic=d6440a69-541b-4d3c-969a-a6b643fd10de.jpg), FeedCommentDto(writerUserId=5, feedCommentId=1, comment=ㄷ, writerNm=66, writerPic=d6440a69-541b-4d3c-969a-a6b643fd10de.jpg)])
[2024-12-03 14:11:09 INFO http-nio-8080-exec-7] [com.green.greengramver2.feed.comment.FeedCommentController] feedCommentGet : FeedCommentGetReq(feedId=27, page=1, size=4, sIdx=0)
[2024-12-03 14:11:09 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 27
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 14:11:09 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|1       |34              |20      |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |33              |19      |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |32              |18      |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |31              |17      |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-03 14:11:09 INFO http-nio-8080-exec-7] [com.green.greengramver2.feed.comment.FeedCommentService] res: FeedCommentGetRes(MoreComment=true, commentList=[FeedCommentDto(writerUserId=1, feedCommentId=34, comment=20, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=33, comment=19, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=32, comment=18, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg)])
[2024-12-03 14:11:09 INFO http-nio-8080-exec-7] [com.green.greengramver2.feed.comment.FeedCommentController] feedCommentGet : FeedCommentGetRes(MoreComment=true, commentList=[FeedCommentDto(writerUserId=1, feedCommentId=34, comment=20, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=33, comment=19, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=32, comment=18, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg)])
[2024-12-03 14:15:01 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-03 14:15:01 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-03 14:15:03 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 12232 (D:\Students\jang jin seong\GreenGramVer2\build\classes\java\main started by Administrator in D:\Students\jang jin seong\GreenGramVer2)
[2024-12-03 14:15:03 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-03 14:15:03 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-03 14:15:03 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-03 14:15:04 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-03 14:15:04 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-03 14:15:04 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-03 14:15:04 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-03 14:15:04 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-03 14:15:04 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 755 ms
[2024-12-03 14:15:04 INFO restartedMain] [com.green.greengramver2.common.MyFileUtils] MFU 생성자: D:\Students\jang jin seong\download\greengram_ver2
[2024-12-03 14:15:04 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-03 14:15:04 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-03 14:15:04 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-03 14:15:04 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-03 14:15:04 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Started GreenGramVer2Application in 1.603 seconds (process running for 1.947)
[2024-12-03 14:15:05 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-03 14:15:05 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-03 14:15:05 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 0 ms
[2024-12-03 14:15:05 INFO http-nio-8080-exec-1] [com.green.greengramver2.feed.comment.FeedCommentController] feedCommentGet : FeedCommentGetReq(feedId=27, page=1, size=4, sIdx=0)
[2024-12-03 14:15:05 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-03 14:15:06 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@3d1b43c0
[2024-12-03 14:15:06 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-03 14:15:06 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 27
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 14:15:06 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|1       |34              |20      |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |33              |19      |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |32              |18      |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |31              |17      |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-03 14:15:06 INFO http-nio-8080-exec-1] [com.green.greengramver2.feed.comment.FeedCommentController] feedCommentGet : FeedCommentGetRes(MoreComment=false, commentList=[FeedCommentDto(writerUserId=1, feedCommentId=34, comment=20, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=33, comment=19, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=32, comment=18, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=31, comment=17, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg)])
[2024-12-03 14:15:08 INFO http-nio-8080-exec-4] [com.green.greengramver2.feed.comment.FeedCommentController] feedCommentGet : FeedCommentGetReq(feedId=27, page=1, size=4, sIdx=0)
[2024-12-03 14:15:08 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 27
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:15:08 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|1       |34              |20      |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |33              |19      |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |32              |18      |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |31              |17      |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-03 14:15:08 INFO http-nio-8080-exec-4] [com.green.greengramver2.feed.comment.FeedCommentController] feedCommentGet : FeedCommentGetRes(MoreComment=false, commentList=[FeedCommentDto(writerUserId=1, feedCommentId=34, comment=20, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=33, comment=19, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=32, comment=18, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=31, comment=17, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg)])
[2024-12-03 14:15:12 INFO http-nio-8080-exec-7] [com.green.greengramver2.feed.comment.FeedCommentController] feedCommentGet : FeedCommentGetReq(feedId=27, page=2, size=21, sIdx=3)
[2024-12-03 14:15:12 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 27
        ORDER BY feed_comment_id DESC
        LIMIT 3, 21
 {executed in 0 msec}
[2024-12-03 14:15:12 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|----------------|----------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment   |writernm |pic                                      |
|--------|----------------|----------|---------|-----------------------------------------|
|1       |31              |17        |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |30              |16        |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |29              |15        |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |28              |14        |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |27              |13        |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |26              |12        |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |25              |11        |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |24              |10        |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |23              |9         |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |22              |8         |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |21              |7         |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |20              |6         |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |19              |5         |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |18              |4         |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |17              |3         |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |16              |2         |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |15              |1         |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|5       |7               |2         |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |6               |123       |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |4               |ㅇ         |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |3               |왜 로그에 두번이 |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|--------|----------------|----------|---------|-----------------------------------------|

[2024-12-03 14:15:12 INFO http-nio-8080-exec-7] [com.green.greengramver2.feed.comment.FeedCommentService] res: FeedCommentGetRes(MoreComment=true, commentList=[FeedCommentDto(writerUserId=1, feedCommentId=31, comment=17, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=30, comment=16, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=29, comment=15, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=28, comment=14, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=27, comment=13, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=26, comment=12, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=25, comment=11, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=24, comment=10, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=23, comment=9, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=22, comment=8, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=21, comment=7, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=20, comment=6, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=19, comment=5, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=18, comment=4, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=17, comment=3, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=16, comment=2, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=15, comment=1, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=5, feedCommentId=7, comment=2, writerNm=66, writerPic=d6440a69-541b-4d3c-969a-a6b643fd10de.jpg), FeedCommentDto(writerUserId=5, feedCommentId=6, comment=123, writerNm=66, writerPic=d6440a69-541b-4d3c-969a-a6b643fd10de.jpg), FeedCommentDto(writerUserId=5, feedCommentId=4, comment=ㅇ, writerNm=66, writerPic=d6440a69-541b-4d3c-969a-a6b643fd10de.jpg)])
[2024-12-03 14:15:12 INFO http-nio-8080-exec-7] [com.green.greengramver2.feed.comment.FeedCommentController] feedCommentGet : FeedCommentGetRes(MoreComment=true, commentList=[FeedCommentDto(writerUserId=1, feedCommentId=31, comment=17, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=30, comment=16, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=29, comment=15, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=28, comment=14, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=27, comment=13, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=26, comment=12, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=25, comment=11, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=24, comment=10, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=23, comment=9, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=22, comment=8, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=21, comment=7, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=20, comment=6, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=19, comment=5, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=18, comment=4, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=17, comment=3, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=16, comment=2, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=15, comment=1, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=5, feedCommentId=7, comment=2, writerNm=66, writerPic=d6440a69-541b-4d3c-969a-a6b643fd10de.jpg), FeedCommentDto(writerUserId=5, feedCommentId=6, comment=123, writerNm=66, writerPic=d6440a69-541b-4d3c-969a-a6b643fd10de.jpg), FeedCommentDto(writerUserId=5, feedCommentId=4, comment=ㅇ, writerNm=66, writerPic=d6440a69-541b-4d3c-969a-a6b643fd10de.jpg)])
[2024-12-03 14:15:21 INFO http-nio-8080-exec-10] [com.green.greengramver2.feed.comment.FeedCommentController] feedCommentGet : FeedCommentGetReq(feedId=27, page=3, size=21, sIdx=23)
[2024-12-03 14:15:21 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 27
        ORDER BY feed_comment_id DESC
        LIMIT 23, 21
 {executed in 1 msec}
[2024-12-03 14:15:21 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|----------------|----------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment   |writernm |pic                                      |
|--------|----------------|----------|---------|-----------------------------------------|
|5       |3               |왜 로그에 두번이 |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |2               |귀엽긴해      |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |1               |ㄷ         |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|--------|----------------|----------|---------|-----------------------------------------|

[2024-12-03 14:15:21 INFO http-nio-8080-exec-10] [com.green.greengramver2.feed.comment.FeedCommentService] res: FeedCommentGetRes(MoreComment=false, commentList=[FeedCommentDto(writerUserId=5, feedCommentId=3, comment=왜 로그에 두번이, writerNm=66, writerPic=d6440a69-541b-4d3c-969a-a6b643fd10de.jpg), FeedCommentDto(writerUserId=5, feedCommentId=2, comment=귀엽긴해, writerNm=66, writerPic=d6440a69-541b-4d3c-969a-a6b643fd10de.jpg), FeedCommentDto(writerUserId=5, feedCommentId=1, comment=ㄷ, writerNm=66, writerPic=d6440a69-541b-4d3c-969a-a6b643fd10de.jpg)])
[2024-12-03 14:15:21 INFO http-nio-8080-exec-10] [com.green.greengramver2.feed.comment.FeedCommentController] feedCommentGet : FeedCommentGetRes(MoreComment=false, commentList=[FeedCommentDto(writerUserId=5, feedCommentId=3, comment=왜 로그에 두번이, writerNm=66, writerPic=d6440a69-541b-4d3c-969a-a6b643fd10de.jpg), FeedCommentDto(writerUserId=5, feedCommentId=2, comment=귀엽긴해, writerNm=66, writerPic=d6440a69-541b-4d3c-969a-a6b643fd10de.jpg), FeedCommentDto(writerUserId=5, feedCommentId=1, comment=ㄷ, writerNm=66, writerPic=d6440a69-541b-4d3c-969a-a6b643fd10de.jpg)])
[2024-12-03 14:15:24 INFO http-nio-8080-exec-5] [com.green.greengramver2.feed.comment.FeedCommentController] feedCommentGet : FeedCommentGetReq(feedId=27, page=1, size=4, sIdx=0)
[2024-12-03 14:15:24 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 27
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:15:24 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|1       |34              |20      |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |33              |19      |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |32              |18      |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |31              |17      |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-03 14:15:24 INFO http-nio-8080-exec-5] [com.green.greengramver2.feed.comment.FeedCommentController] feedCommentGet : FeedCommentGetRes(MoreComment=false, commentList=[FeedCommentDto(writerUserId=1, feedCommentId=34, comment=20, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=33, comment=19, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=32, comment=18, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=31, comment=17, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg)])
[2024-12-03 14:15:38 INFO http-nio-8080-exec-10] [com.green.greengramver2.feed.model.FeedGetReq] FeedGetReq 1,null,1
[2024-12-03 14:15:38 INFO http-nio-8080-exec-10] [com.green.greengramver2.feed.FeedController] feedC getFeedList p: FeedGetReq(super=Paging(page=1, size=20, sIdx=0), signedUserId=1)
[2024-12-03 14:15:38 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, writer_user_id AS writerUserId,
        if(nick_name IS NULL , uid, nick_name) AS writerNm,
        pic AS writerPic, contents, location, a.created_at AS createdAt,
        if(c.feed_id IS NULL ,0 , 1) AS isLike
        FROM feed A
        JOIN user B
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c
        ON a.feed_id = c.feed_id
        AND c.user_id = 1
        ORDER BY a.feed_id DESC
        LIMIT 0,20
 {executed in 4 msec}
[2024-12-03 14:15:38 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|feed_id |writer_user_id |writernm |pic                                      |contents     |location |created_at          |islike |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|27      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |I am panguin |남극       |2024-11-29 17:07:59 |0      |
|26      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |I am panguin |남극       |2024-11-29 16:46:01 |0      |
|25      |5              |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |4123         |213      |2024-11-29 16:32:31 |0      |
|24      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |31231        |123      |2024-11-29 16:01:53 |0      |
|23      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |4754         |444      |2024-11-29 16:00:03 |0      |
|22      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |aaa          |aa       |2024-11-29 15:58:25 |0      |
|14      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:51:21 |1      |
|13      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:51:14 |1      |
|12      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:42:17 |1      |
|11      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |123          |33123    |2024-11-29 10:42:01 |0      |
|9       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |21123        |3        |2024-11-29 10:37:22 |0      |
|7       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-28 17:20:59 |1      |
|6       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |             |         |2024-11-28 17:15:01 |0      |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|

[2024-12-03 14:15:38 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 27
 {executed in 1 msec}
[2024-12-03 14:15:38 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5a0d637a-00c7-441f-a9fa-c0dc68af2602.jpg |
|-----------------------------------------|

[2024-12-03 14:15:38 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 27
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:15:38 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|1       |34              |20      |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |33              |19      |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |32              |18      |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |31              |17      |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-03 14:15:38 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 26
 {executed in 1 msec}
[2024-12-03 14:15:38 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3e5fe979-fe9c-4ed6-9ad7-c1dbf4f2538f.jpg |
|-----------------------------------------|

[2024-12-03 14:15:38 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 26
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 14:15:38 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|1       |9               |s       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|5       |8               |123     |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-03 14:15:38 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 25
 {executed in 1 msec}
[2024-12-03 14:15:38 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|8213634a-99df-42d8-963e-87bc120cc8a7.jpg |
|-----------------------------------------|

[2024-12-03 14:15:38 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 25
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 14:15:38 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 14:15:38 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 24
 {executed in 0 msec}
[2024-12-03 14:15:38 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|dfe6f2c1-3753-4a6a-aff4-0de7fa2786b8.jpg |
|-----------------------------------------|

[2024-12-03 14:15:38 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 24
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:15:38 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 14:15:38 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 23
 {executed in 0 msec}
[2024-12-03 14:15:38 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f3e6375d-35d8-4a4a-a976-26ca5c6abaac.jpg |
|-----------------------------------------|

[2024-12-03 14:15:38 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 23
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:15:38 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 14:15:38 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 22
 {executed in 0 msec}
[2024-12-03 14:15:38 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e97360ca-fe79-48c3-acaa-cd71042a0a78.tif |
|-----------------------------------------|

[2024-12-03 14:15:38 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 22
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 14:15:38 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 14:15:38 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 14
 {executed in 0 msec}
[2024-12-03 14:15:38 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a3709fe6-3e0d-4f04-8cef-1cc328c4fc0c.jpg |
|ada457b9-68aa-4a78-b0c8-c5035af844e2.jpg |
|-----------------------------------------|

[2024-12-03 14:15:38 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 14
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:15:38 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 14:15:38 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 13
 {executed in 0 msec}
[2024-12-03 14:15:38 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6fe5de58-57ef-47e7-80c7-49c0506ca143.jpg |
|920ca8e8-5dc2-4844-aa7f-d7782e94d380.jpg |
|-----------------------------------------|

[2024-12-03 14:15:38 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 13
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:15:38 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 14:15:38 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 12
 {executed in 0 msec}
[2024-12-03 14:15:38 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|84e77be4-2b62-4f40-8f8b-0803e1080449.jpg |
|84f31709-40aa-40eb-a7e7-da0219067927.jpg |
|-----------------------------------------|

[2024-12-03 14:15:38 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 12
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:15:38 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 14:15:38 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 11
 {executed in 0 msec}
[2024-12-03 14:15:38 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3fc51a83-46ea-43ca-a85b-6fad4794a2bd.jpg |
|49906eb9-a412-4428-a629-baccbe152c75.jpg |
|-----------------------------------------|

[2024-12-03 14:15:38 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 11
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:15:38 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 14:15:38 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 9
 {executed in 1 msec}
[2024-12-03 14:15:38 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|34669219-c5d3-4d84-a277-fd8c2b8bca4f.jpg |
|f1ed44ba-1254-4232-9a0d-65037abe1e9c.jpg |
|-----------------------------------------|

[2024-12-03 14:15:38 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 9
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 14:15:38 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 14:15:38 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 7
 {executed in 1 msec}
[2024-12-03 14:15:38 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|14ecfa41-07fc-40d0-b50b-3fe95a840992.jpg |
|2694c9a6-a7b3-4800-ac73-0c853e16a152.jpg |
|-----------------------------------------|

[2024-12-03 14:15:38 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 7
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 14:15:38 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 14:15:38 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 6
 {executed in 0 msec}
[2024-12-03 14:15:38 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3c31d519-96b0-49bd-8657-d1eac4fb3fc1.jpg |
|-----------------------------------------|

[2024-12-03 14:15:38 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 6
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:15:38 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 14:15:40 INFO http-nio-8080-exec-6] [com.green.greengramver2.feed.comment.FeedCommentController] feedCommentGet : FeedCommentGetReq(feedId=27, page=2, size=21, sIdx=3)
[2024-12-03 14:15:40 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 27
        ORDER BY feed_comment_id DESC
        LIMIT 3, 21
 {executed in 0 msec}
[2024-12-03 14:15:40 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|----------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment   |writernm |pic                                      |
|--------|----------------|----------|---------|-----------------------------------------|
|1       |31              |17        |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |30              |16        |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |29              |15        |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |28              |14        |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |27              |13        |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |26              |12        |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |25              |11        |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |24              |10        |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |23              |9         |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |22              |8         |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |21              |7         |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |20              |6         |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |19              |5         |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |18              |4         |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |17              |3         |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |16              |2         |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |15              |1         |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|5       |7               |2         |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |6               |123       |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |4               |ㅇ         |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |3               |왜 로그에 두번이 |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|--------|----------------|----------|---------|-----------------------------------------|

[2024-12-03 14:15:40 INFO http-nio-8080-exec-6] [com.green.greengramver2.feed.comment.FeedCommentService] res: FeedCommentGetRes(MoreComment=true, commentList=[FeedCommentDto(writerUserId=1, feedCommentId=31, comment=17, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=30, comment=16, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=29, comment=15, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=28, comment=14, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=27, comment=13, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=26, comment=12, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=25, comment=11, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=24, comment=10, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=23, comment=9, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=22, comment=8, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=21, comment=7, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=20, comment=6, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=19, comment=5, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=18, comment=4, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=17, comment=3, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=16, comment=2, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=15, comment=1, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=5, feedCommentId=7, comment=2, writerNm=66, writerPic=d6440a69-541b-4d3c-969a-a6b643fd10de.jpg), FeedCommentDto(writerUserId=5, feedCommentId=6, comment=123, writerNm=66, writerPic=d6440a69-541b-4d3c-969a-a6b643fd10de.jpg), FeedCommentDto(writerUserId=5, feedCommentId=4, comment=ㅇ, writerNm=66, writerPic=d6440a69-541b-4d3c-969a-a6b643fd10de.jpg)])
[2024-12-03 14:15:40 INFO http-nio-8080-exec-6] [com.green.greengramver2.feed.comment.FeedCommentController] feedCommentGet : FeedCommentGetRes(MoreComment=true, commentList=[FeedCommentDto(writerUserId=1, feedCommentId=31, comment=17, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=30, comment=16, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=29, comment=15, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=28, comment=14, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=27, comment=13, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=26, comment=12, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=25, comment=11, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=24, comment=10, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=23, comment=9, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=22, comment=8, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=21, comment=7, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=20, comment=6, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=19, comment=5, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=18, comment=4, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=17, comment=3, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=16, comment=2, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=15, comment=1, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=5, feedCommentId=7, comment=2, writerNm=66, writerPic=d6440a69-541b-4d3c-969a-a6b643fd10de.jpg), FeedCommentDto(writerUserId=5, feedCommentId=6, comment=123, writerNm=66, writerPic=d6440a69-541b-4d3c-969a-a6b643fd10de.jpg), FeedCommentDto(writerUserId=5, feedCommentId=4, comment=ㅇ, writerNm=66, writerPic=d6440a69-541b-4d3c-969a-a6b643fd10de.jpg)])
[2024-12-03 14:15:42 INFO http-nio-8080-exec-9] [com.green.greengramver2.feed.comment.FeedCommentController] feedCommentGet : FeedCommentGetReq(feedId=27, page=3, size=21, sIdx=23)
[2024-12-03 14:15:42 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 27
        ORDER BY feed_comment_id DESC
        LIMIT 23, 21
 {executed in 1 msec}
[2024-12-03 14:15:42 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|----------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment   |writernm |pic                                      |
|--------|----------------|----------|---------|-----------------------------------------|
|5       |3               |왜 로그에 두번이 |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |2               |귀엽긴해      |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |1               |ㄷ         |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|--------|----------------|----------|---------|-----------------------------------------|

[2024-12-03 14:15:42 INFO http-nio-8080-exec-9] [com.green.greengramver2.feed.comment.FeedCommentService] res: FeedCommentGetRes(MoreComment=false, commentList=[FeedCommentDto(writerUserId=5, feedCommentId=3, comment=왜 로그에 두번이, writerNm=66, writerPic=d6440a69-541b-4d3c-969a-a6b643fd10de.jpg), FeedCommentDto(writerUserId=5, feedCommentId=2, comment=귀엽긴해, writerNm=66, writerPic=d6440a69-541b-4d3c-969a-a6b643fd10de.jpg), FeedCommentDto(writerUserId=5, feedCommentId=1, comment=ㄷ, writerNm=66, writerPic=d6440a69-541b-4d3c-969a-a6b643fd10de.jpg)])
[2024-12-03 14:15:42 INFO http-nio-8080-exec-9] [com.green.greengramver2.feed.comment.FeedCommentController] feedCommentGet : FeedCommentGetRes(MoreComment=false, commentList=[FeedCommentDto(writerUserId=5, feedCommentId=3, comment=왜 로그에 두번이, writerNm=66, writerPic=d6440a69-541b-4d3c-969a-a6b643fd10de.jpg), FeedCommentDto(writerUserId=5, feedCommentId=2, comment=귀엽긴해, writerNm=66, writerPic=d6440a69-541b-4d3c-969a-a6b643fd10de.jpg), FeedCommentDto(writerUserId=5, feedCommentId=1, comment=ㄷ, writerNm=66, writerPic=d6440a69-541b-4d3c-969a-a6b643fd10de.jpg)])
[2024-12-03 14:19:54 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 2 class path changes (0 additions, 0 deletions, 2 modifications)
[2024-12-03 14:19:54 INFO Thread-5] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-03 14:19:54 INFO Thread-5] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-03 14:19:54 INFO Thread-5] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-03 14:19:54 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 12232 (D:\Students\jang jin seong\GreenGramVer2\build\classes\java\main started by Administrator in D:\Students\jang jin seong\GreenGramVer2)
[2024-12-03 14:19:54 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-03 14:19:55 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-03 14:19:55 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-03 14:19:55 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-03 14:19:55 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-03 14:19:55 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-03 14:19:55 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 313 ms
[2024-12-03 14:19:55 INFO restartedMain] [com.green.greengramver2.common.MyFileUtils] MFU 생성자: D:\Students\jang jin seong\download\greengram_ver2
[2024-12-03 14:19:55 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-03 14:19:55 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-03 14:19:55 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-03 14:19:55 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-03 14:19:55 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Started GreenGramVer2Application in 0.539 seconds (process running for 292.617)
[2024-12-03 14:19:55 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-03 14:20:25 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 2 class path changes (0 additions, 0 deletions, 2 modifications)
[2024-12-03 14:20:25 INFO Thread-7] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-03 14:20:25 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 12232 (D:\Students\jang jin seong\GreenGramVer2\build\classes\java\main started by Administrator in D:\Students\jang jin seong\GreenGramVer2)
[2024-12-03 14:20:25 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-03 14:20:26 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-03 14:20:26 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-03 14:20:26 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-03 14:20:26 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-03 14:20:26 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-03 14:20:26 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 172 ms
[2024-12-03 14:20:26 INFO restartedMain] [com.green.greengramver2.common.MyFileUtils] MFU 생성자: D:\Students\jang jin seong\download\greengram_ver2
[2024-12-03 14:20:26 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-03 14:20:26 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-03 14:20:26 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-03 14:20:26 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-03 14:20:26 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Started GreenGramVer2Application in 0.308 seconds (process running for 323.51)
[2024-12-03 14:20:26 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-03 14:22:18 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 2 class path changes (0 additions, 2 deletions, 0 modifications)
[2024-12-03 14:22:18 INFO Thread-11] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-03 14:22:18 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 12232 (D:\Students\jang jin seong\GreenGramVer2\build\classes\java\main started by Administrator in D:\Students\jang jin seong\GreenGramVer2)
[2024-12-03 14:22:18 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-03 14:22:18 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-03 14:22:18 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-03 14:22:18 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-03 14:22:18 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-03 14:22:18 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-03 14:22:18 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 167 ms
[2024-12-03 14:22:18 INFO restartedMain] [com.green.greengramver2.common.MyFileUtils] MFU 생성자: D:\Students\jang jin seong\download\greengram_ver2
[2024-12-03 14:22:18 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-03 14:22:18 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-03 14:22:18 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-03 14:22:18 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-03 14:22:18 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Started GreenGramVer2Application in 0.302 seconds (process running for 435.89)
[2024-12-03 14:22:18 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-03 14:22:20 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 2 class path changes (2 additions, 0 deletions, 0 modifications)
[2024-12-03 14:22:20 INFO Thread-15] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-03 14:22:20 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 12232 (D:\Students\jang jin seong\GreenGramVer2\build\classes\java\main started by Administrator in D:\Students\jang jin seong\GreenGramVer2)
[2024-12-03 14:22:20 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-03 14:22:20 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-03 14:22:20 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-03 14:22:20 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-03 14:22:20 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-03 14:22:20 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-03 14:22:20 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 167 ms
[2024-12-03 14:22:20 INFO restartedMain] [com.green.greengramver2.common.MyFileUtils] MFU 생성자: D:\Students\jang jin seong\download\greengram_ver2
[2024-12-03 14:22:20 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-03 14:22:20 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-03 14:22:20 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-03 14:22:20 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-03 14:22:20 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Started GreenGramVer2Application in 0.302 seconds (process running for 437.71)
[2024-12-03 14:22:20 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-03 14:24:08 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-03 14:24:08 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-03 14:24:08 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 0 ms
[2024-12-03 14:24:08 INFO http-nio-8080-exec-2] [com.green.greengramver2.feed.model.FeedGetReq] FeedGetReq 1,null,1
[2024-12-03 14:24:08 INFO http-nio-8080-exec-2] [com.green.greengramver2.feed.FeedController] feedC getFeedList p: FeedGetReq(super=Paging(page=1, size=20, sIdx=0), signedUserId=1)
[2024-12-03 14:24:08 INFO http-nio-8080-exec-2] [com.zaxxer.hikari.HikariDataSource] HikariPool-2 - Starting...
[2024-12-03 14:24:08 INFO http-nio-8080-exec-2] [com.zaxxer.hikari.pool.HikariPool] HikariPool-2 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@47ccbc2d
[2024-12-03 14:24:08 INFO http-nio-8080-exec-2] [com.zaxxer.hikari.HikariDataSource] HikariPool-2 - Start completed.
[2024-12-03 14:24:08 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT a.feed_id AS feedId, writer_user_id AS writerUserId,
        if(nick_name IS NULL , uid, nick_name) AS writerNm,
        pic AS writerPic, contents, location, a.created_at AS createdAt,
        if(c.feed_id IS NULL ,0 , 1) AS isLike
        FROM feed A
        JOIN user B
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c
        ON a.feed_id = c.feed_id
        AND c.user_id = 1
        ORDER BY a.feed_id DESC
        LIMIT 0,20
 {executed in 1 msec}
[2024-12-03 14:24:08 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|feed_id |writer_user_id |writernm |pic                                      |contents     |location |created_at          |islike |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|27      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |I am panguin |남극       |2024-11-29 17:07:59 |0      |
|26      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |I am panguin |남극       |2024-11-29 16:46:01 |0      |
|25      |5              |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |4123         |213      |2024-11-29 16:32:31 |0      |
|24      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |31231        |123      |2024-11-29 16:01:53 |0      |
|23      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |4754         |444      |2024-11-29 16:00:03 |0      |
|22      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |aaa          |aa       |2024-11-29 15:58:25 |0      |
|14      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:51:21 |1      |
|13      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:51:14 |1      |
|12      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:42:17 |1      |
|11      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |123          |33123    |2024-11-29 10:42:01 |0      |
|9       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |21123        |3        |2024-11-29 10:37:22 |0      |
|7       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-28 17:20:59 |1      |
|6       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |             |         |2024-11-28 17:15:01 |0      |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|

[2024-12-03 14:24:08 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
        from feed_pics
        where feed_id = 27
 {executed in 0 msec}
[2024-12-03 14:24:08 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5a0d637a-00c7-441f-a9fa-c0dc68af2602.jpg |
|-----------------------------------------|

[2024-12-03 14:24:08 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 27
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:24:08 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|1       |34              |20      |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |33              |19      |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |32              |18      |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |31              |17      |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-03 14:24:08 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
        from feed_pics
        where feed_id = 26
 {executed in 0 msec}
[2024-12-03 14:24:08 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3e5fe979-fe9c-4ed6-9ad7-c1dbf4f2538f.jpg |
|-----------------------------------------|

[2024-12-03 14:24:08 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 26
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:24:08 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|1       |9               |s       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|5       |8               |123     |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-03 14:24:08 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
        from feed_pics
        where feed_id = 25
 {executed in 0 msec}
[2024-12-03 14:24:08 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|8213634a-99df-42d8-963e-87bc120cc8a7.jpg |
|-----------------------------------------|

[2024-12-03 14:24:08 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 25
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:24:08 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 14:24:08 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
        from feed_pics
        where feed_id = 24
 {executed in 0 msec}
[2024-12-03 14:24:08 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|dfe6f2c1-3753-4a6a-aff4-0de7fa2786b8.jpg |
|-----------------------------------------|

[2024-12-03 14:24:08 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 24
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:24:08 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 14:24:08 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
        from feed_pics
        where feed_id = 23
 {executed in 0 msec}
[2024-12-03 14:24:08 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f3e6375d-35d8-4a4a-a976-26ca5c6abaac.jpg |
|-----------------------------------------|

[2024-12-03 14:24:08 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 23
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 14:24:08 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 14:24:08 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
        from feed_pics
        where feed_id = 22
 {executed in 1 msec}
[2024-12-03 14:24:08 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e97360ca-fe79-48c3-acaa-cd71042a0a78.tif |
|-----------------------------------------|

[2024-12-03 14:24:08 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 22
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 14:24:08 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 14:24:08 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
        from feed_pics
        where feed_id = 14
 {executed in 0 msec}
[2024-12-03 14:24:08 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a3709fe6-3e0d-4f04-8cef-1cc328c4fc0c.jpg |
|ada457b9-68aa-4a78-b0c8-c5035af844e2.jpg |
|-----------------------------------------|

[2024-12-03 14:24:08 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 14
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:24:08 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 14:24:08 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
        from feed_pics
        where feed_id = 13
 {executed in 0 msec}
[2024-12-03 14:24:08 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6fe5de58-57ef-47e7-80c7-49c0506ca143.jpg |
|920ca8e8-5dc2-4844-aa7f-d7782e94d380.jpg |
|-----------------------------------------|

[2024-12-03 14:24:08 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 13
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:24:08 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 14:24:08 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
        from feed_pics
        where feed_id = 12
 {executed in 0 msec}
[2024-12-03 14:24:08 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|84e77be4-2b62-4f40-8f8b-0803e1080449.jpg |
|84f31709-40aa-40eb-a7e7-da0219067927.jpg |
|-----------------------------------------|

[2024-12-03 14:24:08 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 12
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:24:08 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 14:24:08 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
        from feed_pics
        where feed_id = 11
 {executed in 0 msec}
[2024-12-03 14:24:08 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3fc51a83-46ea-43ca-a85b-6fad4794a2bd.jpg |
|49906eb9-a412-4428-a629-baccbe152c75.jpg |
|-----------------------------------------|

[2024-12-03 14:24:08 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 11
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:24:08 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 14:24:08 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
        from feed_pics
        where feed_id = 9
 {executed in 0 msec}
[2024-12-03 14:24:08 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|34669219-c5d3-4d84-a277-fd8c2b8bca4f.jpg |
|f1ed44ba-1254-4232-9a0d-65037abe1e9c.jpg |
|-----------------------------------------|

[2024-12-03 14:24:08 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 9
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:24:08 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 14:24:08 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
        from feed_pics
        where feed_id = 7
 {executed in 0 msec}
[2024-12-03 14:24:08 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|14ecfa41-07fc-40d0-b50b-3fe95a840992.jpg |
|2694c9a6-a7b3-4800-ac73-0c853e16a152.jpg |
|-----------------------------------------|

[2024-12-03 14:24:08 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 7
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:24:08 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 14:24:08 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
        from feed_pics
        where feed_id = 6
 {executed in 0 msec}
[2024-12-03 14:24:08 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3c31d519-96b0-49bd-8657-d1eac4fb3fc1.jpg |
|-----------------------------------------|

[2024-12-03 14:24:08 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 6
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:24:08 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 14:24:14 INFO http-nio-8080-exec-1] [com.green.greengramver2.feed.comment.FeedCommentController] delFeedComment FeedCommentDelReq(feedCommentId=33, signedUserId=1)
[2024-12-03 14:24:14 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. delete
        from feed_comments
        where user_id = 1 and feed_comment_id = 33
 {executed in 6 msec}
[2024-12-03 14:24:14 INFO http-nio-8080-exec-1] [com.green.greengramver2.feed.comment.FeedCommentController] res 1
[2024-12-03 14:24:17 INFO http-nio-8080-exec-4] [com.green.greengramver2.feed.comment.FeedCommentController] feedCommentGet : FeedCommentGetReq(feedId=27, page=2, size=21, sIdx=3)
[2024-12-03 14:24:17 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 27
        ORDER BY feed_comment_id DESC
        LIMIT 3, 21
 {executed in 1 msec}
[2024-12-03 14:24:17 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|----------------|----------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment   |writernm |pic                                      |
|--------|----------------|----------|---------|-----------------------------------------|
|1       |30              |16        |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |29              |15        |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |28              |14        |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |27              |13        |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |26              |12        |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |25              |11        |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |24              |10        |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |23              |9         |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |22              |8         |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |21              |7         |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |20              |6         |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |19              |5         |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |18              |4         |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |17              |3         |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |16              |2         |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |15              |1         |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|5       |7               |2         |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |6               |123       |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |4               |ㅇ         |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |3               |왜 로그에 두번이 |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |2               |귀엽긴해      |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|--------|----------------|----------|---------|-----------------------------------------|

[2024-12-03 14:24:17 INFO http-nio-8080-exec-4] [com.green.greengramver2.feed.comment.FeedCommentService] res: FeedCommentGetRes(MoreComment=true, commentList=[FeedCommentDto(writerUserId=1, feedCommentId=30, comment=16, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=29, comment=15, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=28, comment=14, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=27, comment=13, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=26, comment=12, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=25, comment=11, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=24, comment=10, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=23, comment=9, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=22, comment=8, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=21, comment=7, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=20, comment=6, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=19, comment=5, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=18, comment=4, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=17, comment=3, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=16, comment=2, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=15, comment=1, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=5, feedCommentId=7, comment=2, writerNm=66, writerPic=d6440a69-541b-4d3c-969a-a6b643fd10de.jpg), FeedCommentDto(writerUserId=5, feedCommentId=6, comment=123, writerNm=66, writerPic=d6440a69-541b-4d3c-969a-a6b643fd10de.jpg), FeedCommentDto(writerUserId=5, feedCommentId=4, comment=ㅇ, writerNm=66, writerPic=d6440a69-541b-4d3c-969a-a6b643fd10de.jpg), FeedCommentDto(writerUserId=5, feedCommentId=3, comment=왜 로그에 두번이, writerNm=66, writerPic=d6440a69-541b-4d3c-969a-a6b643fd10de.jpg)])
[2024-12-03 14:24:17 INFO http-nio-8080-exec-4] [com.green.greengramver2.feed.comment.FeedCommentController] feedCommentGet : FeedCommentGetRes(MoreComment=true, commentList=[FeedCommentDto(writerUserId=1, feedCommentId=30, comment=16, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=29, comment=15, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=28, comment=14, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=27, comment=13, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=26, comment=12, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=25, comment=11, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=24, comment=10, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=23, comment=9, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=22, comment=8, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=21, comment=7, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=20, comment=6, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=19, comment=5, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=18, comment=4, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=17, comment=3, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=16, comment=2, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=15, comment=1, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=5, feedCommentId=7, comment=2, writerNm=66, writerPic=d6440a69-541b-4d3c-969a-a6b643fd10de.jpg), FeedCommentDto(writerUserId=5, feedCommentId=6, comment=123, writerNm=66, writerPic=d6440a69-541b-4d3c-969a-a6b643fd10de.jpg), FeedCommentDto(writerUserId=5, feedCommentId=4, comment=ㅇ, writerNm=66, writerPic=d6440a69-541b-4d3c-969a-a6b643fd10de.jpg), FeedCommentDto(writerUserId=5, feedCommentId=3, comment=왜 로그에 두번이, writerNm=66, writerPic=d6440a69-541b-4d3c-969a-a6b643fd10de.jpg)])
[2024-12-03 14:27:22 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-2 - Shutdown initiated...
[2024-12-03 14:27:22 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-2 - Shutdown completed.
[2024-12-03 14:27:24 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 2696 (D:\Students\jang jin seong\GreenGramVer2\build\classes\java\main started by Administrator in D:\Students\jang jin seong\GreenGramVer2)
[2024-12-03 14:27:24 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-03 14:27:24 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-03 14:27:24 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-03 14:27:25 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-03 14:27:25 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-03 14:27:25 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-03 14:27:25 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-03 14:27:25 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-03 14:27:25 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 762 ms
[2024-12-03 14:27:25 INFO restartedMain] [com.green.greengramver2.common.MyFileUtils] MFU 생성자: D:\Students\jang jin seong\download\greengram_ver2
[2024-12-03 14:27:25 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-03 14:27:25 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-03 14:27:25 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-03 14:27:25 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-03 14:27:25 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Started GreenGramVer2Application in 1.616 seconds (process running for 1.966)
[2024-12-03 14:28:08 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-03 14:28:08 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-03 14:28:08 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-03 14:28:09 INFO http-nio-8080-exec-9] [com.green.greengramver2.feed.model.FeedGetReq] FeedGetReq 1,null,1
[2024-12-03 14:28:09 INFO http-nio-8080-exec-9] [com.green.greengramver2.feed.FeedController] feedC getFeedList p: FeedGetReq(super=Paging(page=1, size=20, sIdx=0), signedUserId=1)
[2024-12-03 14:28:09 INFO http-nio-8080-exec-9] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-03 14:28:09 INFO http-nio-8080-exec-9] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@1c6484da
[2024-12-03 14:28:09 INFO http-nio-8080-exec-9] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-03 14:28:09 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, writer_user_id AS writerUserId,
        if(nick_name IS NULL , uid, nick_name) AS writerNm,
        pic AS writerPic, contents, location, a.created_at AS createdAt,
        if(c.feed_id IS NULL ,0 , 1) AS isLike
        FROM feed A
        JOIN user B
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c
        ON a.feed_id = c.feed_id
        AND c.user_id = 1
        ORDER BY a.feed_id DESC
        LIMIT 0,20
 {executed in 1 msec}
[2024-12-03 14:28:09 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|feed_id |writer_user_id |writernm |pic                                      |contents     |location |created_at          |islike |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|27      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |I am panguin |남극       |2024-11-29 17:07:59 |0      |
|26      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |I am panguin |남극       |2024-11-29 16:46:01 |0      |
|25      |5              |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |4123         |213      |2024-11-29 16:32:31 |0      |
|24      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |31231        |123      |2024-11-29 16:01:53 |0      |
|23      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |4754         |444      |2024-11-29 16:00:03 |0      |
|22      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |aaa          |aa       |2024-11-29 15:58:25 |0      |
|14      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:51:21 |1      |
|13      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:51:14 |1      |
|12      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:42:17 |1      |
|11      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |123          |33123    |2024-11-29 10:42:01 |0      |
|9       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |21123        |3        |2024-11-29 10:37:22 |0      |
|7       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-28 17:20:59 |1      |
|6       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |             |         |2024-11-28 17:15:01 |0      |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|

[2024-12-03 14:28:09 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 27
 {executed in 0 msec}
[2024-12-03 14:28:09 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5a0d637a-00c7-441f-a9fa-c0dc68af2602.jpg |
|-----------------------------------------|

[2024-12-03 14:28:09 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 27
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:28:09 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|1       |34              |20      |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |32              |18      |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |31              |17      |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |30              |16      |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-03 14:28:09 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 26
 {executed in 1 msec}
[2024-12-03 14:28:09 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3e5fe979-fe9c-4ed6-9ad7-c1dbf4f2538f.jpg |
|-----------------------------------------|

[2024-12-03 14:28:09 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 26
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:28:09 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|1       |9               |s       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|5       |8               |123     |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-03 14:28:09 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 25
 {executed in 1 msec}
[2024-12-03 14:28:09 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|8213634a-99df-42d8-963e-87bc120cc8a7.jpg |
|-----------------------------------------|

[2024-12-03 14:28:09 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 25
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:28:09 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 14:28:09 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 24
 {executed in 0 msec}
[2024-12-03 14:28:09 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|dfe6f2c1-3753-4a6a-aff4-0de7fa2786b8.jpg |
|-----------------------------------------|

[2024-12-03 14:28:09 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 24
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:28:09 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 14:28:09 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 23
 {executed in 0 msec}
[2024-12-03 14:28:09 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f3e6375d-35d8-4a4a-a976-26ca5c6abaac.jpg |
|-----------------------------------------|

[2024-12-03 14:28:09 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 23
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:28:09 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 14:28:09 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 22
 {executed in 0 msec}
[2024-12-03 14:28:09 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e97360ca-fe79-48c3-acaa-cd71042a0a78.tif |
|-----------------------------------------|

[2024-12-03 14:28:09 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 22
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:28:09 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 14:28:09 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 14
 {executed in 0 msec}
[2024-12-03 14:28:09 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a3709fe6-3e0d-4f04-8cef-1cc328c4fc0c.jpg |
|ada457b9-68aa-4a78-b0c8-c5035af844e2.jpg |
|-----------------------------------------|

[2024-12-03 14:28:09 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 14
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:28:09 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 14:28:09 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 13
 {executed in 0 msec}
[2024-12-03 14:28:09 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6fe5de58-57ef-47e7-80c7-49c0506ca143.jpg |
|920ca8e8-5dc2-4844-aa7f-d7782e94d380.jpg |
|-----------------------------------------|

[2024-12-03 14:28:09 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 13
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:28:09 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 14:28:09 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 12
 {executed in 0 msec}
[2024-12-03 14:28:09 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|84e77be4-2b62-4f40-8f8b-0803e1080449.jpg |
|84f31709-40aa-40eb-a7e7-da0219067927.jpg |
|-----------------------------------------|

[2024-12-03 14:28:09 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 12
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:28:09 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 14:28:09 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 11
 {executed in 1 msec}
[2024-12-03 14:28:09 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3fc51a83-46ea-43ca-a85b-6fad4794a2bd.jpg |
|49906eb9-a412-4428-a629-baccbe152c75.jpg |
|-----------------------------------------|

[2024-12-03 14:28:09 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 11
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:28:09 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 14:28:09 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 9
 {executed in 1 msec}
[2024-12-03 14:28:09 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|34669219-c5d3-4d84-a277-fd8c2b8bca4f.jpg |
|f1ed44ba-1254-4232-9a0d-65037abe1e9c.jpg |
|-----------------------------------------|

[2024-12-03 14:28:09 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 9
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:28:09 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 14:28:09 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 7
 {executed in 0 msec}
[2024-12-03 14:28:09 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|14ecfa41-07fc-40d0-b50b-3fe95a840992.jpg |
|2694c9a6-a7b3-4800-ac73-0c853e16a152.jpg |
|-----------------------------------------|

[2024-12-03 14:28:09 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 7
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:28:09 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 14:28:09 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 6
 {executed in 0 msec}
[2024-12-03 14:28:09 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3c31d519-96b0-49bd-8657-d1eac4fb3fc1.jpg |
|-----------------------------------------|

[2024-12-03 14:28:09 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 6
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 14:28:09 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 14:28:17 INFO http-nio-8080-exec-1] [com.green.greengramver2.feed.comment.FeedCommentController] delFeedComment FeedCommentDelReq(feedCommentId=32, signedUserId=1)
[2024-12-03 14:28:17 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. delete
        from feed_comments
        where user_id = 1 and feed_comment_id = 32
 {executed in 5 msec}
[2024-12-03 14:28:17 INFO http-nio-8080-exec-1] [com.green.greengramver2.feed.comment.FeedCommentController] res 1
[2024-12-03 14:28:18 INFO http-nio-8080-exec-4] [com.green.greengramver2.feed.comment.FeedCommentController] feedCommentGet : FeedCommentGetReq(feedId=27, page=2, size=21, sIdx=3)
[2024-12-03 14:28:18 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 27
        ORDER BY feed_comment_id DESC
        LIMIT 3, 21
 {executed in 0 msec}
[2024-12-03 14:28:18 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|----------------|----------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment   |writernm |pic                                      |
|--------|----------------|----------|---------|-----------------------------------------|
|1       |29              |15        |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |28              |14        |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |27              |13        |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |26              |12        |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |25              |11        |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |24              |10        |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |23              |9         |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |22              |8         |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |21              |7         |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |20              |6         |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |19              |5         |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |18              |4         |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |17              |3         |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |16              |2         |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |15              |1         |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|5       |7               |2         |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |6               |123       |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |4               |ㅇ         |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |3               |왜 로그에 두번이 |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |2               |귀엽긴해      |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |1               |ㄷ         |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|--------|----------------|----------|---------|-----------------------------------------|

[2024-12-03 14:28:18 INFO http-nio-8080-exec-4] [com.green.greengramver2.feed.comment.FeedCommentService] res: FeedCommentGetRes(MoreComment=true, commentList=[FeedCommentDto(writerUserId=1, feedCommentId=29, comment=15, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=28, comment=14, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=27, comment=13, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=26, comment=12, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=25, comment=11, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=24, comment=10, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=23, comment=9, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=22, comment=8, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=21, comment=7, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=20, comment=6, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=19, comment=5, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=18, comment=4, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=17, comment=3, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=16, comment=2, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=15, comment=1, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=5, feedCommentId=7, comment=2, writerNm=66, writerPic=d6440a69-541b-4d3c-969a-a6b643fd10de.jpg), FeedCommentDto(writerUserId=5, feedCommentId=6, comment=123, writerNm=66, writerPic=d6440a69-541b-4d3c-969a-a6b643fd10de.jpg), FeedCommentDto(writerUserId=5, feedCommentId=4, comment=ㅇ, writerNm=66, writerPic=d6440a69-541b-4d3c-969a-a6b643fd10de.jpg), FeedCommentDto(writerUserId=5, feedCommentId=3, comment=왜 로그에 두번이, writerNm=66, writerPic=d6440a69-541b-4d3c-969a-a6b643fd10de.jpg), FeedCommentDto(writerUserId=5, feedCommentId=2, comment=귀엽긴해, writerNm=66, writerPic=d6440a69-541b-4d3c-969a-a6b643fd10de.jpg)])
[2024-12-03 14:28:18 INFO http-nio-8080-exec-4] [com.green.greengramver2.feed.comment.FeedCommentController] feedCommentGet : FeedCommentGetRes(MoreComment=true, commentList=[FeedCommentDto(writerUserId=1, feedCommentId=29, comment=15, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=28, comment=14, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=27, comment=13, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=26, comment=12, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=25, comment=11, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=24, comment=10, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=23, comment=9, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=22, comment=8, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=21, comment=7, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=20, comment=6, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=19, comment=5, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=18, comment=4, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=17, comment=3, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=16, comment=2, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=15, comment=1, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=5, feedCommentId=7, comment=2, writerNm=66, writerPic=d6440a69-541b-4d3c-969a-a6b643fd10de.jpg), FeedCommentDto(writerUserId=5, feedCommentId=6, comment=123, writerNm=66, writerPic=d6440a69-541b-4d3c-969a-a6b643fd10de.jpg), FeedCommentDto(writerUserId=5, feedCommentId=4, comment=ㅇ, writerNm=66, writerPic=d6440a69-541b-4d3c-969a-a6b643fd10de.jpg), FeedCommentDto(writerUserId=5, feedCommentId=3, comment=왜 로그에 두번이, writerNm=66, writerPic=d6440a69-541b-4d3c-969a-a6b643fd10de.jpg), FeedCommentDto(writerUserId=5, feedCommentId=2, comment=귀엽긴해, writerNm=66, writerPic=d6440a69-541b-4d3c-969a-a6b643fd10de.jpg)])
[2024-12-03 14:29:31 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-03 14:29:31 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-03 14:29:33 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 4356 (D:\Students\jang jin seong\GreenGramVer2\build\classes\java\main started by Administrator in D:\Students\jang jin seong\GreenGramVer2)
[2024-12-03 14:29:33 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-03 14:29:33 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-03 14:29:33 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-03 14:29:34 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-03 14:29:34 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-03 14:29:34 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-03 14:29:34 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-03 14:29:34 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-03 14:29:34 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 769 ms
[2024-12-03 14:29:34 INFO restartedMain] [com.green.greengramver2.common.MyFileUtils] MFU 생성자: D:\Students\jang jin seong\download\greengram_ver2
[2024-12-03 14:29:34 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-03 14:29:34 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-03 14:29:34 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-03 14:29:34 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-03 14:29:34 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Started GreenGramVer2Application in 1.664 seconds (process running for 2.039)
[2024-12-03 14:29:42 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-03 14:29:42 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-03 14:29:42 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-03 14:29:42 INFO http-nio-8080-exec-2] [com.green.greengramver2.feed.model.FeedGetReq] FeedGetReq 1,null,1
[2024-12-03 14:29:42 INFO http-nio-8080-exec-2] [com.green.greengramver2.feed.FeedController] feedC getFeedList p: FeedGetReq(super=Paging(page=1, size=20, sIdx=0), signedUserId=1)
[2024-12-03 14:29:42 INFO http-nio-8080-exec-2] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-03 14:29:42 INFO http-nio-8080-exec-2] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@186449d2
[2024-12-03 14:29:42 INFO http-nio-8080-exec-2] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-03 14:29:42 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, writer_user_id AS writerUserId,
        if(nick_name IS NULL , uid, nick_name) AS writerNm,
        pic AS writerPic, contents, location, a.created_at AS createdAt,
        if(c.feed_id IS NULL ,0 , 1) AS isLike
        FROM feed A
        JOIN user B
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c
        ON a.feed_id = c.feed_id
        AND c.user_id = 1
        ORDER BY a.feed_id DESC
        LIMIT 0,20
 {executed in 1 msec}
[2024-12-03 14:29:42 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|feed_id |writer_user_id |writernm |pic                                      |contents     |location |created_at          |islike |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|27      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |I am panguin |남극       |2024-11-29 17:07:59 |0      |
|26      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |I am panguin |남극       |2024-11-29 16:46:01 |0      |
|25      |5              |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |4123         |213      |2024-11-29 16:32:31 |0      |
|24      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |31231        |123      |2024-11-29 16:01:53 |0      |
|23      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |4754         |444      |2024-11-29 16:00:03 |0      |
|22      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |aaa          |aa       |2024-11-29 15:58:25 |0      |
|14      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:51:21 |1      |
|13      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:51:14 |1      |
|12      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:42:17 |1      |
|11      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |123          |33123    |2024-11-29 10:42:01 |0      |
|9       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |21123        |3        |2024-11-29 10:37:22 |0      |
|7       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-28 17:20:59 |1      |
|6       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |             |         |2024-11-28 17:15:01 |0      |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|

[2024-12-03 14:29:42 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 27
 {executed in 0 msec}
[2024-12-03 14:29:42 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5a0d637a-00c7-441f-a9fa-c0dc68af2602.jpg |
|-----------------------------------------|

[2024-12-03 14:29:42 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 27
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:29:42 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|1       |34              |20      |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |31              |17      |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |30              |16      |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |29              |15      |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-03 14:29:42 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 26
 {executed in 1 msec}
[2024-12-03 14:29:42 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3e5fe979-fe9c-4ed6-9ad7-c1dbf4f2538f.jpg |
|-----------------------------------------|

[2024-12-03 14:29:42 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 26
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:29:42 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|1       |9               |s       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|5       |8               |123     |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-03 14:29:42 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 25
 {executed in 0 msec}
[2024-12-03 14:29:42 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|8213634a-99df-42d8-963e-87bc120cc8a7.jpg |
|-----------------------------------------|

[2024-12-03 14:29:42 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 25
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:29:42 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 14:29:42 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 24
 {executed in 0 msec}
[2024-12-03 14:29:42 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|dfe6f2c1-3753-4a6a-aff4-0de7fa2786b8.jpg |
|-----------------------------------------|

[2024-12-03 14:29:42 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 24
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:29:42 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 14:29:42 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 23
 {executed in 0 msec}
[2024-12-03 14:29:42 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f3e6375d-35d8-4a4a-a976-26ca5c6abaac.jpg |
|-----------------------------------------|

[2024-12-03 14:29:42 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 23
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:29:42 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 14:29:42 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 22
 {executed in 0 msec}
[2024-12-03 14:29:42 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e97360ca-fe79-48c3-acaa-cd71042a0a78.tif |
|-----------------------------------------|

[2024-12-03 14:29:42 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 22
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 14:29:42 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 14:29:42 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 14
 {executed in 0 msec}
[2024-12-03 14:29:42 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a3709fe6-3e0d-4f04-8cef-1cc328c4fc0c.jpg |
|ada457b9-68aa-4a78-b0c8-c5035af844e2.jpg |
|-----------------------------------------|

[2024-12-03 14:29:42 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 14
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:29:42 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 14:29:42 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 13
 {executed in 0 msec}
[2024-12-03 14:29:42 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6fe5de58-57ef-47e7-80c7-49c0506ca143.jpg |
|920ca8e8-5dc2-4844-aa7f-d7782e94d380.jpg |
|-----------------------------------------|

[2024-12-03 14:29:42 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 13
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:29:42 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 14:29:42 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 12
 {executed in 0 msec}
[2024-12-03 14:29:42 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|84e77be4-2b62-4f40-8f8b-0803e1080449.jpg |
|84f31709-40aa-40eb-a7e7-da0219067927.jpg |
|-----------------------------------------|

[2024-12-03 14:29:42 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 12
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:29:42 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 14:29:42 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 11
 {executed in 0 msec}
[2024-12-03 14:29:42 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3fc51a83-46ea-43ca-a85b-6fad4794a2bd.jpg |
|49906eb9-a412-4428-a629-baccbe152c75.jpg |
|-----------------------------------------|

[2024-12-03 14:29:42 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 11
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:29:42 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 14:29:42 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 9
 {executed in 0 msec}
[2024-12-03 14:29:42 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|34669219-c5d3-4d84-a277-fd8c2b8bca4f.jpg |
|f1ed44ba-1254-4232-9a0d-65037abe1e9c.jpg |
|-----------------------------------------|

[2024-12-03 14:29:42 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 9
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:29:42 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 14:29:42 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 7
 {executed in 0 msec}
[2024-12-03 14:29:42 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|14ecfa41-07fc-40d0-b50b-3fe95a840992.jpg |
|2694c9a6-a7b3-4800-ac73-0c853e16a152.jpg |
|-----------------------------------------|

[2024-12-03 14:29:42 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 7
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:29:42 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 14:29:42 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 6
 {executed in 0 msec}
[2024-12-03 14:29:42 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3c31d519-96b0-49bd-8657-d1eac4fb3fc1.jpg |
|-----------------------------------------|

[2024-12-03 14:29:42 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 6
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:29:42 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 14:29:53 INFO http-nio-8080-exec-1] [com.green.greengramver2.feed.comment.FeedCommentController] delFeedComment FeedCommentDelReq(feedCommentId=31, signedUserId=1)
[2024-12-03 14:29:53 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. delete
        from feed_comments
        where user_id = 1 and feed_comment_id = 31
 {executed in 1 msec}
[2024-12-03 14:29:53 INFO http-nio-8080-exec-1] [com.green.greengramver2.feed.comment.FeedCommentController] res 1
[2024-12-03 14:29:56 INFO http-nio-8080-exec-9] [com.green.greengramver2.feed.comment.FeedCommentController] feedCommentGet : FeedCommentGetReq(feedId=27, page=2, size=21, sIdx=3)
[2024-12-03 14:29:56 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 27
        ORDER BY feed_comment_id DESC
        LIMIT 3, 21
 {executed in 0 msec}
[2024-12-03 14:29:56 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|----------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment   |writernm |pic                                      |
|--------|----------------|----------|---------|-----------------------------------------|
|1       |28              |14        |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |27              |13        |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |26              |12        |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |25              |11        |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |24              |10        |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |23              |9         |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |22              |8         |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |21              |7         |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |20              |6         |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |19              |5         |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |18              |4         |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |17              |3         |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |16              |2         |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |15              |1         |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|5       |7               |2         |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |6               |123       |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |4               |ㅇ         |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |3               |왜 로그에 두번이 |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |2               |귀엽긴해      |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |1               |ㄷ         |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|--------|----------------|----------|---------|-----------------------------------------|

[2024-12-03 14:29:56 INFO http-nio-8080-exec-9] [com.green.greengramver2.feed.comment.FeedCommentService] res: FeedCommentGetRes(MoreComment=false, commentList=[FeedCommentDto(writerUserId=1, feedCommentId=28, comment=14, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=27, comment=13, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=26, comment=12, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=25, comment=11, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=24, comment=10, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=23, comment=9, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=22, comment=8, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=21, comment=7, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=20, comment=6, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=19, comment=5, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=18, comment=4, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=17, comment=3, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=16, comment=2, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=15, comment=1, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=5, feedCommentId=7, comment=2, writerNm=66, writerPic=d6440a69-541b-4d3c-969a-a6b643fd10de.jpg), FeedCommentDto(writerUserId=5, feedCommentId=6, comment=123, writerNm=66, writerPic=d6440a69-541b-4d3c-969a-a6b643fd10de.jpg), FeedCommentDto(writerUserId=5, feedCommentId=4, comment=ㅇ, writerNm=66, writerPic=d6440a69-541b-4d3c-969a-a6b643fd10de.jpg), FeedCommentDto(writerUserId=5, feedCommentId=3, comment=왜 로그에 두번이, writerNm=66, writerPic=d6440a69-541b-4d3c-969a-a6b643fd10de.jpg), FeedCommentDto(writerUserId=5, feedCommentId=2, comment=귀엽긴해, writerNm=66, writerPic=d6440a69-541b-4d3c-969a-a6b643fd10de.jpg), FeedCommentDto(writerUserId=5, feedCommentId=1, comment=ㄷ, writerNm=66, writerPic=d6440a69-541b-4d3c-969a-a6b643fd10de.jpg)])
[2024-12-03 14:29:56 INFO http-nio-8080-exec-9] [com.green.greengramver2.feed.comment.FeedCommentController] feedCommentGet : FeedCommentGetRes(MoreComment=false, commentList=[FeedCommentDto(writerUserId=1, feedCommentId=28, comment=14, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=27, comment=13, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=26, comment=12, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=25, comment=11, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=24, comment=10, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=23, comment=9, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=22, comment=8, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=21, comment=7, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=20, comment=6, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=19, comment=5, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=18, comment=4, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=17, comment=3, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=16, comment=2, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=15, comment=1, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=5, feedCommentId=7, comment=2, writerNm=66, writerPic=d6440a69-541b-4d3c-969a-a6b643fd10de.jpg), FeedCommentDto(writerUserId=5, feedCommentId=6, comment=123, writerNm=66, writerPic=d6440a69-541b-4d3c-969a-a6b643fd10de.jpg), FeedCommentDto(writerUserId=5, feedCommentId=4, comment=ㅇ, writerNm=66, writerPic=d6440a69-541b-4d3c-969a-a6b643fd10de.jpg), FeedCommentDto(writerUserId=5, feedCommentId=3, comment=왜 로그에 두번이, writerNm=66, writerPic=d6440a69-541b-4d3c-969a-a6b643fd10de.jpg), FeedCommentDto(writerUserId=5, feedCommentId=2, comment=귀엽긴해, writerNm=66, writerPic=d6440a69-541b-4d3c-969a-a6b643fd10de.jpg), FeedCommentDto(writerUserId=5, feedCommentId=1, comment=ㄷ, writerNm=66, writerPic=d6440a69-541b-4d3c-969a-a6b643fd10de.jpg)])
[2024-12-03 14:32:53 INFO http-nio-8080-exec-3] [com.green.greengramver2.feed.comment.FeedCommentController] feedCommentP FeedCommentPostReq(feedId=27, userId=1, comment=1, feedCommentId=0)
[2024-12-03 14:32:53 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. insert into feed_comments
        set user_id = 1,
            feed_id = 27,
            `comment` = '1'
 {executed in 2 msec}
[2024-12-03 14:32:53 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: insert into feed_comments
        set user_id = 1,
            feed_id = 27,
            `comment` = '1'
 {executed in 0 msec}
[2024-12-03 14:32:53 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|35        |
|----------|

[2024-12-03 14:32:54 INFO http-nio-8080-exec-8] [com.green.greengramver2.feed.comment.FeedCommentController] feedCommentP FeedCommentPostReq(feedId=27, userId=1, comment=2, feedCommentId=0)
[2024-12-03 14:32:54 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. insert into feed_comments
        set user_id = 1,
            feed_id = 27,
            `comment` = '2'
 {executed in 6 msec}
[2024-12-03 14:32:54 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: insert into feed_comments
        set user_id = 1,
            feed_id = 27,
            `comment` = '2'
 {executed in 0 msec}
[2024-12-03 14:32:54 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|36        |
|----------|

[2024-12-03 14:32:55 INFO http-nio-8080-exec-10] [com.green.greengramver2.feed.comment.FeedCommentController] feedCommentP FeedCommentPostReq(feedId=27, userId=1, comment=3, feedCommentId=0)
[2024-12-03 14:32:55 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. insert into feed_comments
        set user_id = 1,
            feed_id = 27,
            `comment` = '3'
 {executed in 6 msec}
[2024-12-03 14:32:55 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: insert into feed_comments
        set user_id = 1,
            feed_id = 27,
            `comment` = '3'
 {executed in 0 msec}
[2024-12-03 14:32:55 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|37        |
|----------|

[2024-12-03 14:32:56 INFO http-nio-8080-exec-2] [com.green.greengramver2.feed.comment.FeedCommentController] feedCommentP FeedCommentPostReq(feedId=27, userId=1, comment=4, feedCommentId=0)
[2024-12-03 14:32:56 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. insert into feed_comments
        set user_id = 1,
            feed_id = 27,
            `comment` = '4'
 {executed in 6 msec}
[2024-12-03 14:32:56 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: insert into feed_comments
        set user_id = 1,
            feed_id = 27,
            `comment` = '4'
 {executed in 0 msec}
[2024-12-03 14:32:56 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|38        |
|----------|

[2024-12-03 14:32:57 INFO http-nio-8080-exec-1] [com.green.greengramver2.feed.comment.FeedCommentController] feedCommentP FeedCommentPostReq(feedId=27, userId=1, comment=5, feedCommentId=0)
[2024-12-03 14:32:57 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. insert into feed_comments
        set user_id = 1,
            feed_id = 27,
            `comment` = '5'
 {executed in 6 msec}
[2024-12-03 14:32:57 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: insert into feed_comments
        set user_id = 1,
            feed_id = 27,
            `comment` = '5'
 {executed in 0 msec}
[2024-12-03 14:32:57 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|39        |
|----------|

[2024-12-03 14:32:59 INFO http-nio-8080-exec-2] [com.green.greengramver2.feed.model.FeedGetReq] FeedGetReq 1,null,1
[2024-12-03 14:32:59 INFO http-nio-8080-exec-2] [com.green.greengramver2.feed.FeedController] feedC getFeedList p: FeedGetReq(super=Paging(page=1, size=20, sIdx=0), signedUserId=1)
[2024-12-03 14:32:59 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, writer_user_id AS writerUserId,
        if(nick_name IS NULL , uid, nick_name) AS writerNm,
        pic AS writerPic, contents, location, a.created_at AS createdAt,
        if(c.feed_id IS NULL ,0 , 1) AS isLike
        FROM feed A
        JOIN user B
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c
        ON a.feed_id = c.feed_id
        AND c.user_id = 1
        ORDER BY a.feed_id DESC
        LIMIT 0,20
 {executed in 0 msec}
[2024-12-03 14:32:59 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|feed_id |writer_user_id |writernm |pic                                      |contents     |location |created_at          |islike |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|27      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |I am panguin |남극       |2024-11-29 17:07:59 |0      |
|26      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |I am panguin |남극       |2024-11-29 16:46:01 |0      |
|25      |5              |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |4123         |213      |2024-11-29 16:32:31 |0      |
|24      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |31231        |123      |2024-11-29 16:01:53 |0      |
|23      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |4754         |444      |2024-11-29 16:00:03 |0      |
|22      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |aaa          |aa       |2024-11-29 15:58:25 |0      |
|14      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:51:21 |1      |
|13      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:51:14 |1      |
|12      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:42:17 |1      |
|11      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |123          |33123    |2024-11-29 10:42:01 |0      |
|9       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |21123        |3        |2024-11-29 10:37:22 |0      |
|7       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-28 17:20:59 |1      |
|6       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |             |         |2024-11-28 17:15:01 |0      |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|

[2024-12-03 14:32:59 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 27
 {executed in 0 msec}
[2024-12-03 14:32:59 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5a0d637a-00c7-441f-a9fa-c0dc68af2602.jpg |
|-----------------------------------------|

[2024-12-03 14:32:59 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 27
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 14:32:59 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|1       |39              |5       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |38              |4       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |37              |3       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |36              |2       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-03 14:32:59 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 26
 {executed in 0 msec}
[2024-12-03 14:32:59 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3e5fe979-fe9c-4ed6-9ad7-c1dbf4f2538f.jpg |
|-----------------------------------------|

[2024-12-03 14:32:59 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 26
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:32:59 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|1       |9               |s       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|5       |8               |123     |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-03 14:32:59 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 25
 {executed in 0 msec}
[2024-12-03 14:32:59 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|8213634a-99df-42d8-963e-87bc120cc8a7.jpg |
|-----------------------------------------|

[2024-12-03 14:32:59 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 25
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:32:59 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 14:32:59 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 24
 {executed in 0 msec}
[2024-12-03 14:32:59 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|dfe6f2c1-3753-4a6a-aff4-0de7fa2786b8.jpg |
|-----------------------------------------|

[2024-12-03 14:32:59 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 24
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:32:59 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 14:32:59 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 23
 {executed in 0 msec}
[2024-12-03 14:32:59 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f3e6375d-35d8-4a4a-a976-26ca5c6abaac.jpg |
|-----------------------------------------|

[2024-12-03 14:32:59 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 23
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:32:59 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 14:32:59 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 22
 {executed in 1 msec}
[2024-12-03 14:32:59 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e97360ca-fe79-48c3-acaa-cd71042a0a78.tif |
|-----------------------------------------|

[2024-12-03 14:32:59 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 22
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:32:59 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 14:32:59 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 14
 {executed in 0 msec}
[2024-12-03 14:32:59 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a3709fe6-3e0d-4f04-8cef-1cc328c4fc0c.jpg |
|ada457b9-68aa-4a78-b0c8-c5035af844e2.jpg |
|-----------------------------------------|

[2024-12-03 14:32:59 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 14
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:32:59 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 14:32:59 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 13
 {executed in 1 msec}
[2024-12-03 14:32:59 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6fe5de58-57ef-47e7-80c7-49c0506ca143.jpg |
|920ca8e8-5dc2-4844-aa7f-d7782e94d380.jpg |
|-----------------------------------------|

[2024-12-03 14:32:59 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 13
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:32:59 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 14:32:59 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 12
 {executed in 0 msec}
[2024-12-03 14:32:59 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|84e77be4-2b62-4f40-8f8b-0803e1080449.jpg |
|84f31709-40aa-40eb-a7e7-da0219067927.jpg |
|-----------------------------------------|

[2024-12-03 14:32:59 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 12
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:32:59 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 14:32:59 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 11
 {executed in 0 msec}
[2024-12-03 14:32:59 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3fc51a83-46ea-43ca-a85b-6fad4794a2bd.jpg |
|49906eb9-a412-4428-a629-baccbe152c75.jpg |
|-----------------------------------------|

[2024-12-03 14:32:59 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 11
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:32:59 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 14:32:59 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 9
 {executed in 0 msec}
[2024-12-03 14:32:59 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|34669219-c5d3-4d84-a277-fd8c2b8bca4f.jpg |
|f1ed44ba-1254-4232-9a0d-65037abe1e9c.jpg |
|-----------------------------------------|

[2024-12-03 14:32:59 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 9
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:32:59 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 14:32:59 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 7
 {executed in 0 msec}
[2024-12-03 14:32:59 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|14ecfa41-07fc-40d0-b50b-3fe95a840992.jpg |
|2694c9a6-a7b3-4800-ac73-0c853e16a152.jpg |
|-----------------------------------------|

[2024-12-03 14:32:59 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 7
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 14:32:59 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 14:32:59 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 6
 {executed in 0 msec}
[2024-12-03 14:32:59 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3c31d519-96b0-49bd-8657-d1eac4fb3fc1.jpg |
|-----------------------------------------|

[2024-12-03 14:32:59 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 6
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:32:59 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 14:33:12 INFO http-nio-8080-exec-9] [com.green.greengramver2.feed.comment.FeedCommentController] delFeedComment FeedCommentDelReq(feedCommentId=39, signedUserId=1)
[2024-12-03 14:33:12 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. delete
        from feed_comments
        where user_id = 1 and feed_comment_id = 39
 {executed in 6 msec}
[2024-12-03 14:33:12 INFO http-nio-8080-exec-9] [com.green.greengramver2.feed.comment.FeedCommentController] res 1
[2024-12-03 14:33:14 INFO http-nio-8080-exec-5] [com.green.greengramver2.feed.comment.FeedCommentController] feedCommentGet : FeedCommentGetReq(feedId=27, page=2, size=21, sIdx=3)
[2024-12-03 14:33:14 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 27
        ORDER BY feed_comment_id DESC
        LIMIT 3, 21
 {executed in 0 msec}
[2024-12-03 14:33:14 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|1       |35              |1       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |34              |20      |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |30              |16      |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |29              |15      |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |28              |14      |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |27              |13      |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |26              |12      |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |25              |11      |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |24              |10      |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |23              |9       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |22              |8       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |21              |7       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |20              |6       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |19              |5       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |18              |4       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |17              |3       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |16              |2       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |15              |1       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|5       |7               |2       |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |6               |123     |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |4               |ㅇ       |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-03 14:33:14 INFO http-nio-8080-exec-5] [com.green.greengramver2.feed.comment.FeedCommentService] res: FeedCommentGetRes(MoreComment=true, commentList=[FeedCommentDto(writerUserId=1, feedCommentId=35, comment=1, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=34, comment=20, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=30, comment=16, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=29, comment=15, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=28, comment=14, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=27, comment=13, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=26, comment=12, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=25, comment=11, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=24, comment=10, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=23, comment=9, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=22, comment=8, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=21, comment=7, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=20, comment=6, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=19, comment=5, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=18, comment=4, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=17, comment=3, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=16, comment=2, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=15, comment=1, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=5, feedCommentId=7, comment=2, writerNm=66, writerPic=d6440a69-541b-4d3c-969a-a6b643fd10de.jpg), FeedCommentDto(writerUserId=5, feedCommentId=6, comment=123, writerNm=66, writerPic=d6440a69-541b-4d3c-969a-a6b643fd10de.jpg)])
[2024-12-03 14:33:14 INFO http-nio-8080-exec-5] [com.green.greengramver2.feed.comment.FeedCommentController] feedCommentGet : FeedCommentGetRes(MoreComment=true, commentList=[FeedCommentDto(writerUserId=1, feedCommentId=35, comment=1, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=34, comment=20, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=30, comment=16, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=29, comment=15, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=28, comment=14, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=27, comment=13, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=26, comment=12, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=25, comment=11, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=24, comment=10, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=23, comment=9, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=22, comment=8, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=21, comment=7, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=20, comment=6, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=19, comment=5, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=18, comment=4, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=17, comment=3, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=16, comment=2, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=15, comment=1, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=5, feedCommentId=7, comment=2, writerNm=66, writerPic=d6440a69-541b-4d3c-969a-a6b643fd10de.jpg), FeedCommentDto(writerUserId=5, feedCommentId=6, comment=123, writerNm=66, writerPic=d6440a69-541b-4d3c-969a-a6b643fd10de.jpg)])
[2024-12-03 14:47:58 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 6 class path changes (0 additions, 0 deletions, 6 modifications)
[2024-12-03 14:47:58 INFO Thread-5] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-03 14:47:58 INFO Thread-5] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-03 14:47:58 INFO Thread-5] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-03 14:47:58 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 4356 (D:\Students\jang jin seong\GreenGramVer2\build\classes\java\main started by Administrator in D:\Students\jang jin seong\GreenGramVer2)
[2024-12-03 14:47:58 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-03 14:47:58 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-03 14:47:58 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-03 14:47:58 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-03 14:47:58 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-03 14:47:58 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-03 14:47:58 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 199 ms
[2024-12-03 14:47:58 INFO restartedMain] [com.green.greengramver2.common.MyFileUtils] MFU 생성자: D:\Students\jang jin seong\download\greengram_ver2
[2024-12-03 14:47:58 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-03 14:47:58 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-03 14:47:58 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-03 14:47:58 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-03 14:47:58 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Started GreenGramVer2Application in 0.373 seconds (process running for 1106.05)
[2024-12-03 14:47:58 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-03 14:48:00 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-03 14:48:00 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-03 14:48:00 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 0 ms
[2024-12-03 14:48:00 INFO http-nio-8080-exec-4] [com.green.greengramver2.feed.model.FeedGetReq] FeedGetReq 1,null,1
[2024-12-03 14:48:00 INFO http-nio-8080-exec-4] [com.green.greengramver2.feed.FeedController] feedC getFeedList p: FeedGetReq(super=Paging(page=1, size=20, sIdx=0), signedUserId=1)
[2024-12-03 14:48:00 INFO http-nio-8080-exec-4] [com.zaxxer.hikari.HikariDataSource] HikariPool-2 - Starting...
[2024-12-03 14:48:00 INFO http-nio-8080-exec-4] [com.zaxxer.hikari.pool.HikariPool] HikariPool-2 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@241dfafe
[2024-12-03 14:48:00 INFO http-nio-8080-exec-4] [com.zaxxer.hikari.HikariDataSource] HikariPool-2 - Start completed.
[2024-12-03 14:48:00 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT a.feed_id AS feedId, writer_user_id AS writerUserId,
        if(nick_name IS NULL , uid, nick_name) AS writerNm,
        pic AS writerPic, contents, location, a.created_at AS createdAt,
        if(c.feed_id IS NULL ,0 , 1) AS isLike
        FROM feed A
        JOIN user B
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c
        ON a.feed_id = c.feed_id
        AND c.user_id = 1
        ORDER BY a.feed_id DESC
        LIMIT 0,20
 {executed in 0 msec}
[2024-12-03 14:48:00 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|feed_id |writer_user_id |writernm |pic                                      |contents     |location |created_at          |islike |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|27      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |I am panguin |남극       |2024-11-29 17:07:59 |0      |
|26      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |I am panguin |남극       |2024-11-29 16:46:01 |0      |
|25      |5              |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |4123         |213      |2024-11-29 16:32:31 |0      |
|24      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |31231        |123      |2024-11-29 16:01:53 |0      |
|23      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |4754         |444      |2024-11-29 16:00:03 |0      |
|22      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |aaa          |aa       |2024-11-29 15:58:25 |0      |
|14      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:51:21 |1      |
|13      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:51:14 |1      |
|12      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:42:17 |1      |
|11      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |123          |33123    |2024-11-29 10:42:01 |0      |
|9       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |21123        |3        |2024-11-29 10:37:22 |0      |
|7       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-28 17:20:59 |1      |
|6       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |             |         |2024-11-28 17:15:01 |0      |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|

[2024-12-03 14:48:00 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
        from feed_pics
        where feed_id = 27
 {executed in 0 msec}
[2024-12-03 14:48:00 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5a0d637a-00c7-441f-a9fa-c0dc68af2602.jpg |
|-----------------------------------------|

[2024-12-03 14:48:00 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 27
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:48:00 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|1       |38              |4       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |37              |3       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |36              |2       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |35              |1       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-03 14:48:00 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
        from feed_pics
        where feed_id = 26
 {executed in 0 msec}
[2024-12-03 14:48:00 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3e5fe979-fe9c-4ed6-9ad7-c1dbf4f2538f.jpg |
|-----------------------------------------|

[2024-12-03 14:48:00 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 26
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:48:00 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|1       |9               |s       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|5       |8               |123     |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-03 14:48:00 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
        from feed_pics
        where feed_id = 25
 {executed in 0 msec}
[2024-12-03 14:48:00 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|8213634a-99df-42d8-963e-87bc120cc8a7.jpg |
|-----------------------------------------|

[2024-12-03 14:48:00 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 25
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:48:00 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 14:48:00 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
        from feed_pics
        where feed_id = 24
 {executed in 1 msec}
[2024-12-03 14:48:00 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|dfe6f2c1-3753-4a6a-aff4-0de7fa2786b8.jpg |
|-----------------------------------------|

[2024-12-03 14:48:00 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 24
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:48:00 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 14:48:00 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
        from feed_pics
        where feed_id = 23
 {executed in 0 msec}
[2024-12-03 14:48:00 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f3e6375d-35d8-4a4a-a976-26ca5c6abaac.jpg |
|-----------------------------------------|

[2024-12-03 14:48:00 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 23
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:48:00 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 14:48:00 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
        from feed_pics
        where feed_id = 22
 {executed in 0 msec}
[2024-12-03 14:48:00 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e97360ca-fe79-48c3-acaa-cd71042a0a78.tif |
|-----------------------------------------|

[2024-12-03 14:48:00 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 22
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:48:00 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 14:48:00 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
        from feed_pics
        where feed_id = 14
 {executed in 1 msec}
[2024-12-03 14:48:00 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a3709fe6-3e0d-4f04-8cef-1cc328c4fc0c.jpg |
|ada457b9-68aa-4a78-b0c8-c5035af844e2.jpg |
|-----------------------------------------|

[2024-12-03 14:48:00 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 14
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:48:00 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 14:48:00 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
        from feed_pics
        where feed_id = 13
 {executed in 0 msec}
[2024-12-03 14:48:00 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6fe5de58-57ef-47e7-80c7-49c0506ca143.jpg |
|920ca8e8-5dc2-4844-aa7f-d7782e94d380.jpg |
|-----------------------------------------|

[2024-12-03 14:48:00 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 13
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:48:00 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 14:48:00 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
        from feed_pics
        where feed_id = 12
 {executed in 0 msec}
[2024-12-03 14:48:00 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|84e77be4-2b62-4f40-8f8b-0803e1080449.jpg |
|84f31709-40aa-40eb-a7e7-da0219067927.jpg |
|-----------------------------------------|

[2024-12-03 14:48:00 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 12
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:48:00 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 14:48:00 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
        from feed_pics
        where feed_id = 11
 {executed in 0 msec}
[2024-12-03 14:48:00 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3fc51a83-46ea-43ca-a85b-6fad4794a2bd.jpg |
|49906eb9-a412-4428-a629-baccbe152c75.jpg |
|-----------------------------------------|

[2024-12-03 14:48:00 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 11
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:48:00 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 14:48:00 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
        from feed_pics
        where feed_id = 9
 {executed in 1 msec}
[2024-12-03 14:48:00 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|34669219-c5d3-4d84-a277-fd8c2b8bca4f.jpg |
|f1ed44ba-1254-4232-9a0d-65037abe1e9c.jpg |
|-----------------------------------------|

[2024-12-03 14:48:00 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 9
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:48:00 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 14:48:00 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
        from feed_pics
        where feed_id = 7
 {executed in 1 msec}
[2024-12-03 14:48:00 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|14ecfa41-07fc-40d0-b50b-3fe95a840992.jpg |
|2694c9a6-a7b3-4800-ac73-0c853e16a152.jpg |
|-----------------------------------------|

[2024-12-03 14:48:00 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 7
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:48:00 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 14:48:00 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
        from feed_pics
        where feed_id = 6
 {executed in 0 msec}
[2024-12-03 14:48:00 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3c31d519-96b0-49bd-8657-d1eac4fb3fc1.jpg |
|-----------------------------------------|

[2024-12-03 14:48:00 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 6
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:48:00 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 14:48:03 WARN http-nio-8080-exec-1] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.bind.MissingServletRequestParameterException: Required request parameter 'sIdx' for method parameter type int is not present]
[2024-12-03 14:48:06 WARN http-nio-8080-exec-2] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.bind.MissingServletRequestParameterException: Required request parameter 'sIdx' for method parameter type int is not present]
[2024-12-03 14:48:09 INFO http-nio-8080-exec-1] [com.green.greengramver2.feed.model.FeedGetReq] FeedGetReq 1,null,1
[2024-12-03 14:48:09 INFO http-nio-8080-exec-1] [com.green.greengramver2.feed.FeedController] feedC getFeedList p: FeedGetReq(super=Paging(page=1, size=20, sIdx=0), signedUserId=1)
[2024-12-03 14:48:09 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT a.feed_id AS feedId, writer_user_id AS writerUserId,
        if(nick_name IS NULL , uid, nick_name) AS writerNm,
        pic AS writerPic, contents, location, a.created_at AS createdAt,
        if(c.feed_id IS NULL ,0 , 1) AS isLike
        FROM feed A
        JOIN user B
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c
        ON a.feed_id = c.feed_id
        AND c.user_id = 1
        ORDER BY a.feed_id DESC
        LIMIT 0,20
 {executed in 1 msec}
[2024-12-03 14:48:09 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|feed_id |writer_user_id |writernm |pic                                      |contents     |location |created_at          |islike |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|27      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |I am panguin |남극       |2024-11-29 17:07:59 |0      |
|26      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |I am panguin |남극       |2024-11-29 16:46:01 |0      |
|25      |5              |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |4123         |213      |2024-11-29 16:32:31 |0      |
|24      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |31231        |123      |2024-11-29 16:01:53 |0      |
|23      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |4754         |444      |2024-11-29 16:00:03 |0      |
|22      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |aaa          |aa       |2024-11-29 15:58:25 |0      |
|14      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:51:21 |1      |
|13      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:51:14 |1      |
|12      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:42:17 |1      |
|11      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |123          |33123    |2024-11-29 10:42:01 |0      |
|9       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |21123        |3        |2024-11-29 10:37:22 |0      |
|7       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-28 17:20:59 |1      |
|6       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |             |         |2024-11-28 17:15:01 |0      |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|

[2024-12-03 14:48:09 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
        from feed_pics
        where feed_id = 27
 {executed in 0 msec}
[2024-12-03 14:48:09 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5a0d637a-00c7-441f-a9fa-c0dc68af2602.jpg |
|-----------------------------------------|

[2024-12-03 14:48:09 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 27
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:48:09 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|1       |38              |4       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |37              |3       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |36              |2       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |35              |1       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-03 14:48:09 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
        from feed_pics
        where feed_id = 26
 {executed in 0 msec}
[2024-12-03 14:48:09 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3e5fe979-fe9c-4ed6-9ad7-c1dbf4f2538f.jpg |
|-----------------------------------------|

[2024-12-03 14:48:09 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 26
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:48:09 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|1       |9               |s       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|5       |8               |123     |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-03 14:48:09 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
        from feed_pics
        where feed_id = 25
 {executed in 0 msec}
[2024-12-03 14:48:09 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|8213634a-99df-42d8-963e-87bc120cc8a7.jpg |
|-----------------------------------------|

[2024-12-03 14:48:09 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 25
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 14:48:09 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 14:48:09 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
        from feed_pics
        where feed_id = 24
 {executed in 0 msec}
[2024-12-03 14:48:09 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|dfe6f2c1-3753-4a6a-aff4-0de7fa2786b8.jpg |
|-----------------------------------------|

[2024-12-03 14:48:09 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 24
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 14:48:09 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 14:48:09 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
        from feed_pics
        where feed_id = 23
 {executed in 0 msec}
[2024-12-03 14:48:09 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f3e6375d-35d8-4a4a-a976-26ca5c6abaac.jpg |
|-----------------------------------------|

[2024-12-03 14:48:09 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 23
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 14:48:09 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 14:48:09 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
        from feed_pics
        where feed_id = 22
 {executed in 0 msec}
[2024-12-03 14:48:09 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e97360ca-fe79-48c3-acaa-cd71042a0a78.tif |
|-----------------------------------------|

[2024-12-03 14:48:09 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 22
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:48:09 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 14:48:09 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
        from feed_pics
        where feed_id = 14
 {executed in 1 msec}
[2024-12-03 14:48:09 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a3709fe6-3e0d-4f04-8cef-1cc328c4fc0c.jpg |
|ada457b9-68aa-4a78-b0c8-c5035af844e2.jpg |
|-----------------------------------------|

[2024-12-03 14:48:09 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 14
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:48:09 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 14:48:09 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
        from feed_pics
        where feed_id = 13
 {executed in 0 msec}
[2024-12-03 14:48:09 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6fe5de58-57ef-47e7-80c7-49c0506ca143.jpg |
|920ca8e8-5dc2-4844-aa7f-d7782e94d380.jpg |
|-----------------------------------------|

[2024-12-03 14:48:09 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 13
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:48:09 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 14:48:09 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
        from feed_pics
        where feed_id = 12
 {executed in 0 msec}
[2024-12-03 14:48:09 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|84e77be4-2b62-4f40-8f8b-0803e1080449.jpg |
|84f31709-40aa-40eb-a7e7-da0219067927.jpg |
|-----------------------------------------|

[2024-12-03 14:48:09 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 12
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:48:09 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 14:48:09 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
        from feed_pics
        where feed_id = 11
 {executed in 0 msec}
[2024-12-03 14:48:09 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3fc51a83-46ea-43ca-a85b-6fad4794a2bd.jpg |
|49906eb9-a412-4428-a629-baccbe152c75.jpg |
|-----------------------------------------|

[2024-12-03 14:48:09 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 11
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 14:48:09 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 14:48:09 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
        from feed_pics
        where feed_id = 9
 {executed in 0 msec}
[2024-12-03 14:48:09 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|34669219-c5d3-4d84-a277-fd8c2b8bca4f.jpg |
|f1ed44ba-1254-4232-9a0d-65037abe1e9c.jpg |
|-----------------------------------------|

[2024-12-03 14:48:09 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 9
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:48:09 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 14:48:09 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
        from feed_pics
        where feed_id = 7
 {executed in 0 msec}
[2024-12-03 14:48:09 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|14ecfa41-07fc-40d0-b50b-3fe95a840992.jpg |
|2694c9a6-a7b3-4800-ac73-0c853e16a152.jpg |
|-----------------------------------------|

[2024-12-03 14:48:09 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 7
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 14:48:09 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 14:48:09 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
        from feed_pics
        where feed_id = 6
 {executed in 0 msec}
[2024-12-03 14:48:09 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3c31d519-96b0-49bd-8657-d1eac4fb3fc1.jpg |
|-----------------------------------------|

[2024-12-03 14:48:09 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 6
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 14:48:09 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 14:53:28 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 6 class path changes (0 additions, 0 deletions, 6 modifications)
[2024-12-03 14:53:28 INFO Thread-7] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-03 14:53:28 INFO Thread-7] [com.zaxxer.hikari.HikariDataSource] HikariPool-2 - Shutdown initiated...
[2024-12-03 14:53:28 INFO Thread-7] [com.zaxxer.hikari.HikariDataSource] HikariPool-2 - Shutdown completed.
[2024-12-03 14:53:28 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 4356 (D:\Students\jang jin seong\GreenGramVer2\build\classes\java\main started by Administrator in D:\Students\jang jin seong\GreenGramVer2)
[2024-12-03 14:53:28 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-03 14:53:28 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-03 14:53:28 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-03 14:53:28 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-03 14:53:28 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-03 14:53:28 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-03 14:53:28 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 179 ms
[2024-12-03 14:53:28 INFO restartedMain] [com.green.greengramver2.common.MyFileUtils] MFU 생성자: D:\Students\jang jin seong\download\greengram_ver2
[2024-12-03 14:53:28 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-03 14:53:28 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-03 14:53:28 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-03 14:53:28 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-03 14:53:28 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Started GreenGramVer2Application in 0.321 seconds (process running for 1436.031)
[2024-12-03 14:53:28 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-03 14:53:51 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 26 class path changes (0 additions, 18 deletions, 8 modifications)
[2024-12-03 14:53:51 INFO Thread-11] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-03 14:53:51 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 4356 (D:\Students\jang jin seong\GreenGramVer2\build\classes\java\main started by Administrator in D:\Students\jang jin seong\GreenGramVer2)
[2024-12-03 14:53:51 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-03 14:53:51 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-03 14:53:51 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-03 14:53:51 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-03 14:53:51 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-03 14:53:51 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-03 14:53:51 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 174 ms
[2024-12-03 14:53:51 INFO restartedMain] [com.green.greengramver2.common.MyFileUtils] MFU 생성자: D:\Students\jang jin seong\download\greengram_ver2
[2024-12-03 14:53:52 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-03 14:53:52 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-03 14:53:52 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-03 14:53:52 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Started GreenGramVer2Application in 0.315 seconds (process running for 1459.364)
[2024-12-03 14:53:52 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-03 14:54:30 INFO SpringApplicationShutdownHook] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-03 14:54:32 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 12092 (D:\Students\jang jin seong\GreenGramVer2\build\classes\java\main started by Administrator in D:\Students\jang jin seong\GreenGramVer2)
[2024-12-03 14:54:32 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-03 14:54:32 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-03 14:54:32 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-03 14:54:33 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-03 14:54:33 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-03 14:54:33 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-03 14:54:33 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-03 14:54:33 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-03 14:54:33 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 763 ms
[2024-12-03 14:54:33 INFO restartedMain] [com.green.greengramver2.common.MyFileUtils] MFU 생성자: D:\Students\jang jin seong\download\greengram_ver2
[2024-12-03 14:54:33 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-03 14:54:34 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-03 14:54:34 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-03 14:54:34 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-03 14:54:34 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Started GreenGramVer2Application in 1.637 seconds (process running for 2.25)
[2024-12-03 14:54:36 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-03 14:54:36 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-03 14:54:36 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-03 14:54:36 INFO http-nio-8080-exec-9] [com.green.greengramver2.feed.model.FeedGetReq] FeedGetReq 1,null,1
[2024-12-03 14:54:36 INFO http-nio-8080-exec-9] [com.green.greengramver2.feed.FeedController] feedC getFeedList p: FeedGetReq(super=Paging(page=1, size=20, sIdx=0), signedUserId=1)
[2024-12-03 14:54:36 INFO http-nio-8080-exec-9] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-03 14:54:36 INFO http-nio-8080-exec-9] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@4848a384
[2024-12-03 14:54:36 INFO http-nio-8080-exec-9] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-03 14:54:36 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, writer_user_id AS writerUserId,
        if(nick_name IS NULL , uid, nick_name) AS writerNm,
        pic AS writerPic, contents, location, a.created_at AS createdAt,
        if(c.feed_id IS NULL ,0 , 1) AS isLike
        FROM feed A
        JOIN user B
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c
        ON a.feed_id = c.feed_id
        AND c.user_id = 1
        ORDER BY a.feed_id DESC
        LIMIT 0,20
 {executed in 1 msec}
[2024-12-03 14:54:36 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|feed_id |writer_user_id |writernm |pic                                      |contents     |location |created_at          |islike |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|27      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |I am panguin |남극       |2024-11-29 17:07:59 |0      |
|26      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |I am panguin |남극       |2024-11-29 16:46:01 |0      |
|25      |5              |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |4123         |213      |2024-11-29 16:32:31 |0      |
|24      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |31231        |123      |2024-11-29 16:01:53 |0      |
|23      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |4754         |444      |2024-11-29 16:00:03 |0      |
|22      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |aaa          |aa       |2024-11-29 15:58:25 |0      |
|14      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:51:21 |1      |
|13      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:51:14 |1      |
|12      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:42:17 |1      |
|11      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |123          |33123    |2024-11-29 10:42:01 |0      |
|9       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |21123        |3        |2024-11-29 10:37:22 |0      |
|7       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-28 17:20:59 |1      |
|6       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |             |         |2024-11-28 17:15:01 |0      |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|

[2024-12-03 14:54:36 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 27
 {executed in 0 msec}
[2024-12-03 14:54:36 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5a0d637a-00c7-441f-a9fa-c0dc68af2602.jpg |
|-----------------------------------------|

[2024-12-03 14:54:36 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 27
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 14:54:36 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|1       |38              |4       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |37              |3       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |36              |2       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |35              |1       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-03 14:54:36 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 26
 {executed in 0 msec}
[2024-12-03 14:54:36 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3e5fe979-fe9c-4ed6-9ad7-c1dbf4f2538f.jpg |
|-----------------------------------------|

[2024-12-03 14:54:36 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 26
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:54:36 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|1       |9               |s       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|5       |8               |123     |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-03 14:54:36 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 25
 {executed in 0 msec}
[2024-12-03 14:54:36 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|8213634a-99df-42d8-963e-87bc120cc8a7.jpg |
|-----------------------------------------|

[2024-12-03 14:54:36 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 25
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:54:36 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 14:54:36 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 24
 {executed in 1 msec}
[2024-12-03 14:54:36 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|dfe6f2c1-3753-4a6a-aff4-0de7fa2786b8.jpg |
|-----------------------------------------|

[2024-12-03 14:54:36 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 24
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:54:36 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 14:54:36 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 23
 {executed in 0 msec}
[2024-12-03 14:54:36 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f3e6375d-35d8-4a4a-a976-26ca5c6abaac.jpg |
|-----------------------------------------|

[2024-12-03 14:54:36 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 23
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:54:36 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 14:54:36 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 22
 {executed in 0 msec}
[2024-12-03 14:54:36 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e97360ca-fe79-48c3-acaa-cd71042a0a78.tif |
|-----------------------------------------|

[2024-12-03 14:54:36 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 22
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:54:36 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 14:54:36 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 14
 {executed in 0 msec}
[2024-12-03 14:54:36 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a3709fe6-3e0d-4f04-8cef-1cc328c4fc0c.jpg |
|ada457b9-68aa-4a78-b0c8-c5035af844e2.jpg |
|-----------------------------------------|

[2024-12-03 14:54:36 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 14
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 14:54:36 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 14:54:36 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 13
 {executed in 0 msec}
[2024-12-03 14:54:36 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6fe5de58-57ef-47e7-80c7-49c0506ca143.jpg |
|920ca8e8-5dc2-4844-aa7f-d7782e94d380.jpg |
|-----------------------------------------|

[2024-12-03 14:54:36 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 13
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:54:36 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 14:54:36 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 12
 {executed in 0 msec}
[2024-12-03 14:54:36 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|84e77be4-2b62-4f40-8f8b-0803e1080449.jpg |
|84f31709-40aa-40eb-a7e7-da0219067927.jpg |
|-----------------------------------------|

[2024-12-03 14:54:36 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 12
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:54:36 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 14:54:36 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 11
 {executed in 0 msec}
[2024-12-03 14:54:36 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3fc51a83-46ea-43ca-a85b-6fad4794a2bd.jpg |
|49906eb9-a412-4428-a629-baccbe152c75.jpg |
|-----------------------------------------|

[2024-12-03 14:54:36 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 11
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:54:36 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 14:54:36 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 9
 {executed in 0 msec}
[2024-12-03 14:54:36 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|34669219-c5d3-4d84-a277-fd8c2b8bca4f.jpg |
|f1ed44ba-1254-4232-9a0d-65037abe1e9c.jpg |
|-----------------------------------------|

[2024-12-03 14:54:36 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 9
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:54:36 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 14:54:36 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 7
 {executed in 0 msec}
[2024-12-03 14:54:36 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|14ecfa41-07fc-40d0-b50b-3fe95a840992.jpg |
|2694c9a6-a7b3-4800-ac73-0c853e16a152.jpg |
|-----------------------------------------|

[2024-12-03 14:54:36 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 7
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:54:36 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 14:54:36 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 6
 {executed in 0 msec}
[2024-12-03 14:54:36 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3c31d519-96b0-49bd-8657-d1eac4fb3fc1.jpg |
|-----------------------------------------|

[2024-12-03 14:54:36 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 6
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:54:36 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 14:54:38 INFO http-nio-8080-exec-1] [com.green.greengramver2.feed.comment.FeedCommentController] feedCommentGet : FeedCommentGetReq(feedId=27, size=20, sIdx=3)
[2024-12-03 14:54:38 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 27
        ORDER BY feed_comment_id DESC
        LIMIT 3, 20
 {executed in 0 msec}
[2024-12-03 14:54:38 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|1       |35              |1       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |34              |20      |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |30              |16      |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |29              |15      |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |28              |14      |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |27              |13      |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |26              |12      |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |25              |11      |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |24              |10      |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |23              |9       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |22              |8       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |21              |7       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |20              |6       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |19              |5       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |18              |4       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |17              |3       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |16              |2       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |15              |1       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|5       |7               |2       |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |6               |123     |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-03 14:54:38 INFO http-nio-8080-exec-1] [com.green.greengramver2.feed.comment.FeedCommentService] res: FeedCommentGetRes(MoreComment=true, commentList=[FeedCommentDto(writerUserId=1, feedCommentId=35, comment=1, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=34, comment=20, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=30, comment=16, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=29, comment=15, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=28, comment=14, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=27, comment=13, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=26, comment=12, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=25, comment=11, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=24, comment=10, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=23, comment=9, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=22, comment=8, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=21, comment=7, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=20, comment=6, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=19, comment=5, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=18, comment=4, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=17, comment=3, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=16, comment=2, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=15, comment=1, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=5, feedCommentId=7, comment=2, writerNm=66, writerPic=d6440a69-541b-4d3c-969a-a6b643fd10de.jpg)])
[2024-12-03 14:54:38 INFO http-nio-8080-exec-1] [com.green.greengramver2.feed.comment.FeedCommentController] feedCommentGet : FeedCommentGetRes(MoreComment=true, commentList=[FeedCommentDto(writerUserId=1, feedCommentId=35, comment=1, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=34, comment=20, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=30, comment=16, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=29, comment=15, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=28, comment=14, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=27, comment=13, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=26, comment=12, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=25, comment=11, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=24, comment=10, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=23, comment=9, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=22, comment=8, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=21, comment=7, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=20, comment=6, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=19, comment=5, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=18, comment=4, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=17, comment=3, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=16, comment=2, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=15, comment=1, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=5, feedCommentId=7, comment=2, writerNm=66, writerPic=d6440a69-541b-4d3c-969a-a6b643fd10de.jpg)])
[2024-12-03 14:54:41 INFO http-nio-8080-exec-9] [com.green.greengramver2.feed.model.FeedGetReq] FeedGetReq 1,null,1
[2024-12-03 14:54:41 INFO http-nio-8080-exec-9] [com.green.greengramver2.feed.FeedController] feedC getFeedList p: FeedGetReq(super=Paging(page=1, size=20, sIdx=0), signedUserId=1)
[2024-12-03 14:54:41 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, writer_user_id AS writerUserId,
        if(nick_name IS NULL , uid, nick_name) AS writerNm,
        pic AS writerPic, contents, location, a.created_at AS createdAt,
        if(c.feed_id IS NULL ,0 , 1) AS isLike
        FROM feed A
        JOIN user B
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c
        ON a.feed_id = c.feed_id
        AND c.user_id = 1
        ORDER BY a.feed_id DESC
        LIMIT 0,20
 {executed in 1 msec}
[2024-12-03 14:54:41 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|feed_id |writer_user_id |writernm |pic                                      |contents     |location |created_at          |islike |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|27      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |I am panguin |남극       |2024-11-29 17:07:59 |0      |
|26      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |I am panguin |남극       |2024-11-29 16:46:01 |0      |
|25      |5              |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |4123         |213      |2024-11-29 16:32:31 |0      |
|24      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |31231        |123      |2024-11-29 16:01:53 |0      |
|23      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |4754         |444      |2024-11-29 16:00:03 |0      |
|22      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |aaa          |aa       |2024-11-29 15:58:25 |0      |
|14      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:51:21 |1      |
|13      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:51:14 |1      |
|12      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:42:17 |1      |
|11      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |123          |33123    |2024-11-29 10:42:01 |0      |
|9       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |21123        |3        |2024-11-29 10:37:22 |0      |
|7       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-28 17:20:59 |1      |
|6       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |             |         |2024-11-28 17:15:01 |0      |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|

[2024-12-03 14:54:41 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 27
 {executed in 0 msec}
[2024-12-03 14:54:41 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5a0d637a-00c7-441f-a9fa-c0dc68af2602.jpg |
|-----------------------------------------|

[2024-12-03 14:54:41 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 27
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:54:41 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|1       |38              |4       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |37              |3       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |36              |2       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |35              |1       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-03 14:54:41 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 26
 {executed in 0 msec}
[2024-12-03 14:54:41 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3e5fe979-fe9c-4ed6-9ad7-c1dbf4f2538f.jpg |
|-----------------------------------------|

[2024-12-03 14:54:41 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 26
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:54:41 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|1       |9               |s       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|5       |8               |123     |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-03 14:54:41 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 25
 {executed in 0 msec}
[2024-12-03 14:54:41 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|8213634a-99df-42d8-963e-87bc120cc8a7.jpg |
|-----------------------------------------|

[2024-12-03 14:54:41 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 25
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:54:41 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 14:54:41 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 24
 {executed in 1 msec}
[2024-12-03 14:54:41 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|dfe6f2c1-3753-4a6a-aff4-0de7fa2786b8.jpg |
|-----------------------------------------|

[2024-12-03 14:54:41 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 24
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 14:54:41 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 14:54:41 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 23
 {executed in 1 msec}
[2024-12-03 14:54:41 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f3e6375d-35d8-4a4a-a976-26ca5c6abaac.jpg |
|-----------------------------------------|

[2024-12-03 14:54:41 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 23
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 14:54:41 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 14:54:41 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 22
 {executed in 0 msec}
[2024-12-03 14:54:41 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e97360ca-fe79-48c3-acaa-cd71042a0a78.tif |
|-----------------------------------------|

[2024-12-03 14:54:41 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 22
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:54:41 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 14:54:41 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 14
 {executed in 1 msec}
[2024-12-03 14:54:41 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a3709fe6-3e0d-4f04-8cef-1cc328c4fc0c.jpg |
|ada457b9-68aa-4a78-b0c8-c5035af844e2.jpg |
|-----------------------------------------|

[2024-12-03 14:54:41 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 14
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:54:41 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 14:54:41 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 13
 {executed in 0 msec}
[2024-12-03 14:54:41 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6fe5de58-57ef-47e7-80c7-49c0506ca143.jpg |
|920ca8e8-5dc2-4844-aa7f-d7782e94d380.jpg |
|-----------------------------------------|

[2024-12-03 14:54:41 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 13
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:54:41 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 14:54:41 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 12
 {executed in 0 msec}
[2024-12-03 14:54:41 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|84e77be4-2b62-4f40-8f8b-0803e1080449.jpg |
|84f31709-40aa-40eb-a7e7-da0219067927.jpg |
|-----------------------------------------|

[2024-12-03 14:54:41 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 12
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:54:41 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 14:54:41 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 11
 {executed in 1 msec}
[2024-12-03 14:54:41 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3fc51a83-46ea-43ca-a85b-6fad4794a2bd.jpg |
|49906eb9-a412-4428-a629-baccbe152c75.jpg |
|-----------------------------------------|

[2024-12-03 14:54:41 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 11
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 14:54:41 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 14:54:41 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 9
 {executed in 0 msec}
[2024-12-03 14:54:41 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|34669219-c5d3-4d84-a277-fd8c2b8bca4f.jpg |
|f1ed44ba-1254-4232-9a0d-65037abe1e9c.jpg |
|-----------------------------------------|

[2024-12-03 14:54:41 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 9
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:54:41 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 14:54:41 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 7
 {executed in 0 msec}
[2024-12-03 14:54:41 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|14ecfa41-07fc-40d0-b50b-3fe95a840992.jpg |
|2694c9a6-a7b3-4800-ac73-0c853e16a152.jpg |
|-----------------------------------------|

[2024-12-03 14:54:41 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 7
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:54:41 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 14:54:41 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 6
 {executed in 0 msec}
[2024-12-03 14:54:41 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3c31d519-96b0-49bd-8657-d1eac4fb3fc1.jpg |
|-----------------------------------------|

[2024-12-03 14:54:41 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 6
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:54:41 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 14:54:44 INFO http-nio-8080-exec-6] [com.green.greengramver2.feed.comment.FeedCommentController] delFeedComment FeedCommentDelReq(feedCommentId=38, signedUserId=1)
[2024-12-03 14:54:44 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. delete
        from feed_comments
        where user_id = 1 and feed_comment_id = 38
 {executed in 1 msec}
[2024-12-03 14:54:44 INFO http-nio-8080-exec-6] [com.green.greengramver2.feed.comment.FeedCommentController] res 1
[2024-12-03 14:54:46 INFO http-nio-8080-exec-4] [com.green.greengramver2.feed.comment.FeedCommentController] feedCommentGet : FeedCommentGetReq(feedId=27, size=20, sIdx=2)
[2024-12-03 14:54:46 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 27
        ORDER BY feed_comment_id DESC
        LIMIT 2, 20
 {executed in 1 msec}
[2024-12-03 14:54:46 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|1       |35              |1       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |34              |20      |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |30              |16      |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |29              |15      |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |28              |14      |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |27              |13      |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |26              |12      |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |25              |11      |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |24              |10      |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |23              |9       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |22              |8       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |21              |7       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |20              |6       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |19              |5       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |18              |4       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |17              |3       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |16              |2       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |15              |1       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|5       |7               |2       |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |6               |123     |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-03 14:54:46 INFO http-nio-8080-exec-4] [com.green.greengramver2.feed.comment.FeedCommentService] res: FeedCommentGetRes(MoreComment=true, commentList=[FeedCommentDto(writerUserId=1, feedCommentId=35, comment=1, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=34, comment=20, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=30, comment=16, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=29, comment=15, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=28, comment=14, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=27, comment=13, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=26, comment=12, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=25, comment=11, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=24, comment=10, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=23, comment=9, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=22, comment=8, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=21, comment=7, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=20, comment=6, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=19, comment=5, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=18, comment=4, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=17, comment=3, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=16, comment=2, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=15, comment=1, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=5, feedCommentId=7, comment=2, writerNm=66, writerPic=d6440a69-541b-4d3c-969a-a6b643fd10de.jpg)])
[2024-12-03 14:54:46 INFO http-nio-8080-exec-4] [com.green.greengramver2.feed.comment.FeedCommentController] feedCommentGet : FeedCommentGetRes(MoreComment=true, commentList=[FeedCommentDto(writerUserId=1, feedCommentId=35, comment=1, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=34, comment=20, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=30, comment=16, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=29, comment=15, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=28, comment=14, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=27, comment=13, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=26, comment=12, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=25, comment=11, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=24, comment=10, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=23, comment=9, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=22, comment=8, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=21, comment=7, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=20, comment=6, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=19, comment=5, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=18, comment=4, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=17, comment=3, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=16, comment=2, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=15, comment=1, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=5, feedCommentId=7, comment=2, writerNm=66, writerPic=d6440a69-541b-4d3c-969a-a6b643fd10de.jpg)])
[2024-12-03 14:54:51 INFO http-nio-8080-exec-6] [com.green.greengramver2.feed.model.FeedGetReq] FeedGetReq 1,null,1
[2024-12-03 14:54:51 INFO http-nio-8080-exec-6] [com.green.greengramver2.feed.FeedController] feedC getFeedList p: FeedGetReq(super=Paging(page=1, size=20, sIdx=0), signedUserId=1)
[2024-12-03 14:54:51 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, writer_user_id AS writerUserId,
        if(nick_name IS NULL , uid, nick_name) AS writerNm,
        pic AS writerPic, contents, location, a.created_at AS createdAt,
        if(c.feed_id IS NULL ,0 , 1) AS isLike
        FROM feed A
        JOIN user B
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c
        ON a.feed_id = c.feed_id
        AND c.user_id = 1
        ORDER BY a.feed_id DESC
        LIMIT 0,20
 {executed in 0 msec}
[2024-12-03 14:54:51 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|feed_id |writer_user_id |writernm |pic                                      |contents     |location |created_at          |islike |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|27      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |I am panguin |남극       |2024-11-29 17:07:59 |0      |
|26      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |I am panguin |남극       |2024-11-29 16:46:01 |0      |
|25      |5              |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |4123         |213      |2024-11-29 16:32:31 |0      |
|24      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |31231        |123      |2024-11-29 16:01:53 |0      |
|23      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |4754         |444      |2024-11-29 16:00:03 |0      |
|22      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |aaa          |aa       |2024-11-29 15:58:25 |0      |
|14      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:51:21 |1      |
|13      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:51:14 |1      |
|12      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:42:17 |1      |
|11      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |123          |33123    |2024-11-29 10:42:01 |0      |
|9       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |21123        |3        |2024-11-29 10:37:22 |0      |
|7       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-28 17:20:59 |1      |
|6       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |             |         |2024-11-28 17:15:01 |0      |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|

[2024-12-03 14:54:51 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 27
 {executed in 0 msec}
[2024-12-03 14:54:51 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5a0d637a-00c7-441f-a9fa-c0dc68af2602.jpg |
|-----------------------------------------|

[2024-12-03 14:54:51 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 27
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:54:51 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|1       |37              |3       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |36              |2       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |35              |1       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |34              |20      |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-03 14:54:51 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 26
 {executed in 0 msec}
[2024-12-03 14:54:51 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3e5fe979-fe9c-4ed6-9ad7-c1dbf4f2538f.jpg |
|-----------------------------------------|

[2024-12-03 14:54:51 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 26
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:54:51 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|1       |9               |s       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|5       |8               |123     |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-03 14:54:51 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 25
 {executed in 0 msec}
[2024-12-03 14:54:51 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|8213634a-99df-42d8-963e-87bc120cc8a7.jpg |
|-----------------------------------------|

[2024-12-03 14:54:51 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 25
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 14:54:51 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 14:54:51 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 24
 {executed in 0 msec}
[2024-12-03 14:54:51 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|dfe6f2c1-3753-4a6a-aff4-0de7fa2786b8.jpg |
|-----------------------------------------|

[2024-12-03 14:54:51 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 24
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:54:51 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 14:54:51 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 23
 {executed in 0 msec}
[2024-12-03 14:54:51 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f3e6375d-35d8-4a4a-a976-26ca5c6abaac.jpg |
|-----------------------------------------|

[2024-12-03 14:54:51 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 23
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 14:54:51 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 14:54:51 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 22
 {executed in 0 msec}
[2024-12-03 14:54:51 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e97360ca-fe79-48c3-acaa-cd71042a0a78.tif |
|-----------------------------------------|

[2024-12-03 14:54:51 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 22
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:54:51 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 14:54:51 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 14
 {executed in 0 msec}
[2024-12-03 14:54:51 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a3709fe6-3e0d-4f04-8cef-1cc328c4fc0c.jpg |
|ada457b9-68aa-4a78-b0c8-c5035af844e2.jpg |
|-----------------------------------------|

[2024-12-03 14:54:51 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 14
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 14:54:51 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 14:54:51 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 13
 {executed in 0 msec}
[2024-12-03 14:54:51 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6fe5de58-57ef-47e7-80c7-49c0506ca143.jpg |
|920ca8e8-5dc2-4844-aa7f-d7782e94d380.jpg |
|-----------------------------------------|

[2024-12-03 14:54:51 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 13
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:54:51 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 14:54:51 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 12
 {executed in 0 msec}
[2024-12-03 14:54:51 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|84e77be4-2b62-4f40-8f8b-0803e1080449.jpg |
|84f31709-40aa-40eb-a7e7-da0219067927.jpg |
|-----------------------------------------|

[2024-12-03 14:54:51 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 12
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:54:51 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 14:54:51 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 11
 {executed in 0 msec}
[2024-12-03 14:54:51 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3fc51a83-46ea-43ca-a85b-6fad4794a2bd.jpg |
|49906eb9-a412-4428-a629-baccbe152c75.jpg |
|-----------------------------------------|

[2024-12-03 14:54:51 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 11
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:54:51 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 14:54:51 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 9
 {executed in 0 msec}
[2024-12-03 14:54:51 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|34669219-c5d3-4d84-a277-fd8c2b8bca4f.jpg |
|f1ed44ba-1254-4232-9a0d-65037abe1e9c.jpg |
|-----------------------------------------|

[2024-12-03 14:54:51 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 9
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:54:51 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 14:54:51 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 7
 {executed in 0 msec}
[2024-12-03 14:54:51 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|14ecfa41-07fc-40d0-b50b-3fe95a840992.jpg |
|2694c9a6-a7b3-4800-ac73-0c853e16a152.jpg |
|-----------------------------------------|

[2024-12-03 14:54:51 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 7
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:54:51 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 14:54:51 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 6
 {executed in 0 msec}
[2024-12-03 14:54:51 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3c31d519-96b0-49bd-8657-d1eac4fb3fc1.jpg |
|-----------------------------------------|

[2024-12-03 14:54:51 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 6
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:54:51 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 14:54:53 INFO http-nio-8080-exec-8] [com.green.greengramver2.feed.comment.FeedCommentController] feedCommentP FeedCommentPostReq(feedId=27, userId=1, comment=4, feedCommentId=0)
[2024-12-03 14:54:53 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. insert into feed_comments
        set user_id = 1,
            feed_id = 27,
            `comment` = '4'
 {executed in 2 msec}
[2024-12-03 14:54:53 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: insert into feed_comments
        set user_id = 1,
            feed_id = 27,
            `comment` = '4'
 {executed in 1 msec}
[2024-12-03 14:54:53 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|40        |
|----------|

[2024-12-03 14:54:55 INFO http-nio-8080-exec-5] [com.green.greengramver2.feed.comment.FeedCommentController] feedCommentP FeedCommentPostReq(feedId=27, userId=1, comment=5, feedCommentId=0)
[2024-12-03 14:54:55 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. insert into feed_comments
        set user_id = 1,
            feed_id = 27,
            `comment` = '5'
 {executed in 6 msec}
[2024-12-03 14:54:55 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: insert into feed_comments
        set user_id = 1,
            feed_id = 27,
            `comment` = '5'
 {executed in 0 msec}
[2024-12-03 14:54:55 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|41        |
|----------|

[2024-12-03 14:54:56 INFO http-nio-8080-exec-3] [com.green.greengramver2.feed.comment.FeedCommentController] feedCommentP FeedCommentPostReq(feedId=27, userId=1, comment=6, feedCommentId=0)
[2024-12-03 14:54:56 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. insert into feed_comments
        set user_id = 1,
            feed_id = 27,
            `comment` = '6'
 {executed in 1 msec}
[2024-12-03 14:54:56 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: insert into feed_comments
        set user_id = 1,
            feed_id = 27,
            `comment` = '6'
 {executed in 0 msec}
[2024-12-03 14:54:56 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|42        |
|----------|

[2024-12-03 14:54:58 INFO http-nio-8080-exec-2] [com.green.greengramver2.feed.comment.FeedCommentController] feedCommentGet : FeedCommentGetReq(feedId=27, size=20, sIdx=6)
[2024-12-03 14:54:58 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 27
        ORDER BY feed_comment_id DESC
        LIMIT 6, 20
 {executed in 1 msec}
[2024-12-03 14:54:58 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|1       |34              |20      |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |30              |16      |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |29              |15      |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |28              |14      |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |27              |13      |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |26              |12      |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |25              |11      |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |24              |10      |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |23              |9       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |22              |8       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |21              |7       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |20              |6       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |19              |5       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |18              |4       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |17              |3       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |16              |2       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |15              |1       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|5       |7               |2       |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |6               |123     |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |4               |ㅇ       |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-03 14:54:58 INFO http-nio-8080-exec-2] [com.green.greengramver2.feed.comment.FeedCommentService] res: FeedCommentGetRes(MoreComment=true, commentList=[FeedCommentDto(writerUserId=1, feedCommentId=34, comment=20, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=30, comment=16, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=29, comment=15, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=28, comment=14, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=27, comment=13, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=26, comment=12, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=25, comment=11, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=24, comment=10, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=23, comment=9, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=22, comment=8, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=21, comment=7, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=20, comment=6, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=19, comment=5, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=18, comment=4, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=17, comment=3, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=16, comment=2, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=15, comment=1, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=5, feedCommentId=7, comment=2, writerNm=66, writerPic=d6440a69-541b-4d3c-969a-a6b643fd10de.jpg), FeedCommentDto(writerUserId=5, feedCommentId=6, comment=123, writerNm=66, writerPic=d6440a69-541b-4d3c-969a-a6b643fd10de.jpg)])
[2024-12-03 14:54:58 INFO http-nio-8080-exec-2] [com.green.greengramver2.feed.comment.FeedCommentController] feedCommentGet : FeedCommentGetRes(MoreComment=true, commentList=[FeedCommentDto(writerUserId=1, feedCommentId=34, comment=20, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=30, comment=16, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=29, comment=15, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=28, comment=14, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=27, comment=13, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=26, comment=12, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=25, comment=11, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=24, comment=10, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=23, comment=9, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=22, comment=8, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=21, comment=7, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=20, comment=6, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=19, comment=5, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=18, comment=4, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=17, comment=3, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=16, comment=2, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=15, comment=1, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=5, feedCommentId=7, comment=2, writerNm=66, writerPic=d6440a69-541b-4d3c-969a-a6b643fd10de.jpg), FeedCommentDto(writerUserId=5, feedCommentId=6, comment=123, writerNm=66, writerPic=d6440a69-541b-4d3c-969a-a6b643fd10de.jpg)])
[2024-12-03 15:06:40 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 6 class path changes (0 additions, 6 deletions, 0 modifications)
[2024-12-03 15:06:40 INFO Thread-5] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-03 15:06:40 INFO Thread-5] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-03 15:06:40 INFO Thread-5] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-03 15:06:40 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 12092 (D:\Students\jang jin seong\GreenGramVer2\build\classes\java\main started by Administrator in D:\Students\jang jin seong\GreenGramVer2)
[2024-12-03 15:06:40 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-03 15:06:40 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-03 15:06:40 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-03 15:06:40 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-03 15:06:40 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-03 15:06:40 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-03 15:06:40 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 203 ms
[2024-12-03 15:06:40 INFO restartedMain] [com.green.greengramver2.common.MyFileUtils] MFU 생성자: D:\Students\jang jin seong\download\greengram_ver2
[2024-12-03 15:06:40 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-03 15:06:40 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-03 15:06:40 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-03 15:06:40 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-03 15:06:40 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Started GreenGramVer2Application in 0.396 seconds (process running for 728.836)
[2024-12-03 15:06:40 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-03 15:06:42 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 6 class path changes (6 additions, 0 deletions, 0 modifications)
[2024-12-03 15:06:42 INFO Thread-7] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-03 15:06:42 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 12092 (D:\Students\jang jin seong\GreenGramVer2\build\classes\java\main started by Administrator in D:\Students\jang jin seong\GreenGramVer2)
[2024-12-03 15:06:42 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-03 15:06:42 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-03 15:06:42 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-03 15:06:42 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-03 15:06:42 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-03 15:06:42 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-03 15:06:42 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 186 ms
[2024-12-03 15:06:42 INFO restartedMain] [com.green.greengramver2.common.MyFileUtils] MFU 생성자: D:\Students\jang jin seong\download\greengram_ver2
[2024-12-03 15:06:42 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-03 15:06:42 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-03 15:06:42 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-03 15:06:42 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-03 15:06:42 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Started GreenGramVer2Application in 0.328 seconds (process running for 730.643)
[2024-12-03 15:06:42 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-03 15:10:05 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
[2024-12-03 15:10:05 INFO Thread-11] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-03 15:10:05 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 12092 (D:\Students\jang jin seong\GreenGramVer2\build\classes\java\main started by Administrator in D:\Students\jang jin seong\GreenGramVer2)
[2024-12-03 15:10:05 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-03 15:10:05 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-03 15:10:05 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-03 15:10:05 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-03 15:10:05 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-03 15:10:05 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-03 15:10:05 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 184 ms
[2024-12-03 15:10:05 INFO restartedMain] [com.green.greengramver2.common.MyFileUtils] MFU 생성자: D:\Students\jang jin seong\download\greengram_ver2
[2024-12-03 15:10:05 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-03 15:10:05 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-03 15:10:05 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-03 15:10:05 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-03 15:10:05 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Started GreenGramVer2Application in 0.305 seconds (process running for 934.039)
[2024-12-03 15:10:05 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-03 15:10:57 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-03 15:10:57 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-03 15:10:57 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 0 ms
[2024-12-03 15:11:00 INFO http-nio-8080-exec-10] [org.springdoc.api.AbstractOpenApiResource] Init duration for springdoc-openapi is: 143 ms
[2024-12-03 15:11:13 INFO http-nio-8080-exec-6] [com.green.greengramver2.feed.comment.FeedCommentController] feedCommentGet : FeedCommentGetReq(feedId=27, size=6, sIdx=2)
[2024-12-03 15:11:13 INFO http-nio-8080-exec-6] [com.zaxxer.hikari.HikariDataSource] HikariPool-2 - Starting...
[2024-12-03 15:11:13 INFO http-nio-8080-exec-6] [com.zaxxer.hikari.pool.HikariPool] HikariPool-2 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@5aaba755
[2024-12-03 15:11:13 INFO http-nio-8080-exec-6] [com.zaxxer.hikari.HikariDataSource] HikariPool-2 - Start completed.
[2024-12-03 15:11:13 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 27
        ORDER BY feed_comment_id DESC
        LIMIT 2, 6
 {executed in 0 msec}
[2024-12-03 15:11:13 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|1       |40              |4       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |37              |3       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |36              |2       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |35              |1       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |34              |20      |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |30              |16      |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-03 15:11:13 INFO http-nio-8080-exec-6] [com.green.greengramver2.feed.comment.FeedCommentService] res: FeedCommentGetRes(MoreComment=true, commentList=[FeedCommentDto(writerUserId=1, feedCommentId=40, comment=4, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=37, comment=3, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=36, comment=2, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=35, comment=1, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=34, comment=20, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg)])
[2024-12-03 15:11:13 INFO http-nio-8080-exec-6] [com.green.greengramver2.feed.comment.FeedCommentController] feedCommentGet : FeedCommentGetRes(MoreComment=true, commentList=[FeedCommentDto(writerUserId=1, feedCommentId=40, comment=4, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=37, comment=3, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=36, comment=2, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=35, comment=1, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=34, comment=20, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg)])
[2024-12-03 15:26:30 INFO http-nio-8080-exec-7] [com.green.greengramver2.feed.model.FeedGetReq] FeedGetReq 1,null,1
[2024-12-03 15:26:30 INFO http-nio-8080-exec-7] [com.green.greengramver2.feed.FeedController] feedC getFeedList p: FeedGetReq(super=Paging(page=1, size=20, sIdx=0), signedUserId=1)
[2024-12-03 15:26:30 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT a.feed_id AS feedId, writer_user_id AS writerUserId,
        if(nick_name IS NULL , uid, nick_name) AS writerNm,
        pic AS writerPic, contents, location, a.created_at AS createdAt,
        if(c.feed_id IS NULL ,0 , 1) AS isLike
        FROM feed A
        JOIN user B
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c
        ON a.feed_id = c.feed_id
        AND c.user_id = 1
        ORDER BY a.feed_id DESC
        LIMIT 0,20
 {executed in 1 msec}
[2024-12-03 15:26:30 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|feed_id |writer_user_id |writernm |pic                                      |contents     |location |created_at          |islike |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|27      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |I am panguin |남극       |2024-11-29 17:07:59 |0      |
|26      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |I am panguin |남극       |2024-11-29 16:46:01 |0      |
|25      |5              |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |4123         |213      |2024-11-29 16:32:31 |0      |
|24      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |31231        |123      |2024-11-29 16:01:53 |0      |
|23      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |4754         |444      |2024-11-29 16:00:03 |0      |
|22      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |aaa          |aa       |2024-11-29 15:58:25 |0      |
|14      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:51:21 |1      |
|13      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:51:14 |1      |
|12      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:42:17 |1      |
|11      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |123          |33123    |2024-11-29 10:42:01 |0      |
|9       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |21123        |3        |2024-11-29 10:37:22 |0      |
|7       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-28 17:20:59 |1      |
|6       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |             |         |2024-11-28 17:15:01 |0      |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|

[2024-12-03 15:26:30 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
        from feed_pics
        where feed_id = 27
 {executed in 0 msec}
[2024-12-03 15:26:30 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5a0d637a-00c7-441f-a9fa-c0dc68af2602.jpg |
|-----------------------------------------|

[2024-12-03 15:26:30 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 27
        ORDER BY feed_comment_id DESC
        LIMIT 0, 5
 {executed in 0 msec}
[2024-12-03 15:26:30 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|1       |42              |6       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |41              |5       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |40              |4       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |37              |3       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |36              |2       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-03 15:26:30 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
        from feed_pics
        where feed_id = 26
 {executed in 0 msec}
[2024-12-03 15:26:30 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3e5fe979-fe9c-4ed6-9ad7-c1dbf4f2538f.jpg |
|-----------------------------------------|

[2024-12-03 15:26:30 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 26
        ORDER BY feed_comment_id DESC
        LIMIT 0, 5
 {executed in 0 msec}
[2024-12-03 15:26:30 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|1       |9               |s       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|5       |8               |123     |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-03 15:26:30 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
        from feed_pics
        where feed_id = 25
 {executed in 0 msec}
[2024-12-03 15:26:30 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|8213634a-99df-42d8-963e-87bc120cc8a7.jpg |
|-----------------------------------------|

[2024-12-03 15:26:30 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 25
        ORDER BY feed_comment_id DESC
        LIMIT 0, 5
 {executed in 0 msec}
[2024-12-03 15:26:30 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 15:26:30 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
        from feed_pics
        where feed_id = 24
 {executed in 0 msec}
[2024-12-03 15:26:30 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|dfe6f2c1-3753-4a6a-aff4-0de7fa2786b8.jpg |
|-----------------------------------------|

[2024-12-03 15:26:30 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 24
        ORDER BY feed_comment_id DESC
        LIMIT 0, 5
 {executed in 0 msec}
[2024-12-03 15:26:30 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 15:26:30 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
        from feed_pics
        where feed_id = 23
 {executed in 0 msec}
[2024-12-03 15:26:30 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f3e6375d-35d8-4a4a-a976-26ca5c6abaac.jpg |
|-----------------------------------------|

[2024-12-03 15:26:30 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 23
        ORDER BY feed_comment_id DESC
        LIMIT 0, 5
 {executed in 0 msec}
[2024-12-03 15:26:30 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 15:26:30 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
        from feed_pics
        where feed_id = 22
 {executed in 0 msec}
[2024-12-03 15:26:30 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e97360ca-fe79-48c3-acaa-cd71042a0a78.tif |
|-----------------------------------------|

[2024-12-03 15:26:30 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 22
        ORDER BY feed_comment_id DESC
        LIMIT 0, 5
 {executed in 0 msec}
[2024-12-03 15:26:30 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 15:26:30 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
        from feed_pics
        where feed_id = 14
 {executed in 0 msec}
[2024-12-03 15:26:30 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a3709fe6-3e0d-4f04-8cef-1cc328c4fc0c.jpg |
|ada457b9-68aa-4a78-b0c8-c5035af844e2.jpg |
|-----------------------------------------|

[2024-12-03 15:26:30 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 14
        ORDER BY feed_comment_id DESC
        LIMIT 0, 5
 {executed in 1 msec}
[2024-12-03 15:26:30 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 15:26:30 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
        from feed_pics
        where feed_id = 13
 {executed in 0 msec}
[2024-12-03 15:26:30 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6fe5de58-57ef-47e7-80c7-49c0506ca143.jpg |
|920ca8e8-5dc2-4844-aa7f-d7782e94d380.jpg |
|-----------------------------------------|

[2024-12-03 15:26:30 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 13
        ORDER BY feed_comment_id DESC
        LIMIT 0, 5
 {executed in 0 msec}
[2024-12-03 15:26:30 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 15:26:30 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
        from feed_pics
        where feed_id = 12
 {executed in 1 msec}
[2024-12-03 15:26:30 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|84e77be4-2b62-4f40-8f8b-0803e1080449.jpg |
|84f31709-40aa-40eb-a7e7-da0219067927.jpg |
|-----------------------------------------|

[2024-12-03 15:26:30 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 12
        ORDER BY feed_comment_id DESC
        LIMIT 0, 5
 {executed in 0 msec}
[2024-12-03 15:26:30 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 15:26:30 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
        from feed_pics
        where feed_id = 11
 {executed in 1 msec}
[2024-12-03 15:26:30 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3fc51a83-46ea-43ca-a85b-6fad4794a2bd.jpg |
|49906eb9-a412-4428-a629-baccbe152c75.jpg |
|-----------------------------------------|

[2024-12-03 15:26:30 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 11
        ORDER BY feed_comment_id DESC
        LIMIT 0, 5
 {executed in 0 msec}
[2024-12-03 15:26:30 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 15:26:30 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
        from feed_pics
        where feed_id = 9
 {executed in 0 msec}
[2024-12-03 15:26:30 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|34669219-c5d3-4d84-a277-fd8c2b8bca4f.jpg |
|f1ed44ba-1254-4232-9a0d-65037abe1e9c.jpg |
|-----------------------------------------|

[2024-12-03 15:26:30 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 9
        ORDER BY feed_comment_id DESC
        LIMIT 0, 5
 {executed in 0 msec}
[2024-12-03 15:26:30 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 15:26:30 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
        from feed_pics
        where feed_id = 7
 {executed in 0 msec}
[2024-12-03 15:26:30 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|14ecfa41-07fc-40d0-b50b-3fe95a840992.jpg |
|2694c9a6-a7b3-4800-ac73-0c853e16a152.jpg |
|-----------------------------------------|

[2024-12-03 15:26:30 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 7
        ORDER BY feed_comment_id DESC
        LIMIT 0, 5
 {executed in 0 msec}
[2024-12-03 15:26:30 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 15:26:30 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
        from feed_pics
        where feed_id = 6
 {executed in 0 msec}
[2024-12-03 15:26:30 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3c31d519-96b0-49bd-8657-d1eac4fb3fc1.jpg |
|-----------------------------------------|

[2024-12-03 15:26:30 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 6
        ORDER BY feed_comment_id DESC
        LIMIT 0, 5
 {executed in 1 msec}
[2024-12-03 15:26:30 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 15:26:36 INFO http-nio-8080-exec-9] [com.green.greengramver2.feed.model.FeedGetReq] FeedGetReq 1,null,1
[2024-12-03 15:26:36 INFO http-nio-8080-exec-9] [com.green.greengramver2.feed.FeedController] feedC getFeedList p: FeedGetReq(super=Paging(page=1, size=20, sIdx=0), signedUserId=1)
[2024-12-03 15:26:36 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT a.feed_id AS feedId, writer_user_id AS writerUserId,
        if(nick_name IS NULL , uid, nick_name) AS writerNm,
        pic AS writerPic, contents, location, a.created_at AS createdAt,
        if(c.feed_id IS NULL ,0 , 1) AS isLike
        FROM feed A
        JOIN user B
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c
        ON a.feed_id = c.feed_id
        AND c.user_id = 1
        ORDER BY a.feed_id DESC
        LIMIT 0,20
 {executed in 0 msec}
[2024-12-03 15:26:36 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|feed_id |writer_user_id |writernm |pic                                      |contents     |location |created_at          |islike |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|27      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |I am panguin |남극       |2024-11-29 17:07:59 |0      |
|26      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |I am panguin |남극       |2024-11-29 16:46:01 |0      |
|25      |5              |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |4123         |213      |2024-11-29 16:32:31 |0      |
|24      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |31231        |123      |2024-11-29 16:01:53 |0      |
|23      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |4754         |444      |2024-11-29 16:00:03 |0      |
|22      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |aaa          |aa       |2024-11-29 15:58:25 |0      |
|14      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:51:21 |1      |
|13      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:51:14 |1      |
|12      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:42:17 |1      |
|11      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |123          |33123    |2024-11-29 10:42:01 |0      |
|9       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |21123        |3        |2024-11-29 10:37:22 |0      |
|7       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-28 17:20:59 |1      |
|6       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |             |         |2024-11-28 17:15:01 |0      |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|

[2024-12-03 15:26:36 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
        from feed_pics
        where feed_id = 27
 {executed in 0 msec}
[2024-12-03 15:26:36 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5a0d637a-00c7-441f-a9fa-c0dc68af2602.jpg |
|-----------------------------------------|

[2024-12-03 15:26:36 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 27
        ORDER BY feed_comment_id DESC
        LIMIT 0, 5
 {executed in 0 msec}
[2024-12-03 15:26:36 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|1       |42              |6       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |41              |5       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |40              |4       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |37              |3       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |36              |2       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-03 15:26:36 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
        from feed_pics
        where feed_id = 26
 {executed in 0 msec}
[2024-12-03 15:26:36 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3e5fe979-fe9c-4ed6-9ad7-c1dbf4f2538f.jpg |
|-----------------------------------------|

[2024-12-03 15:26:36 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 26
        ORDER BY feed_comment_id DESC
        LIMIT 0, 5
 {executed in 1 msec}
[2024-12-03 15:26:36 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|1       |9               |s       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|5       |8               |123     |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-03 15:26:36 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
        from feed_pics
        where feed_id = 25
 {executed in 1 msec}
[2024-12-03 15:26:36 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|8213634a-99df-42d8-963e-87bc120cc8a7.jpg |
|-----------------------------------------|

[2024-12-03 15:26:36 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 25
        ORDER BY feed_comment_id DESC
        LIMIT 0, 5
 {executed in 1 msec}
[2024-12-03 15:26:36 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 15:26:36 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
        from feed_pics
        where feed_id = 24
 {executed in 1 msec}
[2024-12-03 15:26:36 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|dfe6f2c1-3753-4a6a-aff4-0de7fa2786b8.jpg |
|-----------------------------------------|

[2024-12-03 15:26:36 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 24
        ORDER BY feed_comment_id DESC
        LIMIT 0, 5
 {executed in 0 msec}
[2024-12-03 15:26:36 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 15:26:36 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
        from feed_pics
        where feed_id = 23
 {executed in 0 msec}
[2024-12-03 15:26:36 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f3e6375d-35d8-4a4a-a976-26ca5c6abaac.jpg |
|-----------------------------------------|

[2024-12-03 15:26:36 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 23
        ORDER BY feed_comment_id DESC
        LIMIT 0, 5
 {executed in 1 msec}
[2024-12-03 15:26:36 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 15:26:36 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
        from feed_pics
        where feed_id = 22
 {executed in 0 msec}
[2024-12-03 15:26:36 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e97360ca-fe79-48c3-acaa-cd71042a0a78.tif |
|-----------------------------------------|

[2024-12-03 15:26:36 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 22
        ORDER BY feed_comment_id DESC
        LIMIT 0, 5
 {executed in 0 msec}
[2024-12-03 15:26:36 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 15:26:36 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
        from feed_pics
        where feed_id = 14
 {executed in 0 msec}
[2024-12-03 15:26:36 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a3709fe6-3e0d-4f04-8cef-1cc328c4fc0c.jpg |
|ada457b9-68aa-4a78-b0c8-c5035af844e2.jpg |
|-----------------------------------------|

[2024-12-03 15:26:36 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 14
        ORDER BY feed_comment_id DESC
        LIMIT 0, 5
 {executed in 0 msec}
[2024-12-03 15:26:36 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 15:26:36 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
        from feed_pics
        where feed_id = 13
 {executed in 0 msec}
[2024-12-03 15:26:36 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6fe5de58-57ef-47e7-80c7-49c0506ca143.jpg |
|920ca8e8-5dc2-4844-aa7f-d7782e94d380.jpg |
|-----------------------------------------|

[2024-12-03 15:26:36 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 13
        ORDER BY feed_comment_id DESC
        LIMIT 0, 5
 {executed in 1 msec}
[2024-12-03 15:26:36 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 15:26:36 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
        from feed_pics
        where feed_id = 12
 {executed in 0 msec}
[2024-12-03 15:26:36 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|84e77be4-2b62-4f40-8f8b-0803e1080449.jpg |
|84f31709-40aa-40eb-a7e7-da0219067927.jpg |
|-----------------------------------------|

[2024-12-03 15:26:36 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 12
        ORDER BY feed_comment_id DESC
        LIMIT 0, 5
 {executed in 0 msec}
[2024-12-03 15:26:36 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 15:26:36 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
        from feed_pics
        where feed_id = 11
 {executed in 0 msec}
[2024-12-03 15:26:36 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3fc51a83-46ea-43ca-a85b-6fad4794a2bd.jpg |
|49906eb9-a412-4428-a629-baccbe152c75.jpg |
|-----------------------------------------|

[2024-12-03 15:26:36 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 11
        ORDER BY feed_comment_id DESC
        LIMIT 0, 5
 {executed in 0 msec}
[2024-12-03 15:26:36 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 15:26:36 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
        from feed_pics
        where feed_id = 9
 {executed in 0 msec}
[2024-12-03 15:26:36 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|34669219-c5d3-4d84-a277-fd8c2b8bca4f.jpg |
|f1ed44ba-1254-4232-9a0d-65037abe1e9c.jpg |
|-----------------------------------------|

[2024-12-03 15:26:36 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 9
        ORDER BY feed_comment_id DESC
        LIMIT 0, 5
 {executed in 0 msec}
[2024-12-03 15:26:36 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 15:26:36 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
        from feed_pics
        where feed_id = 7
 {executed in 0 msec}
[2024-12-03 15:26:36 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|14ecfa41-07fc-40d0-b50b-3fe95a840992.jpg |
|2694c9a6-a7b3-4800-ac73-0c853e16a152.jpg |
|-----------------------------------------|

[2024-12-03 15:26:36 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 7
        ORDER BY feed_comment_id DESC
        LIMIT 0, 5
 {executed in 0 msec}
[2024-12-03 15:26:36 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 15:26:36 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
        from feed_pics
        where feed_id = 6
 {executed in 1 msec}
[2024-12-03 15:26:36 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3c31d519-96b0-49bd-8657-d1eac4fb3fc1.jpg |
|-----------------------------------------|

[2024-12-03 15:26:36 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 6
        ORDER BY feed_comment_id DESC
        LIMIT 0, 5
 {executed in 0 msec}
[2024-12-03 15:26:36 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 15:26:50 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-2 - Shutdown initiated...
[2024-12-03 15:26:50 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-2 - Shutdown completed.
[2024-12-03 15:26:52 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 10444 (D:\Students\jang jin seong\GreenGramVer2\build\classes\java\main started by Administrator in D:\Students\jang jin seong\GreenGramVer2)
[2024-12-03 15:26:52 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-03 15:26:52 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-03 15:26:52 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-03 15:26:53 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-03 15:26:53 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-03 15:26:53 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-03 15:26:53 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-03 15:26:53 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-03 15:26:53 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 793 ms
[2024-12-03 15:26:53 INFO restartedMain] [com.green.greengramver2.common.MyFileUtils] MFU 생성자: D:\Students\jang jin seong\download\greengram_ver2
[2024-12-03 15:26:53 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-03 15:26:53 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-03 15:26:53 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-03 15:26:53 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-03 15:26:53 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Started GreenGramVer2Application in 1.687 seconds (process running for 2.049)
[2024-12-03 15:26:53 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-03 15:26:53 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-03 15:26:53 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-03 15:26:53 INFO http-nio-8080-exec-3] [com.green.greengramver2.feed.model.FeedGetReq] FeedGetReq 1,null,1
[2024-12-03 15:26:53 INFO http-nio-8080-exec-3] [com.green.greengramver2.feed.FeedController] feedC getFeedList p: FeedGetReq(super=Paging(page=1, size=20, sIdx=0), signedUserId=1)
[2024-12-03 15:26:53 INFO http-nio-8080-exec-3] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-03 15:26:53 INFO http-nio-8080-exec-3] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@7f8f943f
[2024-12-03 15:26:53 INFO http-nio-8080-exec-3] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-03 15:26:53 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, writer_user_id AS writerUserId,
        if(nick_name IS NULL , uid, nick_name) AS writerNm,
        pic AS writerPic, contents, location, a.created_at AS createdAt,
        if(c.feed_id IS NULL ,0 , 1) AS isLike
        FROM feed A
        JOIN user B
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c
        ON a.feed_id = c.feed_id
        AND c.user_id = 1
        ORDER BY a.feed_id DESC
        LIMIT 0,20
 {executed in 1 msec}
[2024-12-03 15:26:53 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|feed_id |writer_user_id |writernm |pic                                      |contents     |location |created_at          |islike |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|27      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |I am panguin |남극       |2024-11-29 17:07:59 |0      |
|26      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |I am panguin |남극       |2024-11-29 16:46:01 |0      |
|25      |5              |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |4123         |213      |2024-11-29 16:32:31 |0      |
|24      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |31231        |123      |2024-11-29 16:01:53 |0      |
|23      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |4754         |444      |2024-11-29 16:00:03 |0      |
|22      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |aaa          |aa       |2024-11-29 15:58:25 |0      |
|14      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:51:21 |1      |
|13      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:51:14 |1      |
|12      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:42:17 |1      |
|11      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |123          |33123    |2024-11-29 10:42:01 |0      |
|9       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |21123        |3        |2024-11-29 10:37:22 |0      |
|7       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-28 17:20:59 |1      |
|6       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |             |         |2024-11-28 17:15:01 |0      |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|

[2024-12-03 15:26:53 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 27
 {executed in 0 msec}
[2024-12-03 15:26:53 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5a0d637a-00c7-441f-a9fa-c0dc68af2602.jpg |
|-----------------------------------------|

[2024-12-03 15:26:53 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 27
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 15:26:53 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|1       |42              |6       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |41              |5       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |40              |4       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |37              |3       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-03 15:26:53 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 26
 {executed in 0 msec}
[2024-12-03 15:26:53 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3e5fe979-fe9c-4ed6-9ad7-c1dbf4f2538f.jpg |
|-----------------------------------------|

[2024-12-03 15:26:53 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 26
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 15:26:53 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|1       |9               |s       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|5       |8               |123     |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-03 15:26:53 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 25
 {executed in 1 msec}
[2024-12-03 15:26:53 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|8213634a-99df-42d8-963e-87bc120cc8a7.jpg |
|-----------------------------------------|

[2024-12-03 15:26:53 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 25
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 15:26:53 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 15:26:53 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 24
 {executed in 0 msec}
[2024-12-03 15:26:53 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|dfe6f2c1-3753-4a6a-aff4-0de7fa2786b8.jpg |
|-----------------------------------------|

[2024-12-03 15:26:53 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 24
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:26:53 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 15:26:53 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 23
 {executed in 0 msec}
[2024-12-03 15:26:53 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f3e6375d-35d8-4a4a-a976-26ca5c6abaac.jpg |
|-----------------------------------------|

[2024-12-03 15:26:53 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 23
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:26:53 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 15:26:53 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 22
 {executed in 0 msec}
[2024-12-03 15:26:53 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e97360ca-fe79-48c3-acaa-cd71042a0a78.tif |
|-----------------------------------------|

[2024-12-03 15:26:53 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 22
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:26:53 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 15:26:53 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 14
 {executed in 0 msec}
[2024-12-03 15:26:53 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a3709fe6-3e0d-4f04-8cef-1cc328c4fc0c.jpg |
|ada457b9-68aa-4a78-b0c8-c5035af844e2.jpg |
|-----------------------------------------|

[2024-12-03 15:26:53 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 14
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:26:53 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 15:26:53 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 13
 {executed in 0 msec}
[2024-12-03 15:26:53 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6fe5de58-57ef-47e7-80c7-49c0506ca143.jpg |
|920ca8e8-5dc2-4844-aa7f-d7782e94d380.jpg |
|-----------------------------------------|

[2024-12-03 15:26:53 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 13
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:26:53 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 15:26:53 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 12
 {executed in 0 msec}
[2024-12-03 15:26:53 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|84e77be4-2b62-4f40-8f8b-0803e1080449.jpg |
|84f31709-40aa-40eb-a7e7-da0219067927.jpg |
|-----------------------------------------|

[2024-12-03 15:26:53 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 12
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 15:26:53 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 15:26:53 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 11
 {executed in 0 msec}
[2024-12-03 15:26:53 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3fc51a83-46ea-43ca-a85b-6fad4794a2bd.jpg |
|49906eb9-a412-4428-a629-baccbe152c75.jpg |
|-----------------------------------------|

[2024-12-03 15:26:53 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 11
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:26:53 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 15:26:53 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 9
 {executed in 0 msec}
[2024-12-03 15:26:53 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|34669219-c5d3-4d84-a277-fd8c2b8bca4f.jpg |
|f1ed44ba-1254-4232-9a0d-65037abe1e9c.jpg |
|-----------------------------------------|

[2024-12-03 15:26:53 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 9
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:26:53 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 15:26:53 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 7
 {executed in 0 msec}
[2024-12-03 15:26:53 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|14ecfa41-07fc-40d0-b50b-3fe95a840992.jpg |
|2694c9a6-a7b3-4800-ac73-0c853e16a152.jpg |
|-----------------------------------------|

[2024-12-03 15:26:53 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 7
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:26:53 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 15:26:53 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 6
 {executed in 0 msec}
[2024-12-03 15:26:53 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3c31d519-96b0-49bd-8657-d1eac4fb3fc1.jpg |
|-----------------------------------------|

[2024-12-03 15:26:53 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 6
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:26:53 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 15:27:24 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 2 class path changes (0 additions, 0 deletions, 2 modifications)
[2024-12-03 15:27:24 INFO Thread-5] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-03 15:27:24 INFO Thread-5] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-03 15:27:24 INFO Thread-5] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-03 15:27:24 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 10444 (D:\Students\jang jin seong\GreenGramVer2\build\classes\java\main started by Administrator in D:\Students\jang jin seong\GreenGramVer2)
[2024-12-03 15:27:24 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-03 15:27:24 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-03 15:27:24 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-03 15:27:24 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-03 15:27:24 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-03 15:27:24 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-03 15:27:24 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 189 ms
[2024-12-03 15:27:24 INFO restartedMain] [com.green.greengramver2.common.MyFileUtils] MFU 생성자: D:\Students\jang jin seong\download\greengram_ver2
[2024-12-03 15:27:24 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-03 15:27:24 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-03 15:27:24 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-03 15:27:24 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-03 15:27:24 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Started GreenGramVer2Application in 0.339 seconds (process running for 32.892)
[2024-12-03 15:27:24 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-03 15:28:50 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-03 15:28:50 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-03 15:28:50 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 0 ms
[2024-12-03 15:28:50 WARN http-nio-8080-exec-1] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.bind.MissingServletRequestParameterException: Required request parameter 'size' for method parameter type int is not present]
[2024-12-03 15:29:30 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 5264 (D:\Students\jang jin seong\GreenGramVer2\build\classes\java\main started by Administrator in D:\Students\jang jin seong\GreenGramVer2)
[2024-12-03 15:29:30 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-03 15:29:30 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-03 15:29:30 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-03 15:29:31 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-03 15:29:31 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-03 15:29:31 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-03 15:29:31 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-03 15:29:31 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-03 15:29:31 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 859 ms
[2024-12-03 15:29:31 INFO restartedMain] [com.green.greengramver2.common.MyFileUtils] MFU 생성자: D:\Students\jang jin seong\download\greengram_ver2
[2024-12-03 15:29:31 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-03 15:29:32 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-03 15:29:32 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-03 15:29:32 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-03 15:29:32 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Started GreenGramVer2Application in 1.937 seconds (process running for 2.298)
[2024-12-03 15:29:32 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-03 15:29:32 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-03 15:29:32 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-03 15:29:33 INFO http-nio-8080-exec-9] [com.green.greengramver2.feed.model.FeedGetReq] FeedGetReq 1,null,1
[2024-12-03 15:29:33 INFO http-nio-8080-exec-9] [com.green.greengramver2.feed.FeedController] feedC getFeedList p: FeedGetReq(super=Paging(page=1, size=20, sIdx=0), signedUserId=1)
[2024-12-03 15:29:33 INFO http-nio-8080-exec-9] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-03 15:29:33 INFO http-nio-8080-exec-9] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@4af9c757
[2024-12-03 15:29:33 INFO http-nio-8080-exec-9] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-03 15:29:33 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, writer_user_id AS writerUserId,
        if(nick_name IS NULL , uid, nick_name) AS writerNm,
        pic AS writerPic, contents, location, a.created_at AS createdAt,
        if(c.feed_id IS NULL ,0 , 1) AS isLike
        FROM feed A
        JOIN user B
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c
        ON a.feed_id = c.feed_id
        AND c.user_id = 1
        ORDER BY a.feed_id DESC
        LIMIT 0,20
 {executed in 0 msec}
[2024-12-03 15:29:33 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|feed_id |writer_user_id |writernm |pic                                      |contents     |location |created_at          |islike |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|27      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |I am panguin |남극       |2024-11-29 17:07:59 |0      |
|26      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |I am panguin |남극       |2024-11-29 16:46:01 |0      |
|25      |5              |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |4123         |213      |2024-11-29 16:32:31 |0      |
|24      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |31231        |123      |2024-11-29 16:01:53 |0      |
|23      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |4754         |444      |2024-11-29 16:00:03 |0      |
|22      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |aaa          |aa       |2024-11-29 15:58:25 |0      |
|14      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:51:21 |1      |
|13      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:51:14 |1      |
|12      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:42:17 |1      |
|11      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |123          |33123    |2024-11-29 10:42:01 |0      |
|9       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |21123        |3        |2024-11-29 10:37:22 |0      |
|7       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-28 17:20:59 |1      |
|6       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |             |         |2024-11-28 17:15:01 |0      |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|

[2024-12-03 15:29:33 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 27
 {executed in 0 msec}
[2024-12-03 15:29:33 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5a0d637a-00c7-441f-a9fa-c0dc68af2602.jpg |
|-----------------------------------------|

[2024-12-03 15:29:33 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 27
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:29:33 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|1       |42              |6       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |41              |5       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |40              |4       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |37              |3       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-03 15:29:33 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 26
 {executed in 0 msec}
[2024-12-03 15:29:33 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3e5fe979-fe9c-4ed6-9ad7-c1dbf4f2538f.jpg |
|-----------------------------------------|

[2024-12-03 15:29:33 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 26
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 15:29:33 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|1       |9               |s       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|5       |8               |123     |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-03 15:29:33 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 25
 {executed in 0 msec}
[2024-12-03 15:29:33 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|8213634a-99df-42d8-963e-87bc120cc8a7.jpg |
|-----------------------------------------|

[2024-12-03 15:29:33 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 25
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:29:33 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 15:29:33 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 24
 {executed in 0 msec}
[2024-12-03 15:29:33 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|dfe6f2c1-3753-4a6a-aff4-0de7fa2786b8.jpg |
|-----------------------------------------|

[2024-12-03 15:29:33 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 24
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:29:33 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 15:29:33 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 23
 {executed in 0 msec}
[2024-12-03 15:29:33 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f3e6375d-35d8-4a4a-a976-26ca5c6abaac.jpg |
|-----------------------------------------|

[2024-12-03 15:29:33 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 23
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:29:33 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 15:29:33 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 22
 {executed in 0 msec}
[2024-12-03 15:29:33 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e97360ca-fe79-48c3-acaa-cd71042a0a78.tif |
|-----------------------------------------|

[2024-12-03 15:29:33 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 22
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:29:33 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 15:29:33 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 14
 {executed in 0 msec}
[2024-12-03 15:29:33 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a3709fe6-3e0d-4f04-8cef-1cc328c4fc0c.jpg |
|ada457b9-68aa-4a78-b0c8-c5035af844e2.jpg |
|-----------------------------------------|

[2024-12-03 15:29:33 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 14
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:29:33 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 15:29:33 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 13
 {executed in 1 msec}
[2024-12-03 15:29:33 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6fe5de58-57ef-47e7-80c7-49c0506ca143.jpg |
|920ca8e8-5dc2-4844-aa7f-d7782e94d380.jpg |
|-----------------------------------------|

[2024-12-03 15:29:33 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 13
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:29:33 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 15:29:33 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 12
 {executed in 1 msec}
[2024-12-03 15:29:33 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|84e77be4-2b62-4f40-8f8b-0803e1080449.jpg |
|84f31709-40aa-40eb-a7e7-da0219067927.jpg |
|-----------------------------------------|

[2024-12-03 15:29:33 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 12
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 15:29:33 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 15:29:33 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 11
 {executed in 0 msec}
[2024-12-03 15:29:33 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3fc51a83-46ea-43ca-a85b-6fad4794a2bd.jpg |
|49906eb9-a412-4428-a629-baccbe152c75.jpg |
|-----------------------------------------|

[2024-12-03 15:29:33 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 11
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:29:33 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 15:29:33 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 9
 {executed in 0 msec}
[2024-12-03 15:29:33 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|34669219-c5d3-4d84-a277-fd8c2b8bca4f.jpg |
|f1ed44ba-1254-4232-9a0d-65037abe1e9c.jpg |
|-----------------------------------------|

[2024-12-03 15:29:33 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 9
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:29:33 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 15:29:33 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 7
 {executed in 0 msec}
[2024-12-03 15:29:33 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|14ecfa41-07fc-40d0-b50b-3fe95a840992.jpg |
|2694c9a6-a7b3-4800-ac73-0c853e16a152.jpg |
|-----------------------------------------|

[2024-12-03 15:29:33 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 7
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:29:33 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 15:29:33 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 6
 {executed in 0 msec}
[2024-12-03 15:29:33 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3c31d519-96b0-49bd-8657-d1eac4fb3fc1.jpg |
|-----------------------------------------|

[2024-12-03 15:29:33 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 6
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 15:29:33 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 15:29:34 WARN http-nio-8080-exec-1] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.bind.MissingServletRequestParameterException: Required request parameter 'size' for method parameter type Integer is not present]
[2024-12-03 15:30:16 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-03 15:30:16 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-03 15:30:18 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 6628 (D:\Students\jang jin seong\GreenGramVer2\build\classes\java\main started by Administrator in D:\Students\jang jin seong\GreenGramVer2)
[2024-12-03 15:30:18 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-03 15:30:18 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-03 15:30:18 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-03 15:30:18 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-03 15:30:18 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-03 15:30:18 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-03 15:30:18 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-03 15:30:18 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-03 15:30:18 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 785 ms
[2024-12-03 15:30:18 INFO restartedMain] [com.green.greengramver2.common.MyFileUtils] MFU 생성자: D:\Students\jang jin seong\download\greengram_ver2
[2024-12-03 15:30:19 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-03 15:30:19 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-03 15:30:19 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-03 15:30:19 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-03 15:30:19 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Started GreenGramVer2Application in 1.652 seconds (process running for 2.013)
[2024-12-03 15:30:21 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-03 15:30:21 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-03 15:30:21 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-03 15:30:21 INFO http-nio-8080-exec-9] [com.green.greengramver2.feed.model.FeedGetReq] FeedGetReq 1,null,1
[2024-12-03 15:30:21 INFO http-nio-8080-exec-9] [com.green.greengramver2.feed.FeedController] feedC getFeedList p: FeedGetReq(super=Paging(page=1, size=20, sIdx=0), signedUserId=1)
[2024-12-03 15:30:21 INFO http-nio-8080-exec-9] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-03 15:30:21 INFO http-nio-8080-exec-9] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@4af9c757
[2024-12-03 15:30:21 INFO http-nio-8080-exec-9] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-03 15:30:21 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, writer_user_id AS writerUserId,
        if(nick_name IS NULL , uid, nick_name) AS writerNm,
        pic AS writerPic, contents, location, a.created_at AS createdAt,
        if(c.feed_id IS NULL ,0 , 1) AS isLike
        FROM feed A
        JOIN user B
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c
        ON a.feed_id = c.feed_id
        AND c.user_id = 1
        ORDER BY a.feed_id DESC
        LIMIT 0,20
 {executed in 0 msec}
[2024-12-03 15:30:21 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|feed_id |writer_user_id |writernm |pic                                      |contents     |location |created_at          |islike |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|27      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |I am panguin |남극       |2024-11-29 17:07:59 |0      |
|26      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |I am panguin |남극       |2024-11-29 16:46:01 |0      |
|25      |5              |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |4123         |213      |2024-11-29 16:32:31 |0      |
|24      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |31231        |123      |2024-11-29 16:01:53 |0      |
|23      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |4754         |444      |2024-11-29 16:00:03 |0      |
|22      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |aaa          |aa       |2024-11-29 15:58:25 |0      |
|14      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:51:21 |1      |
|13      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:51:14 |1      |
|12      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:42:17 |1      |
|11      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |123          |33123    |2024-11-29 10:42:01 |0      |
|9       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |21123        |3        |2024-11-29 10:37:22 |0      |
|7       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-28 17:20:59 |1      |
|6       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |             |         |2024-11-28 17:15:01 |0      |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|

[2024-12-03 15:30:21 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 27
 {executed in 1 msec}
[2024-12-03 15:30:21 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5a0d637a-00c7-441f-a9fa-c0dc68af2602.jpg |
|-----------------------------------------|

[2024-12-03 15:30:21 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 27
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 15:30:21 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|1       |42              |6       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |41              |5       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |40              |4       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |37              |3       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-03 15:30:21 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 26
 {executed in 0 msec}
[2024-12-03 15:30:21 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3e5fe979-fe9c-4ed6-9ad7-c1dbf4f2538f.jpg |
|-----------------------------------------|

[2024-12-03 15:30:21 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 26
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:30:21 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|1       |9               |s       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|5       |8               |123     |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-03 15:30:21 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 25
 {executed in 0 msec}
[2024-12-03 15:30:21 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|8213634a-99df-42d8-963e-87bc120cc8a7.jpg |
|-----------------------------------------|

[2024-12-03 15:30:21 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 25
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:30:21 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 15:30:21 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 24
 {executed in 0 msec}
[2024-12-03 15:30:21 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|dfe6f2c1-3753-4a6a-aff4-0de7fa2786b8.jpg |
|-----------------------------------------|

[2024-12-03 15:30:21 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 24
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 15:30:21 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 15:30:21 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 23
 {executed in 0 msec}
[2024-12-03 15:30:21 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f3e6375d-35d8-4a4a-a976-26ca5c6abaac.jpg |
|-----------------------------------------|

[2024-12-03 15:30:21 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 23
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:30:21 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 15:30:21 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 22
 {executed in 0 msec}
[2024-12-03 15:30:21 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e97360ca-fe79-48c3-acaa-cd71042a0a78.tif |
|-----------------------------------------|

[2024-12-03 15:30:21 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 22
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:30:21 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 15:30:21 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 14
 {executed in 0 msec}
[2024-12-03 15:30:21 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a3709fe6-3e0d-4f04-8cef-1cc328c4fc0c.jpg |
|ada457b9-68aa-4a78-b0c8-c5035af844e2.jpg |
|-----------------------------------------|

[2024-12-03 15:30:21 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 14
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 15:30:21 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 15:30:21 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 13
 {executed in 0 msec}
[2024-12-03 15:30:21 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6fe5de58-57ef-47e7-80c7-49c0506ca143.jpg |
|920ca8e8-5dc2-4844-aa7f-d7782e94d380.jpg |
|-----------------------------------------|

[2024-12-03 15:30:21 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 13
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 15:30:21 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 15:30:21 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 12
 {executed in 0 msec}
[2024-12-03 15:30:21 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|84e77be4-2b62-4f40-8f8b-0803e1080449.jpg |
|84f31709-40aa-40eb-a7e7-da0219067927.jpg |
|-----------------------------------------|

[2024-12-03 15:30:21 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 12
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:30:21 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 15:30:21 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 11
 {executed in 0 msec}
[2024-12-03 15:30:21 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3fc51a83-46ea-43ca-a85b-6fad4794a2bd.jpg |
|49906eb9-a412-4428-a629-baccbe152c75.jpg |
|-----------------------------------------|

[2024-12-03 15:30:21 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 11
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 15:30:21 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 15:30:21 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 9
 {executed in 0 msec}
[2024-12-03 15:30:21 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|34669219-c5d3-4d84-a277-fd8c2b8bca4f.jpg |
|f1ed44ba-1254-4232-9a0d-65037abe1e9c.jpg |
|-----------------------------------------|

[2024-12-03 15:30:21 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 9
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:30:21 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 15:30:21 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 7
 {executed in 0 msec}
[2024-12-03 15:30:21 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|14ecfa41-07fc-40d0-b50b-3fe95a840992.jpg |
|2694c9a6-a7b3-4800-ac73-0c853e16a152.jpg |
|-----------------------------------------|

[2024-12-03 15:30:21 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 7
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:30:21 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 15:30:21 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 6
 {executed in 0 msec}
[2024-12-03 15:30:21 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3c31d519-96b0-49bd-8657-d1eac4fb3fc1.jpg |
|-----------------------------------------|

[2024-12-03 15:30:21 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 6
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:30:21 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 15:30:23 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 27
        ORDER BY feed_comment_id DESC
        LIMIT 3, 21
 {executed in 1 msec}
[2024-12-03 15:30:23 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|1       |37              |3       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |36              |2       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |35              |1       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |34              |20      |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |30              |16      |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |29              |15      |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |28              |14      |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |27              |13      |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |26              |12      |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |25              |11      |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |24              |10      |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |23              |9       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |22              |8       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |21              |7       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |20              |6       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |19              |5       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |18              |4       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |17              |3       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |16              |2       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |15              |1       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|5       |7               |2       |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-03 15:30:23 INFO http-nio-8080-exec-1] [com.green.greengramver2.feed.comment.FeedCommentService] res: FeedCommentGetRes(MoreComment=true, commentList=[FeedCommentDto(writerUserId=1, feedCommentId=37, comment=3, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=36, comment=2, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=35, comment=1, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=34, comment=20, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=30, comment=16, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=29, comment=15, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=28, comment=14, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=27, comment=13, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=26, comment=12, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=25, comment=11, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=24, comment=10, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=23, comment=9, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=22, comment=8, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=21, comment=7, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=20, comment=6, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=19, comment=5, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=18, comment=4, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=17, comment=3, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=16, comment=2, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=15, comment=1, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg)])
[2024-12-03 15:31:26 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
[2024-12-03 15:31:26 INFO Thread-5] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-03 15:31:26 INFO Thread-5] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-03 15:31:26 INFO Thread-5] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-03 15:31:26 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 6628 (D:\Students\jang jin seong\GreenGramVer2\build\classes\java\main started by Administrator in D:\Students\jang jin seong\GreenGramVer2)
[2024-12-03 15:31:26 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-03 15:31:26 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-03 15:31:26 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-03 15:31:26 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-03 15:31:26 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-03 15:31:26 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-03 15:31:26 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 195 ms
[2024-12-03 15:31:26 INFO restartedMain] [com.green.greengramver2.common.MyFileUtils] MFU 생성자: D:\Students\jang jin seong\download\greengram_ver2
[2024-12-03 15:31:26 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-03 15:31:26 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-03 15:31:26 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-03 15:31:26 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-03 15:31:26 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Started GreenGramVer2Application in 0.337 seconds (process running for 69.437)
[2024-12-03 15:31:26 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-03 15:31:36 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
[2024-12-03 15:31:36 INFO Thread-7] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-03 15:31:36 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 6628 (D:\Students\jang jin seong\GreenGramVer2\build\classes\java\main started by Administrator in D:\Students\jang jin seong\GreenGramVer2)
[2024-12-03 15:31:36 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-03 15:31:36 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-03 15:31:36 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-03 15:31:36 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-03 15:31:36 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-03 15:31:36 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-03 15:31:36 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 194 ms
[2024-12-03 15:31:36 INFO restartedMain] [com.green.greengramver2.common.MyFileUtils] MFU 생성자: D:\Students\jang jin seong\download\greengram_ver2
[2024-12-03 15:31:36 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-03 15:31:36 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-03 15:31:36 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-03 15:31:36 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-03 15:31:36 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Started GreenGramVer2Application in 0.317 seconds (process running for 79.392)
[2024-12-03 15:31:36 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-03 15:31:37 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-03 15:31:37 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-03 15:31:37 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 0 ms
[2024-12-03 15:31:37 INFO http-nio-8080-exec-9] [com.green.greengramver2.feed.model.FeedGetReq] FeedGetReq 1,null,1
[2024-12-03 15:31:37 INFO http-nio-8080-exec-9] [com.green.greengramver2.feed.FeedController] feedC getFeedList p: FeedGetReq(super=Paging(page=1, size=20, sIdx=0), signedUserId=1)
[2024-12-03 15:31:37 INFO http-nio-8080-exec-9] [com.zaxxer.hikari.HikariDataSource] HikariPool-2 - Starting...
[2024-12-03 15:31:37 INFO http-nio-8080-exec-9] [com.zaxxer.hikari.pool.HikariPool] HikariPool-2 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@4dc4f6e7
[2024-12-03 15:31:37 INFO http-nio-8080-exec-9] [com.zaxxer.hikari.HikariDataSource] HikariPool-2 - Start completed.
[2024-12-03 15:31:37 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT a.feed_id AS feedId, writer_user_id AS writerUserId,
        if(nick_name IS NULL , uid, nick_name) AS writerNm,
        pic AS writerPic, contents, location, a.created_at AS createdAt,
        if(c.feed_id IS NULL ,0 , 1) AS isLike
        FROM feed A
        JOIN user B
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c
        ON a.feed_id = c.feed_id
        AND c.user_id = 1
        ORDER BY a.feed_id DESC
        LIMIT 0,20
 {executed in 0 msec}
[2024-12-03 15:31:37 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|feed_id |writer_user_id |writernm |pic                                      |contents     |location |created_at          |islike |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|27      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |I am panguin |남극       |2024-11-29 17:07:59 |0      |
|26      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |I am panguin |남극       |2024-11-29 16:46:01 |0      |
|25      |5              |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |4123         |213      |2024-11-29 16:32:31 |0      |
|24      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |31231        |123      |2024-11-29 16:01:53 |0      |
|23      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |4754         |444      |2024-11-29 16:00:03 |0      |
|22      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |aaa          |aa       |2024-11-29 15:58:25 |0      |
|14      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:51:21 |1      |
|13      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:51:14 |1      |
|12      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:42:17 |1      |
|11      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |123          |33123    |2024-11-29 10:42:01 |0      |
|9       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |21123        |3        |2024-11-29 10:37:22 |0      |
|7       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-28 17:20:59 |1      |
|6       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |             |         |2024-11-28 17:15:01 |0      |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|

[2024-12-03 15:31:37 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
        from feed_pics
        where feed_id = 27
 {executed in 0 msec}
[2024-12-03 15:31:37 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5a0d637a-00c7-441f-a9fa-c0dc68af2602.jpg |
|-----------------------------------------|

[2024-12-03 15:31:37 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 27
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 15:31:37 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|1       |42              |6       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |41              |5       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |40              |4       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |37              |3       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-03 15:31:37 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
        from feed_pics
        where feed_id = 26
 {executed in 1 msec}
[2024-12-03 15:31:37 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3e5fe979-fe9c-4ed6-9ad7-c1dbf4f2538f.jpg |
|-----------------------------------------|

[2024-12-03 15:31:37 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 26
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 15:31:37 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|1       |9               |s       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|5       |8               |123     |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-03 15:31:37 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
        from feed_pics
        where feed_id = 25
 {executed in 1 msec}
[2024-12-03 15:31:37 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|8213634a-99df-42d8-963e-87bc120cc8a7.jpg |
|-----------------------------------------|

[2024-12-03 15:31:37 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 25
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 15:31:37 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 15:31:37 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
        from feed_pics
        where feed_id = 24
 {executed in 1 msec}
[2024-12-03 15:31:37 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|dfe6f2c1-3753-4a6a-aff4-0de7fa2786b8.jpg |
|-----------------------------------------|

[2024-12-03 15:31:37 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 24
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 15:31:37 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 15:31:37 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
        from feed_pics
        where feed_id = 23
 {executed in 0 msec}
[2024-12-03 15:31:37 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f3e6375d-35d8-4a4a-a976-26ca5c6abaac.jpg |
|-----------------------------------------|

[2024-12-03 15:31:37 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 23
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:31:37 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 15:31:37 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
        from feed_pics
        where feed_id = 22
 {executed in 1 msec}
[2024-12-03 15:31:37 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e97360ca-fe79-48c3-acaa-cd71042a0a78.tif |
|-----------------------------------------|

[2024-12-03 15:31:37 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 22
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:31:37 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 15:31:37 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
        from feed_pics
        where feed_id = 14
 {executed in 0 msec}
[2024-12-03 15:31:37 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a3709fe6-3e0d-4f04-8cef-1cc328c4fc0c.jpg |
|ada457b9-68aa-4a78-b0c8-c5035af844e2.jpg |
|-----------------------------------------|

[2024-12-03 15:31:37 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 14
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:31:37 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 15:31:37 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
        from feed_pics
        where feed_id = 13
 {executed in 0 msec}
[2024-12-03 15:31:37 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6fe5de58-57ef-47e7-80c7-49c0506ca143.jpg |
|920ca8e8-5dc2-4844-aa7f-d7782e94d380.jpg |
|-----------------------------------------|

[2024-12-03 15:31:37 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 13
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:31:37 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 15:31:37 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
        from feed_pics
        where feed_id = 12
 {executed in 0 msec}
[2024-12-03 15:31:37 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|84e77be4-2b62-4f40-8f8b-0803e1080449.jpg |
|84f31709-40aa-40eb-a7e7-da0219067927.jpg |
|-----------------------------------------|

[2024-12-03 15:31:37 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 12
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 15:31:37 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 15:31:37 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
        from feed_pics
        where feed_id = 11
 {executed in 0 msec}
[2024-12-03 15:31:37 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3fc51a83-46ea-43ca-a85b-6fad4794a2bd.jpg |
|49906eb9-a412-4428-a629-baccbe152c75.jpg |
|-----------------------------------------|

[2024-12-03 15:31:37 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 11
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 15:31:37 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 15:31:37 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
        from feed_pics
        where feed_id = 9
 {executed in 1 msec}
[2024-12-03 15:31:37 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|34669219-c5d3-4d84-a277-fd8c2b8bca4f.jpg |
|f1ed44ba-1254-4232-9a0d-65037abe1e9c.jpg |
|-----------------------------------------|

[2024-12-03 15:31:37 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 9
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:31:37 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 15:31:37 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
        from feed_pics
        where feed_id = 7
 {executed in 0 msec}
[2024-12-03 15:31:37 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|14ecfa41-07fc-40d0-b50b-3fe95a840992.jpg |
|2694c9a6-a7b3-4800-ac73-0c853e16a152.jpg |
|-----------------------------------------|

[2024-12-03 15:31:37 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 7
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:31:37 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 15:31:37 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
        from feed_pics
        where feed_id = 6
 {executed in 1 msec}
[2024-12-03 15:31:37 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3c31d519-96b0-49bd-8657-d1eac4fb3fc1.jpg |
|-----------------------------------------|

[2024-12-03 15:31:37 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 6
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:31:37 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 15:31:40 ERRORhttp-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.IllegalStateException: Optional int parameter 'size' is present but cannot be translated into a null value due to being declared as a primitive type. Consider declaring it as object wrapper for the corresponding primitive type.] with root cause
java.lang.IllegalStateException: Optional int parameter 'size' is present but cannot be translated into a null value due to being declared as a primitive type. Consider declaring it as object wrapper for the corresponding primitive type.
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.handleNullValue(AbstractNamedValueMethodArgumentResolver.java:271)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:128)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:224)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:178)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-03 15:32:17 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-2 - Shutdown initiated...
[2024-12-03 15:32:17 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-2 - Shutdown completed.
[2024-12-03 15:32:19 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 6216 (D:\Students\jang jin seong\GreenGramVer2\build\classes\java\main started by Administrator in D:\Students\jang jin seong\GreenGramVer2)
[2024-12-03 15:32:19 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-03 15:32:19 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-03 15:32:19 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-03 15:32:20 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-03 15:32:20 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-03 15:32:20 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-03 15:32:20 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-03 15:32:20 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-03 15:32:20 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 767 ms
[2024-12-03 15:32:20 INFO restartedMain] [com.green.greengramver2.common.MyFileUtils] MFU 생성자: D:\Students\jang jin seong\download\greengram_ver2
[2024-12-03 15:32:20 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-03 15:32:20 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-03 15:32:20 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-03 15:32:20 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-03 15:32:20 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Started GreenGramVer2Application in 1.66 seconds (process running for 2.012)
[2024-12-03 15:32:24 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-03 15:32:24 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-03 15:32:24 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 0 ms
[2024-12-03 15:32:24 INFO http-nio-8080-exec-10] [com.green.greengramver2.feed.model.FeedGetReq] FeedGetReq 1,null,1
[2024-12-03 15:32:24 INFO http-nio-8080-exec-10] [com.green.greengramver2.feed.FeedController] feedC getFeedList p: FeedGetReq(super=Paging(page=1, size=20, sIdx=0), signedUserId=1)
[2024-12-03 15:32:24 INFO http-nio-8080-exec-10] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-03 15:32:24 INFO http-nio-8080-exec-10] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@5a806a3b
[2024-12-03 15:32:24 INFO http-nio-8080-exec-10] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-03 15:32:24 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, writer_user_id AS writerUserId,
        if(nick_name IS NULL , uid, nick_name) AS writerNm,
        pic AS writerPic, contents, location, a.created_at AS createdAt,
        if(c.feed_id IS NULL ,0 , 1) AS isLike
        FROM feed A
        JOIN user B
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c
        ON a.feed_id = c.feed_id
        AND c.user_id = 1
        ORDER BY a.feed_id DESC
        LIMIT 0,20
 {executed in 1 msec}
[2024-12-03 15:32:24 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|feed_id |writer_user_id |writernm |pic                                      |contents     |location |created_at          |islike |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|27      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |I am panguin |남극       |2024-11-29 17:07:59 |0      |
|26      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |I am panguin |남극       |2024-11-29 16:46:01 |0      |
|25      |5              |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |4123         |213      |2024-11-29 16:32:31 |0      |
|24      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |31231        |123      |2024-11-29 16:01:53 |0      |
|23      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |4754         |444      |2024-11-29 16:00:03 |0      |
|22      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |aaa          |aa       |2024-11-29 15:58:25 |0      |
|14      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:51:21 |1      |
|13      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:51:14 |1      |
|12      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:42:17 |1      |
|11      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |123          |33123    |2024-11-29 10:42:01 |0      |
|9       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |21123        |3        |2024-11-29 10:37:22 |0      |
|7       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-28 17:20:59 |1      |
|6       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |             |         |2024-11-28 17:15:01 |0      |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|

[2024-12-03 15:32:24 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 27
 {executed in 0 msec}
[2024-12-03 15:32:24 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5a0d637a-00c7-441f-a9fa-c0dc68af2602.jpg |
|-----------------------------------------|

[2024-12-03 15:32:24 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 27
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 15:32:24 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|1       |42              |6       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |41              |5       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |40              |4       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |37              |3       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-03 15:32:24 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 26
 {executed in 0 msec}
[2024-12-03 15:32:24 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3e5fe979-fe9c-4ed6-9ad7-c1dbf4f2538f.jpg |
|-----------------------------------------|

[2024-12-03 15:32:24 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 26
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:32:24 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|1       |9               |s       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|5       |8               |123     |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-03 15:32:24 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 25
 {executed in 0 msec}
[2024-12-03 15:32:24 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|8213634a-99df-42d8-963e-87bc120cc8a7.jpg |
|-----------------------------------------|

[2024-12-03 15:32:24 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 25
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 15:32:24 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 15:32:24 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 24
 {executed in 0 msec}
[2024-12-03 15:32:24 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|dfe6f2c1-3753-4a6a-aff4-0de7fa2786b8.jpg |
|-----------------------------------------|

[2024-12-03 15:32:24 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 24
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:32:24 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 15:32:24 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 23
 {executed in 0 msec}
[2024-12-03 15:32:24 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f3e6375d-35d8-4a4a-a976-26ca5c6abaac.jpg |
|-----------------------------------------|

[2024-12-03 15:32:24 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 23
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:32:24 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 15:32:24 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 22
 {executed in 0 msec}
[2024-12-03 15:32:24 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e97360ca-fe79-48c3-acaa-cd71042a0a78.tif |
|-----------------------------------------|

[2024-12-03 15:32:24 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 22
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:32:24 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 15:32:24 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 14
 {executed in 1 msec}
[2024-12-03 15:32:24 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a3709fe6-3e0d-4f04-8cef-1cc328c4fc0c.jpg |
|ada457b9-68aa-4a78-b0c8-c5035af844e2.jpg |
|-----------------------------------------|

[2024-12-03 15:32:24 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 14
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 15:32:24 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 15:32:24 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 13
 {executed in 1 msec}
[2024-12-03 15:32:24 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6fe5de58-57ef-47e7-80c7-49c0506ca143.jpg |
|920ca8e8-5dc2-4844-aa7f-d7782e94d380.jpg |
|-----------------------------------------|

[2024-12-03 15:32:24 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 13
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 15:32:24 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 15:32:24 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 12
 {executed in 0 msec}
[2024-12-03 15:32:24 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|84e77be4-2b62-4f40-8f8b-0803e1080449.jpg |
|84f31709-40aa-40eb-a7e7-da0219067927.jpg |
|-----------------------------------------|

[2024-12-03 15:32:24 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 12
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:32:24 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 15:32:24 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 11
 {executed in 0 msec}
[2024-12-03 15:32:24 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3fc51a83-46ea-43ca-a85b-6fad4794a2bd.jpg |
|49906eb9-a412-4428-a629-baccbe152c75.jpg |
|-----------------------------------------|

[2024-12-03 15:32:24 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 11
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:32:24 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 15:32:24 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 9
 {executed in 1 msec}
[2024-12-03 15:32:24 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|34669219-c5d3-4d84-a277-fd8c2b8bca4f.jpg |
|f1ed44ba-1254-4232-9a0d-65037abe1e9c.jpg |
|-----------------------------------------|

[2024-12-03 15:32:24 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 9
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:32:24 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 15:32:24 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 7
 {executed in 0 msec}
[2024-12-03 15:32:24 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|14ecfa41-07fc-40d0-b50b-3fe95a840992.jpg |
|2694c9a6-a7b3-4800-ac73-0c853e16a152.jpg |
|-----------------------------------------|

[2024-12-03 15:32:24 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 7
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:32:24 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 15:32:24 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 6
 {executed in 0 msec}
[2024-12-03 15:32:24 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3c31d519-96b0-49bd-8657-d1eac4fb3fc1.jpg |
|-----------------------------------------|

[2024-12-03 15:32:24 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 6
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:32:24 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 15:32:26 INFO http-nio-8080-exec-1] [com.green.greengramver2.feed.comment.FeedCommentController] feedCommentGet : FeedCommentGetReq(feedId=27, size=21, sIdx=3)
[2024-12-03 15:32:26 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 27
        ORDER BY feed_comment_id DESC
        LIMIT 3, 21
 {executed in 0 msec}
[2024-12-03 15:32:26 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|1       |37              |3       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |36              |2       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |35              |1       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |34              |20      |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |30              |16      |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |29              |15      |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |28              |14      |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |27              |13      |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |26              |12      |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |25              |11      |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |24              |10      |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |23              |9       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |22              |8       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |21              |7       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |20              |6       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |19              |5       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |18              |4       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |17              |3       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |16              |2       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |15              |1       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|5       |7               |2       |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-03 15:32:26 INFO http-nio-8080-exec-1] [com.green.greengramver2.feed.comment.FeedCommentService] res: FeedCommentGetRes(MoreComment=true, commentList=[FeedCommentDto(writerUserId=1, feedCommentId=37, comment=3, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=36, comment=2, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=35, comment=1, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=34, comment=20, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=30, comment=16, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=29, comment=15, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=28, comment=14, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=27, comment=13, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=26, comment=12, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=25, comment=11, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=24, comment=10, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=23, comment=9, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=22, comment=8, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=21, comment=7, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=20, comment=6, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=19, comment=5, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=18, comment=4, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=17, comment=3, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=16, comment=2, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=15, comment=1, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg)])
[2024-12-03 15:32:26 INFO http-nio-8080-exec-1] [com.green.greengramver2.feed.comment.FeedCommentController] feedCommentGet : FeedCommentGetRes(MoreComment=true, commentList=[FeedCommentDto(writerUserId=1, feedCommentId=37, comment=3, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=36, comment=2, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=35, comment=1, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=34, comment=20, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=30, comment=16, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=29, comment=15, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=28, comment=14, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=27, comment=13, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=26, comment=12, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=25, comment=11, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=24, comment=10, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=23, comment=9, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=22, comment=8, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=21, comment=7, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=20, comment=6, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=19, comment=5, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=18, comment=4, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=17, comment=3, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=16, comment=2, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=15, comment=1, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg)])
[2024-12-03 15:32:53 INFO http-nio-8080-exec-10] [com.green.greengramver2.feed.model.FeedGetReq] FeedGetReq 1,null,1
[2024-12-03 15:32:53 INFO http-nio-8080-exec-10] [com.green.greengramver2.feed.FeedController] feedC getFeedList p: FeedGetReq(super=Paging(page=1, size=20, sIdx=0), signedUserId=1)
[2024-12-03 15:32:53 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, writer_user_id AS writerUserId,
        if(nick_name IS NULL , uid, nick_name) AS writerNm,
        pic AS writerPic, contents, location, a.created_at AS createdAt,
        if(c.feed_id IS NULL ,0 , 1) AS isLike
        FROM feed A
        JOIN user B
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c
        ON a.feed_id = c.feed_id
        AND c.user_id = 1
        ORDER BY a.feed_id DESC
        LIMIT 0,20
 {executed in 0 msec}
[2024-12-03 15:32:53 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|feed_id |writer_user_id |writernm |pic                                      |contents     |location |created_at          |islike |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|27      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |I am panguin |남극       |2024-11-29 17:07:59 |0      |
|26      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |I am panguin |남극       |2024-11-29 16:46:01 |0      |
|25      |5              |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |4123         |213      |2024-11-29 16:32:31 |0      |
|24      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |31231        |123      |2024-11-29 16:01:53 |0      |
|23      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |4754         |444      |2024-11-29 16:00:03 |0      |
|22      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |aaa          |aa       |2024-11-29 15:58:25 |0      |
|14      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:51:21 |1      |
|13      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:51:14 |1      |
|12      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:42:17 |1      |
|11      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |123          |33123    |2024-11-29 10:42:01 |0      |
|9       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |21123        |3        |2024-11-29 10:37:22 |0      |
|7       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-28 17:20:59 |1      |
|6       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |             |         |2024-11-28 17:15:01 |0      |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|

[2024-12-03 15:32:53 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 27
 {executed in 0 msec}
[2024-12-03 15:32:53 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5a0d637a-00c7-441f-a9fa-c0dc68af2602.jpg |
|-----------------------------------------|

[2024-12-03 15:32:53 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 27
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:32:53 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|1       |42              |6       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |41              |5       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |40              |4       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |37              |3       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-03 15:32:53 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 26
 {executed in 0 msec}
[2024-12-03 15:32:53 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3e5fe979-fe9c-4ed6-9ad7-c1dbf4f2538f.jpg |
|-----------------------------------------|

[2024-12-03 15:32:53 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 26
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 15:32:53 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|1       |9               |s       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|5       |8               |123     |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-03 15:32:53 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 25
 {executed in 1 msec}
[2024-12-03 15:32:53 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|8213634a-99df-42d8-963e-87bc120cc8a7.jpg |
|-----------------------------------------|

[2024-12-03 15:32:53 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 25
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:32:53 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 15:32:53 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 24
 {executed in 0 msec}
[2024-12-03 15:32:53 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|dfe6f2c1-3753-4a6a-aff4-0de7fa2786b8.jpg |
|-----------------------------------------|

[2024-12-03 15:32:53 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 24
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:32:53 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 15:32:53 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 23
 {executed in 0 msec}
[2024-12-03 15:32:53 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f3e6375d-35d8-4a4a-a976-26ca5c6abaac.jpg |
|-----------------------------------------|

[2024-12-03 15:32:53 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 23
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:32:53 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 15:32:53 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 22
 {executed in 0 msec}
[2024-12-03 15:32:53 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e97360ca-fe79-48c3-acaa-cd71042a0a78.tif |
|-----------------------------------------|

[2024-12-03 15:32:53 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 22
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:32:53 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 15:32:53 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 14
 {executed in 0 msec}
[2024-12-03 15:32:53 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a3709fe6-3e0d-4f04-8cef-1cc328c4fc0c.jpg |
|ada457b9-68aa-4a78-b0c8-c5035af844e2.jpg |
|-----------------------------------------|

[2024-12-03 15:32:53 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 14
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:32:53 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 15:32:53 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 13
 {executed in 0 msec}
[2024-12-03 15:32:53 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6fe5de58-57ef-47e7-80c7-49c0506ca143.jpg |
|920ca8e8-5dc2-4844-aa7f-d7782e94d380.jpg |
|-----------------------------------------|

[2024-12-03 15:32:53 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 13
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:32:53 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 15:32:53 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 12
 {executed in 0 msec}
[2024-12-03 15:32:53 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|84e77be4-2b62-4f40-8f8b-0803e1080449.jpg |
|84f31709-40aa-40eb-a7e7-da0219067927.jpg |
|-----------------------------------------|

[2024-12-03 15:32:53 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 12
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:32:53 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 15:32:53 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 11
 {executed in 0 msec}
[2024-12-03 15:32:53 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3fc51a83-46ea-43ca-a85b-6fad4794a2bd.jpg |
|49906eb9-a412-4428-a629-baccbe152c75.jpg |
|-----------------------------------------|

[2024-12-03 15:32:53 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 11
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:32:53 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 15:32:53 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 9
 {executed in 0 msec}
[2024-12-03 15:32:53 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|34669219-c5d3-4d84-a277-fd8c2b8bca4f.jpg |
|f1ed44ba-1254-4232-9a0d-65037abe1e9c.jpg |
|-----------------------------------------|

[2024-12-03 15:32:53 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 9
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:32:53 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 15:32:53 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 7
 {executed in 0 msec}
[2024-12-03 15:32:53 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|14ecfa41-07fc-40d0-b50b-3fe95a840992.jpg |
|2694c9a6-a7b3-4800-ac73-0c853e16a152.jpg |
|-----------------------------------------|

[2024-12-03 15:32:53 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 7
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:32:53 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 15:32:53 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 6
 {executed in 0 msec}
[2024-12-03 15:32:53 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3c31d519-96b0-49bd-8657-d1eac4fb3fc1.jpg |
|-----------------------------------------|

[2024-12-03 15:32:53 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 6
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:32:53 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-03 15:32:57 INFO http-nio-8080-exec-2] [com.green.greengramver2.feed.comment.FeedCommentController] delFeedComment FeedCommentDelReq(feedCommentId=42, signedUserId=1)
[2024-12-03 15:32:57 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. delete
        from feed_comments
        where user_id = 1 and feed_comment_id = 42
 {executed in 2 msec}
[2024-12-03 15:32:57 INFO http-nio-8080-exec-2] [com.green.greengramver2.feed.comment.FeedCommentController] res 1
[2024-12-03 15:32:59 INFO http-nio-8080-exec-4] [com.green.greengramver2.feed.comment.FeedCommentController] feedCommentGet : FeedCommentGetReq(feedId=27, size=21, sIdx=2)
[2024-12-03 15:32:59 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 27
        ORDER BY feed_comment_id DESC
        LIMIT 2, 21
 {executed in 0 msec}
[2024-12-03 15:32:59 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|1       |37              |3       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |36              |2       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |35              |1       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |34              |20      |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |30              |16      |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |29              |15      |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |28              |14      |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |27              |13      |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |26              |12      |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |25              |11      |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |24              |10      |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |23              |9       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |22              |8       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |21              |7       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |20              |6       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |19              |5       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |18              |4       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |17              |3       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |16              |2       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|1       |15              |1       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|5       |7               |2       |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-03 15:32:59 INFO http-nio-8080-exec-4] [com.green.greengramver2.feed.comment.FeedCommentService] res: FeedCommentGetRes(MoreComment=true, commentList=[FeedCommentDto(writerUserId=1, feedCommentId=37, comment=3, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=36, comment=2, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=35, comment=1, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=34, comment=20, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=30, comment=16, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=29, comment=15, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=28, comment=14, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=27, comment=13, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=26, comment=12, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=25, comment=11, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=24, comment=10, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=23, comment=9, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=22, comment=8, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=21, comment=7, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=20, comment=6, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=19, comment=5, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=18, comment=4, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=17, comment=3, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=16, comment=2, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=15, comment=1, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg)])
[2024-12-03 15:32:59 INFO http-nio-8080-exec-4] [com.green.greengramver2.feed.comment.FeedCommentController] feedCommentGet : FeedCommentGetRes(MoreComment=true, commentList=[FeedCommentDto(writerUserId=1, feedCommentId=37, comment=3, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=36, comment=2, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=35, comment=1, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=34, comment=20, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=30, comment=16, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=29, comment=15, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=28, comment=14, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=27, comment=13, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=26, comment=12, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=25, comment=11, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=24, comment=10, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=23, comment=9, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=22, comment=8, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=21, comment=7, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=20, comment=6, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=19, comment=5, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=18, comment=4, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=17, comment=3, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=16, comment=2, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg), FeedCommentDto(writerUserId=1, feedCommentId=15, comment=1, writerNm=33, writerPic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg)])
[2024-12-03 15:47:14 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-03 15:47:14 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
