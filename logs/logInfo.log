[2024-12-02 12:03:55 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 11404 (D:\Students\jang jin seong\GreenGramVer2\build\classes\java\main started by Administrator in D:\Students\jang jin seong\GreenGramVer2)
[2024-12-02 12:03:55 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-02 12:03:55 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-02 12:03:55 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-02 12:03:56 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-02 12:03:56 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-02 12:03:56 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-02 12:03:56 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-02 12:03:56 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-02 12:03:56 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 893 ms
[2024-12-02 12:03:56 INFO restartedMain] [com.green.greengramver2.common.MyFileUtils] MFU 생성자: D:\Students\jang jin seong\download\greengram_ver2
[2024-12-02 12:03:56 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-02 12:03:56 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-02 12:03:56 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-02 12:03:56 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-02 12:03:56 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Started GreenGramVer2Application in 1.9 seconds (process running for 2.352)
[2024-12-02 12:04:06 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-02 12:04:06 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-02 12:04:06 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-02 12:04:06 INFO http-nio-8080-exec-6] [com.green.greengramver2.feed.model.FeedGetReq] FeedGetReq 1,null,5
[2024-12-02 12:04:06 INFO http-nio-8080-exec-6] [com.green.greengramver2.feed.FeedController] feedC getFeedList p: FeedGetReq(super=Paging(page=1, size=20, sIdx=0), signedUserId=5)
[2024-12-02 12:04:06 INFO http-nio-8080-exec-6] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-02 12:04:06 INFO http-nio-8080-exec-6] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@4b698863
[2024-12-02 12:04:06 INFO http-nio-8080-exec-6] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-02 12:04:06 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, writer_user_id AS writerUserId,
        if(nick_name IS NULL , uid, nick_name) AS writerNm,
        pic AS writerPic, contents, location, a.created_at AS createdAt,
        if(c.feed_id IS NULL ,0 , 1) AS isLike
        FROM feed A
        JOIN user B
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c
        ON a.feed_id = c.feed_id
        AND c.user_id = 5
        ORDER BY a.feed_id DESC
        LIMIT 0,20
 {executed in 2 msec}
[2024-12-02 12:04:06 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|feed_id |writer_user_id |writernm |pic                                      |contents     |location |created_at          |islike |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|27      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |I am panguin |남극       |2024-11-29 17:07:59 |0      |
|26      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |I am panguin |남극       |2024-11-29 16:46:01 |0      |
|25      |5              |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |4123         |213      |2024-11-29 16:32:31 |0      |
|24      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |31231        |123      |2024-11-29 16:01:53 |0      |
|23      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |4754         |444      |2024-11-29 16:00:03 |0      |
|22      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |aaa          |aa       |2024-11-29 15:58:25 |0      |
|14      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:51:21 |0      |
|13      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:51:14 |0      |
|12      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:42:17 |0      |
|11      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |123          |33123    |2024-11-29 10:42:01 |0      |
|9       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |21123        |3        |2024-11-29 10:37:22 |0      |
|7       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-28 17:20:59 |0      |
|6       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |             |         |2024-11-28 17:15:01 |0      |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|

[2024-12-02 12:04:06 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 27
 {executed in 0 msec}
[2024-12-02 12:04:06 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5a0d637a-00c7-441f-a9fa-c0dc68af2602.jpg |
|-----------------------------------------|

[2024-12-02 12:04:06 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 26
 {executed in 0 msec}
[2024-12-02 12:04:06 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3e5fe979-fe9c-4ed6-9ad7-c1dbf4f2538f.jpg |
|-----------------------------------------|

[2024-12-02 12:04:06 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 25
 {executed in 0 msec}
[2024-12-02 12:04:06 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|8213634a-99df-42d8-963e-87bc120cc8a7.jpg |
|-----------------------------------------|

[2024-12-02 12:04:06 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 24
 {executed in 0 msec}
[2024-12-02 12:04:06 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|dfe6f2c1-3753-4a6a-aff4-0de7fa2786b8.jpg |
|-----------------------------------------|

[2024-12-02 12:04:06 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 23
 {executed in 0 msec}
[2024-12-02 12:04:06 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f3e6375d-35d8-4a4a-a976-26ca5c6abaac.jpg |
|-----------------------------------------|

[2024-12-02 12:04:06 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 22
 {executed in 1 msec}
[2024-12-02 12:04:06 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e97360ca-fe79-48c3-acaa-cd71042a0a78.tif |
|-----------------------------------------|

[2024-12-02 12:04:06 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 14
 {executed in 0 msec}
[2024-12-02 12:04:06 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a3709fe6-3e0d-4f04-8cef-1cc328c4fc0c.jpg |
|ada457b9-68aa-4a78-b0c8-c5035af844e2.jpg |
|-----------------------------------------|

[2024-12-02 12:04:06 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 13
 {executed in 0 msec}
[2024-12-02 12:04:06 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6fe5de58-57ef-47e7-80c7-49c0506ca143.jpg |
|920ca8e8-5dc2-4844-aa7f-d7782e94d380.jpg |
|-----------------------------------------|

[2024-12-02 12:04:06 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 12
 {executed in 0 msec}
[2024-12-02 12:04:06 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|84e77be4-2b62-4f40-8f8b-0803e1080449.jpg |
|84f31709-40aa-40eb-a7e7-da0219067927.jpg |
|-----------------------------------------|

[2024-12-02 12:04:06 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 11
 {executed in 1 msec}
[2024-12-02 12:04:06 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3fc51a83-46ea-43ca-a85b-6fad4794a2bd.jpg |
|49906eb9-a412-4428-a629-baccbe152c75.jpg |
|-----------------------------------------|

[2024-12-02 12:04:06 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 9
 {executed in 1 msec}
[2024-12-02 12:04:06 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|34669219-c5d3-4d84-a277-fd8c2b8bca4f.jpg |
|f1ed44ba-1254-4232-9a0d-65037abe1e9c.jpg |
|-----------------------------------------|

[2024-12-02 12:04:06 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 7
 {executed in 0 msec}
[2024-12-02 12:04:06 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|14ecfa41-07fc-40d0-b50b-3fe95a840992.jpg |
|2694c9a6-a7b3-4800-ac73-0c853e16a152.jpg |
|-----------------------------------------|

[2024-12-02 12:04:06 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 6
 {executed in 0 msec}
[2024-12-02 12:04:06 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3c31d519-96b0-49bd-8657-d1eac4fb3fc1.jpg |
|-----------------------------------------|

[2024-12-02 12:05:05 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-02 12:05:05 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-02 12:05:07 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 11456 (D:\Students\jang jin seong\GreenGramVer2\build\classes\java\main started by Administrator in D:\Students\jang jin seong\GreenGramVer2)
[2024-12-02 12:05:07 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-02 12:05:07 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-02 12:05:07 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-02 12:05:08 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-02 12:05:08 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-02 12:05:08 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-02 12:05:08 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-02 12:05:08 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-02 12:05:08 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 751 ms
[2024-12-02 12:05:08 INFO restartedMain] [com.green.greengramver2.common.MyFileUtils] MFU 생성자: D:\Students\jang jin seong\download\greengram_ver2
[2024-12-02 12:05:08 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-02 12:05:08 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-02 12:05:08 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-02 12:05:08 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-02 12:05:08 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Started GreenGramVer2Application in 1.583 seconds (process running for 1.939)
[2024-12-02 12:05:10 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-02 12:05:10 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-02 12:05:10 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-02 12:05:10 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-02 12:05:11 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@7f10ea5d
[2024-12-02 12:05:11 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-02 12:05:11 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. insert into feed_comments
        set user_id = 5,
            feed_id = 27,
            `comment` = 'ㄷ'
 {executed in 2 msec}
[2024-12-02 12:05:11 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: insert into feed_comments
        set user_id = 5,
            feed_id = 27,
            `comment` = 'ㄷ'
 {executed in 1 msec}
[2024-12-02 12:05:11 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|1         |
|----------|

[2024-12-02 12:08:38 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-02 12:08:38 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-02 12:08:40 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 2608 (D:\Students\jang jin seong\GreenGramVer2\build\classes\java\main started by Administrator in D:\Students\jang jin seong\GreenGramVer2)
[2024-12-02 12:08:40 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-02 12:08:40 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-02 12:08:40 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-02 12:08:41 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-02 12:08:41 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-02 12:08:41 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-02 12:08:41 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-02 12:08:41 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-02 12:08:41 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 750 ms
[2024-12-02 12:08:41 INFO restartedMain] [com.green.greengramver2.common.MyFileUtils] MFU 생성자: D:\Students\jang jin seong\download\greengram_ver2
[2024-12-02 12:08:41 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-02 12:08:42 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-02 12:08:42 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-02 12:08:42 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-02 12:08:42 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Started GreenGramVer2Application in 1.592 seconds (process running for 1.951)
[2024-12-02 12:08:49 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-02 12:08:49 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-02 12:08:49 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-02 12:08:50 INFO http-nio-8080-exec-1] [com.green.greengramver2.feed.comment.FeedCommentController] feedCommentP FeedCommentPostReq(feedId=27, userId=5, comment=귀엽긴해, feedCommentId=0)
[2024-12-02 12:08:50 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-02 12:08:50 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@14f0e0c4
[2024-12-02 12:08:50 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-02 12:08:50 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. insert into feed_comments
        set user_id = 5,
            feed_id = 27,
            `comment` = '귀엽긴해'
 {executed in 2 msec}
[2024-12-02 12:08:50 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: insert into feed_comments
        set user_id = 5,
            feed_id = 27,
            `comment` = '귀엽긴해'
 {executed in 0 msec}
[2024-12-02 12:08:50 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|2         |
|----------|

[2024-12-02 12:09:46 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-02 12:09:46 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-02 12:09:48 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 11156 (D:\Students\jang jin seong\GreenGramVer2\build\classes\java\main started by Administrator in D:\Students\jang jin seong\GreenGramVer2)
[2024-12-02 12:09:48 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-02 12:09:48 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-02 12:09:48 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-02 12:09:49 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-02 12:09:49 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-02 12:09:49 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-02 12:09:49 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-02 12:09:49 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-02 12:09:49 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 828 ms
[2024-12-02 12:09:49 INFO restartedMain] [com.green.greengramver2.common.MyFileUtils] MFU 생성자: D:\Students\jang jin seong\download\greengram_ver2
[2024-12-02 12:09:49 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-02 12:09:50 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-02 12:09:50 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-02 12:09:50 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-02 12:09:50 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Started GreenGramVer2Application in 1.742 seconds (process running for 2.441)
[2024-12-02 12:10:01 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-02 12:10:01 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-02 12:10:01 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-02 12:10:36 INFO http-nio-8080-exec-1] [com.green.greengramver2.feed.comment.FeedCommentController] feedCommentP FeedCommentPostReq(feedId=27, userId=5, comment=왜 로그에 두번이, feedCommentId=0)
[2024-12-02 12:10:58 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-02 12:10:58 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@e62d252
[2024-12-02 12:10:58 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-02 12:10:58 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. insert into feed_comments
        set user_id = 5,
            feed_id = 27,
            `comment` = '왜 로그에 두번이'
 {executed in 6 msec}
[2024-12-02 12:10:58 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: insert into feed_comments
        set user_id = 5,
            feed_id = 27,
            `comment` = '왜 로그에 두번이'
 {executed in 0 msec}
[2024-12-02 12:10:58 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|3         |
|----------|

[2024-12-02 12:12:36 INFO http-nio-8080-exec-10] [com.green.greengramver2.feed.comment.FeedCommentController] feedCommentP FeedCommentPostReq(feedId=27, userId=5, comment=ㅇ, feedCommentId=0)
[2024-12-02 12:12:36 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. insert into feed_comments
        set user_id = 5,
            feed_id = 27,
            `comment` = 'ㅇ'
 {executed in 6 msec}
[2024-12-02 12:12:36 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: insert into feed_comments
        set user_id = 5,
            feed_id = 27,
            `comment` = 'ㅇ'
 {executed in 0 msec}
[2024-12-02 12:12:36 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|4         |
|----------|

[2024-12-02 12:14:31 INFO http-nio-8080-exec-10] [com.green.greengramver2.feed.comment.FeedCommentController] feedCommentP FeedCommentPostReq(feedId=27, userId=5, comment=ㅇ, feedCommentId=0)
[2024-12-02 12:14:31 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. insert into feed_comments
        set user_id = 5,
            feed_id = 27,
            `comment` = 'ㅇ'
 {executed in 6 msec}
[2024-12-02 12:14:31 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: insert into feed_comments
        set user_id = 5,
            feed_id = 27,
            `comment` = 'ㅇ'
 {executed in 0 msec}
[2024-12-02 12:14:31 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|5         |
|----------|

[2024-12-02 12:16:02 WARN http-nio-8080-exec-4] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' is not supported]
[2024-12-02 12:16:49 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 1 class path change (1 addition, 0 deletions, 0 modifications)
[2024-12-02 12:16:49 INFO Thread-5] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-02 12:16:50 INFO Thread-5] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-02 12:16:50 INFO Thread-5] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-02 12:16:50 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 11156 (D:\Students\jang jin seong\GreenGramVer2\build\classes\java\main started by Administrator in D:\Students\jang jin seong\GreenGramVer2)
[2024-12-02 12:16:50 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-02 12:16:50 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-02 12:16:50 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-02 12:16:50 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-02 12:16:50 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-02 12:16:50 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-02 12:16:50 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 239 ms
[2024-12-02 12:16:50 INFO restartedMain] [com.green.greengramver2.common.MyFileUtils] MFU 생성자: D:\Students\jang jin seong\download\greengram_ver2
[2024-12-02 12:16:50 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-02 12:16:50 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-02 12:16:50 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-02 12:16:50 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-02 12:16:50 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Started GreenGramVer2Application in 0.432 seconds (process running for 422.906)
[2024-12-02 12:16:50 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-02 12:17:55 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
[2024-12-02 12:17:55 INFO Thread-7] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-02 12:17:55 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 11156 (D:\Students\jang jin seong\GreenGramVer2\build\classes\java\main started by Administrator in D:\Students\jang jin seong\GreenGramVer2)
[2024-12-02 12:17:55 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-02 12:17:55 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-02 12:17:55 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-02 12:17:55 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-02 12:17:55 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-02 12:17:55 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-02 12:17:55 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 209 ms
[2024-12-02 12:17:55 INFO restartedMain] [com.green.greengramver2.common.MyFileUtils] MFU 생성자: D:\Students\jang jin seong\download\greengram_ver2
[2024-12-02 12:17:55 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-02 12:17:55 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-02 12:17:55 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-02 12:17:55 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-02 12:17:55 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Started GreenGramVer2Application in 0.39 seconds (process running for 488.243)
[2024-12-02 12:17:55 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-02 12:20:30 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 1 class path change (0 additions, 1 deletion, 0 modifications)
[2024-12-02 12:20:30 INFO Thread-11] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-02 12:20:30 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 11156 (D:\Students\jang jin seong\GreenGramVer2\build\classes\java\main started by Administrator in D:\Students\jang jin seong\GreenGramVer2)
[2024-12-02 12:20:30 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-02 12:20:30 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-02 12:20:30 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-02 12:20:30 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-02 12:20:30 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-02 12:20:30 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-02 12:20:30 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 211 ms
[2024-12-02 12:20:30 INFO restartedMain] [com.green.greengramver2.common.MyFileUtils] MFU 생성자: D:\Students\jang jin seong\download\greengram_ver2
[2024-12-02 12:20:30 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-02 12:20:31 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-02 12:20:31 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-02 12:20:31 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-02 12:20:31 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Started GreenGramVer2Application in 0.355 seconds (process running for 643.44)
[2024-12-02 12:20:31 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-02 12:22:16 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 5576 (D:\Students\jang jin seong\GreenGramVer2\build\classes\java\main started by Administrator in D:\Students\jang jin seong\GreenGramVer2)
[2024-12-02 12:22:16 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-02 12:22:16 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-02 12:22:16 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-02 12:22:17 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-02 12:22:17 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-02 12:22:17 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-02 12:22:17 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-02 12:22:17 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-02 12:22:17 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 854 ms
[2024-12-02 12:22:17 INFO restartedMain] [com.green.greengramver2.common.MyFileUtils] MFU 생성자: D:\Students\jang jin seong\download\greengram_ver2
[2024-12-02 12:22:17 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-02 12:22:17 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-02 12:22:17 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-02 12:22:17 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-02 12:22:17 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Started GreenGramVer2Application in 1.791 seconds (process running for 2.243)
[2024-12-02 12:22:20 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-02 12:22:20 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-02 12:22:20 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 0 ms
[2024-12-02 12:22:20 INFO http-nio-8080-exec-1] [com.green.greengramver2.feed.comment.FeedCommentController] feedCommentP FeedCommentPostReq(feedId=27, userId=5, comment=123, feedCommentId=0)
[2024-12-02 12:22:20 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-02 12:22:20 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@1f28de9f
[2024-12-02 12:22:20 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-02 12:22:20 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. insert into feed_comments
        set user_id = 5,
            feed_id = 27,
            `comment` = '123'
 {executed in 7 msec}
[2024-12-02 12:22:20 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: insert into feed_comments
        set user_id = 5,
            feed_id = 27,
            `comment` = '123'
 {executed in 0 msec}
[2024-12-02 12:22:20 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|6         |
|----------|

[2024-12-02 12:23:00 INFO http-nio-8080-exec-6] [org.apache.coyote.http11.Http11Processor] Error parsing HTTP request header
 Note: further occurrences of HTTP request parsing errors will be logged at DEBUG level.
java.lang.IllegalArgumentException: Invalid character found in the HTTP protocol [RTSP/1.00x0d0x0a0x0d0x0a...]
	at org.apache.coyote.http11.Http11InputBuffer.parseRequestLine(Http11InputBuffer.java:557)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:270)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-02 12:23:08 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-02 12:23:08 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-02 12:23:11 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 13300 (D:\Students\jang jin seong\GreenGramVer2\build\classes\java\main started by Administrator in D:\Students\jang jin seong\GreenGramVer2)
[2024-12-02 12:23:11 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-02 12:23:11 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-02 12:23:11 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-02 12:23:11 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-02 12:23:11 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-02 12:23:11 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-02 12:23:11 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-02 12:23:11 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-02 12:23:11 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 836 ms
[2024-12-02 12:23:11 INFO restartedMain] [com.green.greengramver2.common.MyFileUtils] MFU 생성자: D:\Students\jang jin seong\download\greengram_ver2
[2024-12-02 12:23:12 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-02 12:23:12 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-02 12:23:12 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-02 12:23:12 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-02 12:23:12 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Started GreenGramVer2Application in 1.83 seconds (process running for 2.291)
[2024-12-02 12:23:14 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-02 12:23:14 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-02 12:23:14 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-02 12:23:14 INFO http-nio-8080-exec-1] [com.green.greengramver2.feed.comment.FeedCommentController] feedCommentP FeedCommentPostReq(feedId=27, userId=5, comment=2, feedCommentId=0)
[2024-12-02 12:23:14 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-02 12:23:14 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@7348802e
[2024-12-02 12:23:14 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-02 12:23:14 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. insert into feed_comments
        set user_id = 5,
            feed_id = 27,
            `comment` = '2'
 {executed in 6 msec}
[2024-12-02 12:23:14 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: insert into feed_comments
        set user_id = 5,
            feed_id = 27,
            `comment` = '2'
 {executed in 0 msec}
[2024-12-02 12:23:14 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|7         |
|----------|

[2024-12-02 12:23:18 INFO http-nio-8080-exec-6] [org.apache.coyote.http11.Http11Processor] Error parsing HTTP request header
 Note: further occurrences of HTTP request parsing errors will be logged at DEBUG level.
java.lang.IllegalArgumentException: Invalid character found in the HTTP protocol [RTSP/1.00x0d0x0a0x0d0x0a...]
	at org.apache.coyote.http11.Http11InputBuffer.parseRequestLine(Http11InputBuffer.java:557)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:270)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-02 12:25:29 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 2 class path changes (0 additions, 0 deletions, 2 modifications)
[2024-12-02 12:25:29 INFO Thread-5] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-02 12:25:29 INFO Thread-5] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-02 12:25:29 INFO Thread-5] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-02 12:25:29 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 13300 (D:\Students\jang jin seong\GreenGramVer2\build\classes\java\main started by Administrator in D:\Students\jang jin seong\GreenGramVer2)
[2024-12-02 12:25:29 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-02 12:25:30 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-02 12:25:30 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-02 12:25:30 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-02 12:25:30 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-02 12:25:30 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-02 12:25:30 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 225 ms
[2024-12-02 12:25:30 INFO restartedMain] [com.green.greengramver2.common.MyFileUtils] MFU 생성자: D:\Students\jang jin seong\download\greengram_ver2
[2024-12-02 12:25:30 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-02 12:25:30 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-02 12:25:30 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-02 12:25:30 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-02 12:25:30 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Started GreenGramVer2Application in 0.383 seconds (process running for 140.129)
[2024-12-02 12:25:30 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-02 12:27:39 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 2 class path changes (0 additions, 0 deletions, 2 modifications)
[2024-12-02 12:27:39 INFO Thread-7] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-02 12:27:39 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 13300 (D:\Students\jang jin seong\GreenGramVer2\build\classes\java\main started by Administrator in D:\Students\jang jin seong\GreenGramVer2)
[2024-12-02 12:27:39 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-02 12:27:39 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-02 12:27:39 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-02 12:27:39 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-02 12:27:39 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-02 12:27:39 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-02 12:27:39 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 210 ms
[2024-12-02 12:27:39 INFO restartedMain] [com.green.greengramver2.common.MyFileUtils] MFU 생성자: D:\Students\jang jin seong\download\greengram_ver2
[2024-12-02 12:27:39 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-02 12:27:39 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-02 12:27:39 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-02 12:27:39 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-02 12:27:39 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Started GreenGramVer2Application in 0.359 seconds (process running for 269.757)
[2024-12-02 12:27:39 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-02 12:42:21 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 5528 (D:\Students\jang jin seong\GreenGramVer2\build\classes\java\main started by Administrator in D:\Students\jang jin seong\GreenGramVer2)
[2024-12-02 12:42:21 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-02 12:42:21 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-02 12:42:21 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-02 12:42:22 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-02 12:42:22 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-02 12:42:22 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-02 12:42:22 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-02 12:42:22 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-02 12:42:22 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 790 ms
[2024-12-02 12:42:22 INFO restartedMain] [com.green.greengramver2.common.MyFileUtils] MFU 생성자: D:\Students\jang jin seong\download\greengram_ver2
[2024-12-02 12:42:22 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-02 12:42:22 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-02 12:42:22 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-02 12:42:22 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-02 12:42:22 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Started GreenGramVer2Application in 1.689 seconds (process running for 2.036)
[2024-12-02 12:42:24 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-02 12:42:24 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-02 12:42:24 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-02 12:42:24 INFO http-nio-8080-exec-3] [com.green.greengramver2.feed.model.FeedGetReq] FeedGetReq 1,null,5
[2024-12-02 12:42:24 INFO http-nio-8080-exec-3] [com.green.greengramver2.feed.FeedController] feedC getFeedList p: FeedGetReq(super=Paging(page=1, size=20, sIdx=0), signedUserId=5)
[2024-12-02 12:42:24 INFO http-nio-8080-exec-3] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-02 12:42:24 INFO http-nio-8080-exec-3] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@792239a
[2024-12-02 12:42:24 INFO http-nio-8080-exec-3] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-02 12:42:24 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, writer_user_id AS writerUserId,
        if(nick_name IS NULL , uid, nick_name) AS writerNm,
        pic AS writerPic, contents, location, a.created_at AS createdAt,
        if(c.feed_id IS NULL ,0 , 1) AS isLike
        FROM feed A
        JOIN user B
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c
        ON a.feed_id = c.feed_id
        AND c.user_id = 5
        ORDER BY a.feed_id DESC
        LIMIT 0,20
 {executed in 1 msec}
[2024-12-02 12:42:24 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|feed_id |writer_user_id |writernm |pic                                      |contents     |location |created_at          |islike |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|27      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |I am panguin |남극       |2024-11-29 17:07:59 |0      |
|26      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |I am panguin |남극       |2024-11-29 16:46:01 |0      |
|25      |5              |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |4123         |213      |2024-11-29 16:32:31 |0      |
|24      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |31231        |123      |2024-11-29 16:01:53 |0      |
|23      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |4754         |444      |2024-11-29 16:00:03 |0      |
|22      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |aaa          |aa       |2024-11-29 15:58:25 |0      |
|14      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:51:21 |0      |
|13      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:51:14 |0      |
|12      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:42:17 |0      |
|11      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |123          |33123    |2024-11-29 10:42:01 |0      |
|9       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |21123        |3        |2024-11-29 10:37:22 |0      |
|7       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-28 17:20:59 |0      |
|6       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |             |         |2024-11-28 17:15:01 |0      |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|

[2024-12-02 12:42:24 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 27
 {executed in 1 msec}
[2024-12-02 12:42:24 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5a0d637a-00c7-441f-a9fa-c0dc68af2602.jpg |
|-----------------------------------------|

[2024-12-02 12:42:24 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 26
 {executed in 0 msec}
[2024-12-02 12:42:24 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3e5fe979-fe9c-4ed6-9ad7-c1dbf4f2538f.jpg |
|-----------------------------------------|

[2024-12-02 12:42:24 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 25
 {executed in 1 msec}
[2024-12-02 12:42:24 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|8213634a-99df-42d8-963e-87bc120cc8a7.jpg |
|-----------------------------------------|

[2024-12-02 12:42:24 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 24
 {executed in 0 msec}
[2024-12-02 12:42:24 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|dfe6f2c1-3753-4a6a-aff4-0de7fa2786b8.jpg |
|-----------------------------------------|

[2024-12-02 12:42:24 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 23
 {executed in 0 msec}
[2024-12-02 12:42:24 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f3e6375d-35d8-4a4a-a976-26ca5c6abaac.jpg |
|-----------------------------------------|

[2024-12-02 12:42:24 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 22
 {executed in 0 msec}
[2024-12-02 12:42:24 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e97360ca-fe79-48c3-acaa-cd71042a0a78.tif |
|-----------------------------------------|

[2024-12-02 12:42:24 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 14
 {executed in 0 msec}
[2024-12-02 12:42:24 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a3709fe6-3e0d-4f04-8cef-1cc328c4fc0c.jpg |
|ada457b9-68aa-4a78-b0c8-c5035af844e2.jpg |
|-----------------------------------------|

[2024-12-02 12:42:24 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 13
 {executed in 0 msec}
[2024-12-02 12:42:24 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6fe5de58-57ef-47e7-80c7-49c0506ca143.jpg |
|920ca8e8-5dc2-4844-aa7f-d7782e94d380.jpg |
|-----------------------------------------|

[2024-12-02 12:42:24 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 12
 {executed in 0 msec}
[2024-12-02 12:42:24 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|84e77be4-2b62-4f40-8f8b-0803e1080449.jpg |
|84f31709-40aa-40eb-a7e7-da0219067927.jpg |
|-----------------------------------------|

[2024-12-02 12:42:24 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 11
 {executed in 0 msec}
[2024-12-02 12:42:24 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3fc51a83-46ea-43ca-a85b-6fad4794a2bd.jpg |
|49906eb9-a412-4428-a629-baccbe152c75.jpg |
|-----------------------------------------|

[2024-12-02 12:42:24 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 9
 {executed in 0 msec}
[2024-12-02 12:42:24 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|34669219-c5d3-4d84-a277-fd8c2b8bca4f.jpg |
|f1ed44ba-1254-4232-9a0d-65037abe1e9c.jpg |
|-----------------------------------------|

[2024-12-02 12:42:24 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 7
 {executed in 0 msec}
[2024-12-02 12:42:24 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|14ecfa41-07fc-40d0-b50b-3fe95a840992.jpg |
|2694c9a6-a7b3-4800-ac73-0c853e16a152.jpg |
|-----------------------------------------|

[2024-12-02 12:42:24 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 6
 {executed in 1 msec}
[2024-12-02 12:42:24 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3c31d519-96b0-49bd-8657-d1eac4fb3fc1.jpg |
|-----------------------------------------|

[2024-12-02 12:42:29 INFO http-nio-8080-exec-8] [com.green.greengramver2.feed.model.FeedGetReq] FeedGetReq 1,null,5
[2024-12-02 12:42:29 INFO http-nio-8080-exec-8] [com.green.greengramver2.feed.FeedController] feedC getFeedList p: FeedGetReq(super=Paging(page=1, size=20, sIdx=0), signedUserId=5)
[2024-12-02 12:42:29 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, writer_user_id AS writerUserId,
        if(nick_name IS NULL , uid, nick_name) AS writerNm,
        pic AS writerPic, contents, location, a.created_at AS createdAt,
        if(c.feed_id IS NULL ,0 , 1) AS isLike
        FROM feed A
        JOIN user B
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c
        ON a.feed_id = c.feed_id
        AND c.user_id = 5
        ORDER BY a.feed_id DESC
        LIMIT 0,20
 {executed in 0 msec}
[2024-12-02 12:42:29 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|feed_id |writer_user_id |writernm |pic                                      |contents     |location |created_at          |islike |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|27      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |I am panguin |남극       |2024-11-29 17:07:59 |0      |
|26      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |I am panguin |남극       |2024-11-29 16:46:01 |0      |
|25      |5              |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |4123         |213      |2024-11-29 16:32:31 |0      |
|24      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |31231        |123      |2024-11-29 16:01:53 |0      |
|23      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |4754         |444      |2024-11-29 16:00:03 |0      |
|22      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |aaa          |aa       |2024-11-29 15:58:25 |0      |
|14      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:51:21 |0      |
|13      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:51:14 |0      |
|12      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:42:17 |0      |
|11      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |123          |33123    |2024-11-29 10:42:01 |0      |
|9       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |21123        |3        |2024-11-29 10:37:22 |0      |
|7       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-28 17:20:59 |0      |
|6       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |             |         |2024-11-28 17:15:01 |0      |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|

[2024-12-02 12:42:29 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 27
 {executed in 0 msec}
[2024-12-02 12:42:29 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5a0d637a-00c7-441f-a9fa-c0dc68af2602.jpg |
|-----------------------------------------|

[2024-12-02 12:42:29 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 26
 {executed in 0 msec}
[2024-12-02 12:42:29 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3e5fe979-fe9c-4ed6-9ad7-c1dbf4f2538f.jpg |
|-----------------------------------------|

[2024-12-02 12:42:29 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 25
 {executed in 0 msec}
[2024-12-02 12:42:29 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|8213634a-99df-42d8-963e-87bc120cc8a7.jpg |
|-----------------------------------------|

[2024-12-02 12:42:29 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 24
 {executed in 0 msec}
[2024-12-02 12:42:29 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|dfe6f2c1-3753-4a6a-aff4-0de7fa2786b8.jpg |
|-----------------------------------------|

[2024-12-02 12:42:29 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 23
 {executed in 0 msec}
[2024-12-02 12:42:29 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f3e6375d-35d8-4a4a-a976-26ca5c6abaac.jpg |
|-----------------------------------------|

[2024-12-02 12:42:29 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 22
 {executed in 0 msec}
[2024-12-02 12:42:29 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e97360ca-fe79-48c3-acaa-cd71042a0a78.tif |
|-----------------------------------------|

[2024-12-02 12:42:29 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 14
 {executed in 0 msec}
[2024-12-02 12:42:29 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a3709fe6-3e0d-4f04-8cef-1cc328c4fc0c.jpg |
|ada457b9-68aa-4a78-b0c8-c5035af844e2.jpg |
|-----------------------------------------|

[2024-12-02 12:42:29 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 13
 {executed in 0 msec}
[2024-12-02 12:42:29 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6fe5de58-57ef-47e7-80c7-49c0506ca143.jpg |
|920ca8e8-5dc2-4844-aa7f-d7782e94d380.jpg |
|-----------------------------------------|

[2024-12-02 12:42:29 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 12
 {executed in 0 msec}
[2024-12-02 12:42:29 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|84e77be4-2b62-4f40-8f8b-0803e1080449.jpg |
|84f31709-40aa-40eb-a7e7-da0219067927.jpg |
|-----------------------------------------|

[2024-12-02 12:42:29 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 11
 {executed in 0 msec}
[2024-12-02 12:42:29 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3fc51a83-46ea-43ca-a85b-6fad4794a2bd.jpg |
|49906eb9-a412-4428-a629-baccbe152c75.jpg |
|-----------------------------------------|

[2024-12-02 12:42:29 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 9
 {executed in 1 msec}
[2024-12-02 12:42:29 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|34669219-c5d3-4d84-a277-fd8c2b8bca4f.jpg |
|f1ed44ba-1254-4232-9a0d-65037abe1e9c.jpg |
|-----------------------------------------|

[2024-12-02 12:42:29 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 7
 {executed in 0 msec}
[2024-12-02 12:42:29 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|14ecfa41-07fc-40d0-b50b-3fe95a840992.jpg |
|2694c9a6-a7b3-4800-ac73-0c853e16a152.jpg |
|-----------------------------------------|

[2024-12-02 12:42:29 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 6
 {executed in 0 msec}
[2024-12-02 12:42:29 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3c31d519-96b0-49bd-8657-d1eac4fb3fc1.jpg |
|-----------------------------------------|

[2024-12-02 12:58:18 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-02 12:58:18 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-02 15:49:59 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 11956 (D:\Students\jang jin seong\GreenGramVer2\build\classes\java\main started by Administrator in D:\Students\jang jin seong\GreenGramVer2)
[2024-12-02 15:49:59 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-02 15:49:59 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-02 15:49:59 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-02 15:50:00 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-02 15:50:00 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-02 15:50:00 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-02 15:50:00 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-02 15:50:00 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-02 15:50:00 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 780 ms
[2024-12-02 15:50:00 INFO restartedMain] [com.green.greengramver2.common.MyFileUtils] MFU 생성자: D:\Students\jang jin seong\download\greengram_ver2
[2024-12-02 15:50:00 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-02 15:50:00 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-02 15:50:00 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-02 15:50:00 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-02 15:50:00 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Started GreenGramVer2Application in 1.648 seconds (process running for 2.0)
[2024-12-02 15:50:02 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-02 15:50:02 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-02 15:50:02 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-02 15:50:02 INFO http-nio-8080-exec-6] [com.green.greengramver2.feed.model.FeedGetReq] FeedGetReq 1,null,5
[2024-12-02 15:50:02 INFO http-nio-8080-exec-6] [com.green.greengramver2.feed.FeedController] feedC getFeedList p: FeedGetReq(super=Paging(page=1, size=20, sIdx=0), signedUserId=5)
[2024-12-02 15:50:02 INFO http-nio-8080-exec-6] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-02 15:50:02 INFO http-nio-8080-exec-6] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@1f7d70d2
[2024-12-02 15:50:02 INFO http-nio-8080-exec-6] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-02 15:50:02 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, writer_user_id AS writerUserId,
        if(nick_name IS NULL , uid, nick_name) AS writerNm,
        pic AS writerPic, contents, location, a.created_at AS createdAt,
        if(c.feed_id IS NULL ,0 , 1) AS isLike
        FROM feed A
        JOIN user B
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c
        ON a.feed_id = c.feed_id
        AND c.user_id = 5
        ORDER BY a.feed_id DESC
        LIMIT 0,20
 {executed in 1 msec}
[2024-12-02 15:50:02 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|feed_id |writer_user_id |writernm |pic                                      |contents     |location |created_at          |islike |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|27      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |I am panguin |남극       |2024-11-29 17:07:59 |0      |
|26      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |I am panguin |남극       |2024-11-29 16:46:01 |0      |
|25      |5              |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |4123         |213      |2024-11-29 16:32:31 |0      |
|24      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |31231        |123      |2024-11-29 16:01:53 |0      |
|23      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |4754         |444      |2024-11-29 16:00:03 |0      |
|22      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |aaa          |aa       |2024-11-29 15:58:25 |0      |
|14      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:51:21 |0      |
|13      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:51:14 |0      |
|12      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:42:17 |0      |
|11      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |123          |33123    |2024-11-29 10:42:01 |0      |
|9       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |21123        |3        |2024-11-29 10:37:22 |0      |
|7       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-28 17:20:59 |0      |
|6       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |             |         |2024-11-28 17:15:01 |0      |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|

[2024-12-02 15:50:02 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 27
 {executed in 0 msec}
[2024-12-02 15:50:02 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5a0d637a-00c7-441f-a9fa-c0dc68af2602.jpg |
|-----------------------------------------|

[2024-12-02 15:50:02 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 27
        ORDER BY feed_comment_id DESC
        LIMIT 6, 21
 {executed in 0 msec}
[2024-12-02 15:50:02 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|5       |1               |ㄷ       |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-02 15:50:02 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 26
 {executed in 0 msec}
[2024-12-02 15:50:02 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3e5fe979-fe9c-4ed6-9ad7-c1dbf4f2538f.jpg |
|-----------------------------------------|

[2024-12-02 15:50:02 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 26
        ORDER BY feed_comment_id DESC
        LIMIT 6, 21
 {executed in 0 msec}
[2024-12-02 15:50:02 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 15:50:02 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 25
 {executed in 1 msec}
[2024-12-02 15:50:02 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|8213634a-99df-42d8-963e-87bc120cc8a7.jpg |
|-----------------------------------------|

[2024-12-02 15:50:02 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 25
        ORDER BY feed_comment_id DESC
        LIMIT 6, 21
 {executed in 0 msec}
[2024-12-02 15:50:02 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 15:50:02 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 24
 {executed in 0 msec}
[2024-12-02 15:50:02 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|dfe6f2c1-3753-4a6a-aff4-0de7fa2786b8.jpg |
|-----------------------------------------|

[2024-12-02 15:50:02 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 24
        ORDER BY feed_comment_id DESC
        LIMIT 6, 21
 {executed in 1 msec}
[2024-12-02 15:50:02 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 15:50:02 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 23
 {executed in 0 msec}
[2024-12-02 15:50:02 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f3e6375d-35d8-4a4a-a976-26ca5c6abaac.jpg |
|-----------------------------------------|

[2024-12-02 15:50:02 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 23
        ORDER BY feed_comment_id DESC
        LIMIT 6, 21
 {executed in 0 msec}
[2024-12-02 15:50:02 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 15:50:02 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 22
 {executed in 1 msec}
[2024-12-02 15:50:02 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e97360ca-fe79-48c3-acaa-cd71042a0a78.tif |
|-----------------------------------------|

[2024-12-02 15:50:02 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 22
        ORDER BY feed_comment_id DESC
        LIMIT 6, 21
 {executed in 0 msec}
[2024-12-02 15:50:02 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 15:50:02 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 14
 {executed in 0 msec}
[2024-12-02 15:50:02 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a3709fe6-3e0d-4f04-8cef-1cc328c4fc0c.jpg |
|ada457b9-68aa-4a78-b0c8-c5035af844e2.jpg |
|-----------------------------------------|

[2024-12-02 15:50:02 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 14
        ORDER BY feed_comment_id DESC
        LIMIT 6, 21
 {executed in 0 msec}
[2024-12-02 15:50:02 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 15:50:02 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 13
 {executed in 0 msec}
[2024-12-02 15:50:02 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6fe5de58-57ef-47e7-80c7-49c0506ca143.jpg |
|920ca8e8-5dc2-4844-aa7f-d7782e94d380.jpg |
|-----------------------------------------|

[2024-12-02 15:50:02 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 13
        ORDER BY feed_comment_id DESC
        LIMIT 6, 21
 {executed in 1 msec}
[2024-12-02 15:50:02 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 15:50:02 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 12
 {executed in 0 msec}
[2024-12-02 15:50:02 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|84e77be4-2b62-4f40-8f8b-0803e1080449.jpg |
|84f31709-40aa-40eb-a7e7-da0219067927.jpg |
|-----------------------------------------|

[2024-12-02 15:50:02 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 12
        ORDER BY feed_comment_id DESC
        LIMIT 6, 21
 {executed in 0 msec}
[2024-12-02 15:50:02 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 15:50:02 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 11
 {executed in 1 msec}
[2024-12-02 15:50:02 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3fc51a83-46ea-43ca-a85b-6fad4794a2bd.jpg |
|49906eb9-a412-4428-a629-baccbe152c75.jpg |
|-----------------------------------------|

[2024-12-02 15:50:02 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 11
        ORDER BY feed_comment_id DESC
        LIMIT 6, 21
 {executed in 0 msec}
[2024-12-02 15:50:02 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 15:50:02 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 9
 {executed in 0 msec}
[2024-12-02 15:50:02 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|34669219-c5d3-4d84-a277-fd8c2b8bca4f.jpg |
|f1ed44ba-1254-4232-9a0d-65037abe1e9c.jpg |
|-----------------------------------------|

[2024-12-02 15:50:02 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 9
        ORDER BY feed_comment_id DESC
        LIMIT 6, 21
 {executed in 0 msec}
[2024-12-02 15:50:02 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 15:50:02 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 7
 {executed in 0 msec}
[2024-12-02 15:50:02 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|14ecfa41-07fc-40d0-b50b-3fe95a840992.jpg |
|2694c9a6-a7b3-4800-ac73-0c853e16a152.jpg |
|-----------------------------------------|

[2024-12-02 15:50:02 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 7
        ORDER BY feed_comment_id DESC
        LIMIT 6, 21
 {executed in 0 msec}
[2024-12-02 15:50:02 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 15:50:02 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 6
 {executed in 0 msec}
[2024-12-02 15:50:02 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3c31d519-96b0-49bd-8657-d1eac4fb3fc1.jpg |
|-----------------------------------------|

[2024-12-02 15:50:02 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 6
        ORDER BY feed_comment_id DESC
        LIMIT 6, 21
 {executed in 0 msec}
[2024-12-02 15:50:02 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 15:50:07 INFO http-nio-8080-exec-4] [com.green.greengramver2.feed.model.FeedGetReq] FeedGetReq 1,null,5
[2024-12-02 15:50:07 INFO http-nio-8080-exec-4] [com.green.greengramver2.feed.FeedController] feedC getFeedList p: FeedGetReq(super=Paging(page=1, size=20, sIdx=0), signedUserId=5)
[2024-12-02 15:50:07 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, writer_user_id AS writerUserId,
        if(nick_name IS NULL , uid, nick_name) AS writerNm,
        pic AS writerPic, contents, location, a.created_at AS createdAt,
        if(c.feed_id IS NULL ,0 , 1) AS isLike
        FROM feed A
        JOIN user B
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c
        ON a.feed_id = c.feed_id
        AND c.user_id = 5
        ORDER BY a.feed_id DESC
        LIMIT 0,20
 {executed in 0 msec}
[2024-12-02 15:50:07 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|feed_id |writer_user_id |writernm |pic                                      |contents     |location |created_at          |islike |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|27      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |I am panguin |남극       |2024-11-29 17:07:59 |0      |
|26      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |I am panguin |남극       |2024-11-29 16:46:01 |0      |
|25      |5              |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |4123         |213      |2024-11-29 16:32:31 |0      |
|24      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |31231        |123      |2024-11-29 16:01:53 |0      |
|23      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |4754         |444      |2024-11-29 16:00:03 |0      |
|22      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |aaa          |aa       |2024-11-29 15:58:25 |0      |
|14      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:51:21 |0      |
|13      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:51:14 |0      |
|12      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:42:17 |0      |
|11      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |123          |33123    |2024-11-29 10:42:01 |0      |
|9       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |21123        |3        |2024-11-29 10:37:22 |0      |
|7       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-28 17:20:59 |0      |
|6       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |             |         |2024-11-28 17:15:01 |0      |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|

[2024-12-02 15:50:07 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 27
 {executed in 0 msec}
[2024-12-02 15:50:07 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5a0d637a-00c7-441f-a9fa-c0dc68af2602.jpg |
|-----------------------------------------|

[2024-12-02 15:50:07 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 27
        ORDER BY feed_comment_id DESC
        LIMIT 6, 21
 {executed in 1 msec}
[2024-12-02 15:50:07 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|5       |1               |ㄷ       |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-02 15:50:07 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 26
 {executed in 0 msec}
[2024-12-02 15:50:07 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3e5fe979-fe9c-4ed6-9ad7-c1dbf4f2538f.jpg |
|-----------------------------------------|

[2024-12-02 15:50:07 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 26
        ORDER BY feed_comment_id DESC
        LIMIT 6, 21
 {executed in 0 msec}
[2024-12-02 15:50:07 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 15:50:07 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 25
 {executed in 1 msec}
[2024-12-02 15:50:07 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|8213634a-99df-42d8-963e-87bc120cc8a7.jpg |
|-----------------------------------------|

[2024-12-02 15:50:07 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 25
        ORDER BY feed_comment_id DESC
        LIMIT 6, 21
 {executed in 0 msec}
[2024-12-02 15:50:07 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 15:50:07 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 24
 {executed in 0 msec}
[2024-12-02 15:50:07 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|dfe6f2c1-3753-4a6a-aff4-0de7fa2786b8.jpg |
|-----------------------------------------|

[2024-12-02 15:50:07 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 24
        ORDER BY feed_comment_id DESC
        LIMIT 6, 21
 {executed in 0 msec}
[2024-12-02 15:50:07 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 15:50:07 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 23
 {executed in 0 msec}
[2024-12-02 15:50:07 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f3e6375d-35d8-4a4a-a976-26ca5c6abaac.jpg |
|-----------------------------------------|

[2024-12-02 15:50:07 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 23
        ORDER BY feed_comment_id DESC
        LIMIT 6, 21
 {executed in 0 msec}
[2024-12-02 15:50:07 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 15:50:07 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 22
 {executed in 0 msec}
[2024-12-02 15:50:07 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e97360ca-fe79-48c3-acaa-cd71042a0a78.tif |
|-----------------------------------------|

[2024-12-02 15:50:07 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 22
        ORDER BY feed_comment_id DESC
        LIMIT 6, 21
 {executed in 0 msec}
[2024-12-02 15:50:07 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 15:50:07 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 14
 {executed in 0 msec}
[2024-12-02 15:50:07 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a3709fe6-3e0d-4f04-8cef-1cc328c4fc0c.jpg |
|ada457b9-68aa-4a78-b0c8-c5035af844e2.jpg |
|-----------------------------------------|

[2024-12-02 15:50:07 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 14
        ORDER BY feed_comment_id DESC
        LIMIT 6, 21
 {executed in 0 msec}
[2024-12-02 15:50:07 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 15:50:07 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 13
 {executed in 0 msec}
[2024-12-02 15:50:07 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6fe5de58-57ef-47e7-80c7-49c0506ca143.jpg |
|920ca8e8-5dc2-4844-aa7f-d7782e94d380.jpg |
|-----------------------------------------|

[2024-12-02 15:50:07 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 13
        ORDER BY feed_comment_id DESC
        LIMIT 6, 21
 {executed in 1 msec}
[2024-12-02 15:50:07 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 15:50:07 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 12
 {executed in 0 msec}
[2024-12-02 15:50:07 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|84e77be4-2b62-4f40-8f8b-0803e1080449.jpg |
|84f31709-40aa-40eb-a7e7-da0219067927.jpg |
|-----------------------------------------|

[2024-12-02 15:50:07 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 12
        ORDER BY feed_comment_id DESC
        LIMIT 6, 21
 {executed in 1 msec}
[2024-12-02 15:50:07 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 15:50:07 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 11
 {executed in 0 msec}
[2024-12-02 15:50:07 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3fc51a83-46ea-43ca-a85b-6fad4794a2bd.jpg |
|49906eb9-a412-4428-a629-baccbe152c75.jpg |
|-----------------------------------------|

[2024-12-02 15:50:07 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 11
        ORDER BY feed_comment_id DESC
        LIMIT 6, 21
 {executed in 0 msec}
[2024-12-02 15:50:07 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 15:50:07 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 9
 {executed in 0 msec}
[2024-12-02 15:50:07 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|34669219-c5d3-4d84-a277-fd8c2b8bca4f.jpg |
|f1ed44ba-1254-4232-9a0d-65037abe1e9c.jpg |
|-----------------------------------------|

[2024-12-02 15:50:07 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 9
        ORDER BY feed_comment_id DESC
        LIMIT 6, 21
 {executed in 0 msec}
[2024-12-02 15:50:07 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 15:50:07 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 7
 {executed in 0 msec}
[2024-12-02 15:50:07 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|14ecfa41-07fc-40d0-b50b-3fe95a840992.jpg |
|2694c9a6-a7b3-4800-ac73-0c853e16a152.jpg |
|-----------------------------------------|

[2024-12-02 15:50:07 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 7
        ORDER BY feed_comment_id DESC
        LIMIT 6, 21
 {executed in 0 msec}
[2024-12-02 15:50:07 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 15:50:07 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 6
 {executed in 0 msec}
[2024-12-02 15:50:07 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3c31d519-96b0-49bd-8657-d1eac4fb3fc1.jpg |
|-----------------------------------------|

[2024-12-02 15:50:07 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 6
        ORDER BY feed_comment_id DESC
        LIMIT 6, 21
 {executed in 1 msec}
[2024-12-02 15:50:07 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 15:50:25 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-02 15:50:25 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-02 16:20:23 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 11484 (D:\Students\jang jin seong\GreenGramVer2\build\classes\java\main started by Administrator in D:\Students\jang jin seong\GreenGramVer2)
[2024-12-02 16:20:23 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-02 16:20:23 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-02 16:20:23 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-02 16:20:24 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-02 16:20:24 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-02 16:20:24 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-02 16:20:24 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-02 16:20:24 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-02 16:20:24 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 771 ms
[2024-12-02 16:20:24 INFO restartedMain] [com.green.greengramver2.common.MyFileUtils] MFU 생성자: D:\Students\jang jin seong\download\greengram_ver2
[2024-12-02 16:20:24 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-02 16:20:24 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-02 16:20:24 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-02 16:20:24 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-02 16:20:24 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Started GreenGramVer2Application in 1.629 seconds (process running for 1.985)
[2024-12-02 16:20:28 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-02 16:20:28 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-02 16:20:28 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-02 16:20:29 INFO http-nio-8080-exec-10] [com.green.greengramver2.feed.model.FeedGetReq] FeedGetReq 1,null,5
[2024-12-02 16:20:29 INFO http-nio-8080-exec-10] [com.green.greengramver2.feed.FeedController] feedC getFeedList p: FeedGetReq(super=Paging(page=1, size=20, sIdx=0), signedUserId=5)
[2024-12-02 16:20:29 INFO http-nio-8080-exec-10] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-02 16:20:29 INFO http-nio-8080-exec-10] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@3f0df78d
[2024-12-02 16:20:29 INFO http-nio-8080-exec-10] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-02 16:20:29 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, writer_user_id AS writerUserId,
        if(nick_name IS NULL , uid, nick_name) AS writerNm,
        pic AS writerPic, contents, location, a.created_at AS createdAt,
        if(c.feed_id IS NULL ,0 , 1) AS isLike
        FROM feed A
        JOIN user B
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c
        ON a.feed_id = c.feed_id
        AND c.user_id = 5
        ORDER BY a.feed_id DESC
        LIMIT 0,20
 {executed in 1 msec}
[2024-12-02 16:20:29 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|feed_id |writer_user_id |writernm |pic                                      |contents     |location |created_at          |islike |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|27      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |I am panguin |남극       |2024-11-29 17:07:59 |0      |
|26      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |I am panguin |남극       |2024-11-29 16:46:01 |0      |
|25      |5              |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |4123         |213      |2024-11-29 16:32:31 |0      |
|24      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |31231        |123      |2024-11-29 16:01:53 |0      |
|23      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |4754         |444      |2024-11-29 16:00:03 |0      |
|22      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |aaa          |aa       |2024-11-29 15:58:25 |0      |
|14      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:51:21 |0      |
|13      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:51:14 |0      |
|12      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:42:17 |0      |
|11      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |123          |33123    |2024-11-29 10:42:01 |0      |
|9       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |21123        |3        |2024-11-29 10:37:22 |0      |
|7       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-28 17:20:59 |0      |
|6       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |             |         |2024-11-28 17:15:01 |0      |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|

[2024-12-02 16:20:29 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 27
 {executed in 0 msec}
[2024-12-02 16:20:29 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5a0d637a-00c7-441f-a9fa-c0dc68af2602.jpg |
|-----------------------------------------|

[2024-12-02 16:20:29 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 27
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:20:29 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|5       |7               |2       |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |6               |123     |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |5               |ㅇ       |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |4               |ㅇ       |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-02 16:20:29 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 26
 {executed in 1 msec}
[2024-12-02 16:20:29 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3e5fe979-fe9c-4ed6-9ad7-c1dbf4f2538f.jpg |
|-----------------------------------------|

[2024-12-02 16:20:29 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 26
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:20:29 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 16:20:29 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 25
 {executed in 0 msec}
[2024-12-02 16:20:29 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|8213634a-99df-42d8-963e-87bc120cc8a7.jpg |
|-----------------------------------------|

[2024-12-02 16:20:29 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 25
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-02 16:20:29 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 16:20:29 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 24
 {executed in 0 msec}
[2024-12-02 16:20:29 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|dfe6f2c1-3753-4a6a-aff4-0de7fa2786b8.jpg |
|-----------------------------------------|

[2024-12-02 16:20:29 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 24
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:20:29 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 16:20:29 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 23
 {executed in 1 msec}
[2024-12-02 16:20:29 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f3e6375d-35d8-4a4a-a976-26ca5c6abaac.jpg |
|-----------------------------------------|

[2024-12-02 16:20:29 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 23
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:20:29 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 16:20:29 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 22
 {executed in 0 msec}
[2024-12-02 16:20:29 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e97360ca-fe79-48c3-acaa-cd71042a0a78.tif |
|-----------------------------------------|

[2024-12-02 16:20:29 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 22
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:20:29 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 16:20:29 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 14
 {executed in 0 msec}
[2024-12-02 16:20:29 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a3709fe6-3e0d-4f04-8cef-1cc328c4fc0c.jpg |
|ada457b9-68aa-4a78-b0c8-c5035af844e2.jpg |
|-----------------------------------------|

[2024-12-02 16:20:29 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 14
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:20:29 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 16:20:29 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 13
 {executed in 0 msec}
[2024-12-02 16:20:29 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6fe5de58-57ef-47e7-80c7-49c0506ca143.jpg |
|920ca8e8-5dc2-4844-aa7f-d7782e94d380.jpg |
|-----------------------------------------|

[2024-12-02 16:20:29 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 13
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-02 16:20:29 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 16:20:29 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 12
 {executed in 0 msec}
[2024-12-02 16:20:29 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|84e77be4-2b62-4f40-8f8b-0803e1080449.jpg |
|84f31709-40aa-40eb-a7e7-da0219067927.jpg |
|-----------------------------------------|

[2024-12-02 16:20:29 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 12
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:20:29 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 16:20:29 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 11
 {executed in 1 msec}
[2024-12-02 16:20:29 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3fc51a83-46ea-43ca-a85b-6fad4794a2bd.jpg |
|49906eb9-a412-4428-a629-baccbe152c75.jpg |
|-----------------------------------------|

[2024-12-02 16:20:29 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 11
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:20:29 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 16:20:29 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 9
 {executed in 0 msec}
[2024-12-02 16:20:29 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|34669219-c5d3-4d84-a277-fd8c2b8bca4f.jpg |
|f1ed44ba-1254-4232-9a0d-65037abe1e9c.jpg |
|-----------------------------------------|

[2024-12-02 16:20:29 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 9
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:20:29 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 16:20:29 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 7
 {executed in 0 msec}
[2024-12-02 16:20:29 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|14ecfa41-07fc-40d0-b50b-3fe95a840992.jpg |
|2694c9a6-a7b3-4800-ac73-0c853e16a152.jpg |
|-----------------------------------------|

[2024-12-02 16:20:29 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 7
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:20:29 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 16:20:29 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 6
 {executed in 1 msec}
[2024-12-02 16:20:29 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3c31d519-96b0-49bd-8657-d1eac4fb3fc1.jpg |
|-----------------------------------------|

[2024-12-02 16:20:29 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 6
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:20:29 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 16:20:33 INFO http-nio-8080-exec-7] [com.green.greengramver2.feed.model.FeedGetReq] FeedGetReq 1,null,5
[2024-12-02 16:20:33 INFO http-nio-8080-exec-7] [com.green.greengramver2.feed.FeedController] feedC getFeedList p: FeedGetReq(super=Paging(page=1, size=20, sIdx=0), signedUserId=5)
[2024-12-02 16:20:33 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, writer_user_id AS writerUserId,
        if(nick_name IS NULL , uid, nick_name) AS writerNm,
        pic AS writerPic, contents, location, a.created_at AS createdAt,
        if(c.feed_id IS NULL ,0 , 1) AS isLike
        FROM feed A
        JOIN user B
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c
        ON a.feed_id = c.feed_id
        AND c.user_id = 5
        ORDER BY a.feed_id DESC
        LIMIT 0,20
 {executed in 1 msec}
[2024-12-02 16:20:33 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|feed_id |writer_user_id |writernm |pic                                      |contents     |location |created_at          |islike |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|27      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |I am panguin |남극       |2024-11-29 17:07:59 |0      |
|26      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |I am panguin |남극       |2024-11-29 16:46:01 |0      |
|25      |5              |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |4123         |213      |2024-11-29 16:32:31 |0      |
|24      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |31231        |123      |2024-11-29 16:01:53 |0      |
|23      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |4754         |444      |2024-11-29 16:00:03 |0      |
|22      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |aaa          |aa       |2024-11-29 15:58:25 |0      |
|14      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:51:21 |0      |
|13      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:51:14 |0      |
|12      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:42:17 |0      |
|11      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |123          |33123    |2024-11-29 10:42:01 |0      |
|9       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |21123        |3        |2024-11-29 10:37:22 |0      |
|7       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-28 17:20:59 |0      |
|6       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |             |         |2024-11-28 17:15:01 |0      |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|

[2024-12-02 16:20:33 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 27
 {executed in 0 msec}
[2024-12-02 16:20:33 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5a0d637a-00c7-441f-a9fa-c0dc68af2602.jpg |
|-----------------------------------------|

[2024-12-02 16:20:33 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 27
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:20:33 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|5       |7               |2       |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |6               |123     |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |5               |ㅇ       |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |4               |ㅇ       |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-02 16:20:33 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 26
 {executed in 0 msec}
[2024-12-02 16:20:33 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3e5fe979-fe9c-4ed6-9ad7-c1dbf4f2538f.jpg |
|-----------------------------------------|

[2024-12-02 16:20:33 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 26
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:20:33 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 16:20:33 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 25
 {executed in 0 msec}
[2024-12-02 16:20:33 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|8213634a-99df-42d8-963e-87bc120cc8a7.jpg |
|-----------------------------------------|

[2024-12-02 16:20:33 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 25
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:20:33 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 16:20:33 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 24
 {executed in 0 msec}
[2024-12-02 16:20:33 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|dfe6f2c1-3753-4a6a-aff4-0de7fa2786b8.jpg |
|-----------------------------------------|

[2024-12-02 16:20:33 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 24
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:20:33 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 16:20:33 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 23
 {executed in 0 msec}
[2024-12-02 16:20:33 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f3e6375d-35d8-4a4a-a976-26ca5c6abaac.jpg |
|-----------------------------------------|

[2024-12-02 16:20:33 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 23
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:20:33 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 16:20:33 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 22
 {executed in 0 msec}
[2024-12-02 16:20:33 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e97360ca-fe79-48c3-acaa-cd71042a0a78.tif |
|-----------------------------------------|

[2024-12-02 16:20:33 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 22
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:20:33 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 16:20:33 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 14
 {executed in 0 msec}
[2024-12-02 16:20:33 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a3709fe6-3e0d-4f04-8cef-1cc328c4fc0c.jpg |
|ada457b9-68aa-4a78-b0c8-c5035af844e2.jpg |
|-----------------------------------------|

[2024-12-02 16:20:33 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 14
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:20:33 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 16:20:33 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 13
 {executed in 0 msec}
[2024-12-02 16:20:33 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6fe5de58-57ef-47e7-80c7-49c0506ca143.jpg |
|920ca8e8-5dc2-4844-aa7f-d7782e94d380.jpg |
|-----------------------------------------|

[2024-12-02 16:20:33 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 13
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:20:33 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 16:20:33 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 12
 {executed in 0 msec}
[2024-12-02 16:20:33 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|84e77be4-2b62-4f40-8f8b-0803e1080449.jpg |
|84f31709-40aa-40eb-a7e7-da0219067927.jpg |
|-----------------------------------------|

[2024-12-02 16:20:33 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 12
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:20:33 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 16:20:33 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 11
 {executed in 0 msec}
[2024-12-02 16:20:33 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3fc51a83-46ea-43ca-a85b-6fad4794a2bd.jpg |
|49906eb9-a412-4428-a629-baccbe152c75.jpg |
|-----------------------------------------|

[2024-12-02 16:20:33 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 11
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:20:33 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 16:20:33 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 9
 {executed in 0 msec}
[2024-12-02 16:20:33 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|34669219-c5d3-4d84-a277-fd8c2b8bca4f.jpg |
|f1ed44ba-1254-4232-9a0d-65037abe1e9c.jpg |
|-----------------------------------------|

[2024-12-02 16:20:33 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 9
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:20:33 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 16:20:33 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 7
 {executed in 0 msec}
[2024-12-02 16:20:33 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|14ecfa41-07fc-40d0-b50b-3fe95a840992.jpg |
|2694c9a6-a7b3-4800-ac73-0c853e16a152.jpg |
|-----------------------------------------|

[2024-12-02 16:20:33 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 7
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:20:33 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 16:20:33 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 6
 {executed in 0 msec}
[2024-12-02 16:20:33 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3c31d519-96b0-49bd-8657-d1eac4fb3fc1.jpg |
|-----------------------------------------|

[2024-12-02 16:20:33 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 6
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:20:33 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 16:20:36 INFO http-nio-8080-exec-4] [com.green.greengramver2.feed.comment.FeedCommentController] feedCommentP FeedCommentPostReq(feedId=26, userId=5, comment=123, feedCommentId=0)
[2024-12-02 16:20:36 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. insert into feed_comments
        set user_id = 5,
            feed_id = 26,
            `comment` = '123'
 {executed in 7 msec}
[2024-12-02 16:20:36 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: insert into feed_comments
        set user_id = 5,
            feed_id = 26,
            `comment` = '123'
 {executed in 0 msec}
[2024-12-02 16:20:36 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|8         |
|----------|

[2024-12-02 16:21:06 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 2 class path changes (0 additions, 0 deletions, 2 modifications)
[2024-12-02 16:21:06 INFO Thread-5] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-02 16:21:06 INFO Thread-5] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-02 16:21:06 INFO Thread-5] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-02 16:21:07 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 11484 (D:\Students\jang jin seong\GreenGramVer2\build\classes\java\main started by Administrator in D:\Students\jang jin seong\GreenGramVer2)
[2024-12-02 16:21:07 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-02 16:21:07 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-02 16:21:07 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-02 16:21:07 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-02 16:21:07 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-02 16:21:07 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-02 16:21:07 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 192 ms
[2024-12-02 16:21:07 INFO restartedMain] [com.green.greengramver2.common.MyFileUtils] MFU 생성자: D:\Students\jang jin seong\download\greengram_ver2
[2024-12-02 16:21:07 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-02 16:21:07 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-02 16:21:07 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-02 16:21:07 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-02 16:21:07 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Started GreenGramVer2Application in 0.337 seconds (process running for 44.761)
[2024-12-02 16:21:07 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-02 16:21:50 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 2 class path changes (0 additions, 0 deletions, 2 modifications)
[2024-12-02 16:21:50 INFO Thread-7] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-02 16:21:50 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 11484 (D:\Students\jang jin seong\GreenGramVer2\build\classes\java\main started by Administrator in D:\Students\jang jin seong\GreenGramVer2)
[2024-12-02 16:21:50 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-02 16:21:50 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-02 16:21:50 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-02 16:21:50 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-02 16:21:50 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-02 16:21:50 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-02 16:21:50 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 190 ms
[2024-12-02 16:21:50 INFO restartedMain] [com.green.greengramver2.common.MyFileUtils] MFU 생성자: D:\Students\jang jin seong\download\greengram_ver2
[2024-12-02 16:21:50 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-02 16:21:50 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-02 16:21:50 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-02 16:21:50 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-02 16:21:50 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Started GreenGramVer2Application in 0.326 seconds (process running for 87.838)
[2024-12-02 16:21:50 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-02 16:23:29 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 12468 (D:\Students\jang jin seong\GreenGramVer2\build\classes\java\main started by Administrator in D:\Students\jang jin seong\GreenGramVer2)
[2024-12-02 16:23:29 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-02 16:23:29 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-02 16:23:29 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-02 16:23:30 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-02 16:23:30 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-02 16:23:30 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-02 16:23:30 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-02 16:23:30 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-02 16:23:30 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 784 ms
[2024-12-02 16:23:30 INFO restartedMain] [com.green.greengramver2.common.MyFileUtils] MFU 생성자: D:\Students\jang jin seong\download\greengram_ver2
[2024-12-02 16:23:30 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-02 16:23:30 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-02 16:23:30 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-02 16:23:30 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-02 16:23:30 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Started GreenGramVer2Application in 1.733 seconds (process running for 2.2)
[2024-12-02 16:23:32 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-02 16:23:32 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-02 16:23:32 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-02 16:23:32 INFO http-nio-8080-exec-6] [com.green.greengramver2.feed.model.FeedGetReq] FeedGetReq 1,null,5
[2024-12-02 16:23:32 INFO http-nio-8080-exec-6] [com.green.greengramver2.feed.FeedController] feedC getFeedList p: FeedGetReq(super=Paging(page=1, size=20, sIdx=0), signedUserId=5)
[2024-12-02 16:23:32 INFO http-nio-8080-exec-6] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-02 16:23:32 INFO http-nio-8080-exec-6] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@25af4e37
[2024-12-02 16:23:32 INFO http-nio-8080-exec-6] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-02 16:23:32 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, writer_user_id AS writerUserId,
        if(nick_name IS NULL , uid, nick_name) AS writerNm,
        pic AS writerPic, contents, location, a.created_at AS createdAt,
        if(c.feed_id IS NULL ,0 , 1) AS isLike
        FROM feed A
        JOIN user B
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c
        ON a.feed_id = c.feed_id
        AND c.user_id = 5
        ORDER BY a.feed_id DESC
        LIMIT 0,20
 {executed in 0 msec}
[2024-12-02 16:23:32 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|feed_id |writer_user_id |writernm |pic                                      |contents     |location |created_at          |islike |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|27      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |I am panguin |남극       |2024-11-29 17:07:59 |0      |
|26      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |I am panguin |남극       |2024-11-29 16:46:01 |0      |
|25      |5              |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |4123         |213      |2024-11-29 16:32:31 |0      |
|24      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |31231        |123      |2024-11-29 16:01:53 |0      |
|23      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |4754         |444      |2024-11-29 16:00:03 |0      |
|22      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |aaa          |aa       |2024-11-29 15:58:25 |0      |
|14      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:51:21 |0      |
|13      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:51:14 |0      |
|12      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:42:17 |0      |
|11      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |123          |33123    |2024-11-29 10:42:01 |0      |
|9       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |21123        |3        |2024-11-29 10:37:22 |0      |
|7       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-28 17:20:59 |0      |
|6       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |             |         |2024-11-28 17:15:01 |0      |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|

[2024-12-02 16:23:32 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 27
 {executed in 0 msec}
[2024-12-02 16:23:32 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5a0d637a-00c7-441f-a9fa-c0dc68af2602.jpg |
|-----------------------------------------|

[2024-12-02 16:23:32 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 27
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:23:32 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|5       |7               |2       |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |6               |123     |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |5               |ㅇ       |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |4               |ㅇ       |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-02 16:23:32 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 26
 {executed in 0 msec}
[2024-12-02 16:23:32 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3e5fe979-fe9c-4ed6-9ad7-c1dbf4f2538f.jpg |
|-----------------------------------------|

[2024-12-02 16:23:32 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 26
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:23:32 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|5       |8               |123     |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-02 16:23:32 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 25
 {executed in 1 msec}
[2024-12-02 16:23:32 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|8213634a-99df-42d8-963e-87bc120cc8a7.jpg |
|-----------------------------------------|

[2024-12-02 16:23:32 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 25
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:23:32 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 16:23:32 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 24
 {executed in 0 msec}
[2024-12-02 16:23:32 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|dfe6f2c1-3753-4a6a-aff4-0de7fa2786b8.jpg |
|-----------------------------------------|

[2024-12-02 16:23:32 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 24
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:23:32 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 16:23:32 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 23
 {executed in 0 msec}
[2024-12-02 16:23:32 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f3e6375d-35d8-4a4a-a976-26ca5c6abaac.jpg |
|-----------------------------------------|

[2024-12-02 16:23:32 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 23
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:23:32 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 16:23:32 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 22
 {executed in 0 msec}
[2024-12-02 16:23:32 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e97360ca-fe79-48c3-acaa-cd71042a0a78.tif |
|-----------------------------------------|

[2024-12-02 16:23:32 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 22
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:23:32 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 16:23:32 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 14
 {executed in 0 msec}
[2024-12-02 16:23:32 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a3709fe6-3e0d-4f04-8cef-1cc328c4fc0c.jpg |
|ada457b9-68aa-4a78-b0c8-c5035af844e2.jpg |
|-----------------------------------------|

[2024-12-02 16:23:32 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 14
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:23:32 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 16:23:32 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 13
 {executed in 0 msec}
[2024-12-02 16:23:32 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6fe5de58-57ef-47e7-80c7-49c0506ca143.jpg |
|920ca8e8-5dc2-4844-aa7f-d7782e94d380.jpg |
|-----------------------------------------|

[2024-12-02 16:23:32 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 13
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-02 16:23:32 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 16:23:32 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 12
 {executed in 0 msec}
[2024-12-02 16:23:32 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|84e77be4-2b62-4f40-8f8b-0803e1080449.jpg |
|84f31709-40aa-40eb-a7e7-da0219067927.jpg |
|-----------------------------------------|

[2024-12-02 16:23:32 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 12
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:23:32 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 16:23:32 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 11
 {executed in 1 msec}
[2024-12-02 16:23:32 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3fc51a83-46ea-43ca-a85b-6fad4794a2bd.jpg |
|49906eb9-a412-4428-a629-baccbe152c75.jpg |
|-----------------------------------------|

[2024-12-02 16:23:32 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 11
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-02 16:23:32 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 16:23:32 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 9
 {executed in 0 msec}
[2024-12-02 16:23:32 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|34669219-c5d3-4d84-a277-fd8c2b8bca4f.jpg |
|f1ed44ba-1254-4232-9a0d-65037abe1e9c.jpg |
|-----------------------------------------|

[2024-12-02 16:23:32 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 9
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:23:32 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 16:23:32 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 7
 {executed in 1 msec}
[2024-12-02 16:23:32 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|14ecfa41-07fc-40d0-b50b-3fe95a840992.jpg |
|2694c9a6-a7b3-4800-ac73-0c853e16a152.jpg |
|-----------------------------------------|

[2024-12-02 16:23:32 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 7
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:23:32 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 16:23:32 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 6
 {executed in 1 msec}
[2024-12-02 16:23:32 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3c31d519-96b0-49bd-8657-d1eac4fb3fc1.jpg |
|-----------------------------------------|

[2024-12-02 16:23:32 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 6
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:23:32 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 16:23:46 INFO http-nio-8080-exec-3] [org.springdoc.api.AbstractOpenApiResource] Init duration for springdoc-openapi is: 158 ms
[2024-12-02 16:24:34 INFO http-nio-8080-exec-8] [com.green.greengramver2.feed.model.FeedGetReq] FeedGetReq 1,20,5
[2024-12-02 16:24:34 INFO http-nio-8080-exec-8] [com.green.greengramver2.feed.FeedController] feedC getFeedList p: FeedGetReq(super=Paging(page=1, size=20, sIdx=0), signedUserId=5)
[2024-12-02 16:24:34 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, writer_user_id AS writerUserId,
        if(nick_name IS NULL , uid, nick_name) AS writerNm,
        pic AS writerPic, contents, location, a.created_at AS createdAt,
        if(c.feed_id IS NULL ,0 , 1) AS isLike
        FROM feed A
        JOIN user B
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c
        ON a.feed_id = c.feed_id
        AND c.user_id = 5
        ORDER BY a.feed_id DESC
        LIMIT 0,20
 {executed in 1 msec}
[2024-12-02 16:24:34 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|feed_id |writer_user_id |writernm |pic                                      |contents     |location |created_at          |islike |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|27      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |I am panguin |남극       |2024-11-29 17:07:59 |0      |
|26      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |I am panguin |남극       |2024-11-29 16:46:01 |0      |
|25      |5              |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |4123         |213      |2024-11-29 16:32:31 |0      |
|24      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |31231        |123      |2024-11-29 16:01:53 |0      |
|23      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |4754         |444      |2024-11-29 16:00:03 |0      |
|22      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |aaa          |aa       |2024-11-29 15:58:25 |0      |
|14      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:51:21 |0      |
|13      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:51:14 |0      |
|12      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:42:17 |0      |
|11      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |123          |33123    |2024-11-29 10:42:01 |0      |
|9       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |21123        |3        |2024-11-29 10:37:22 |0      |
|7       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-28 17:20:59 |0      |
|6       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |             |         |2024-11-28 17:15:01 |0      |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|

[2024-12-02 16:24:34 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 27
 {executed in 1 msec}
[2024-12-02 16:24:34 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5a0d637a-00c7-441f-a9fa-c0dc68af2602.jpg |
|-----------------------------------------|

[2024-12-02 16:24:34 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 27
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:24:34 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|5       |7               |2       |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |6               |123     |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |5               |ㅇ       |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |4               |ㅇ       |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-02 16:24:34 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 26
 {executed in 1 msec}
[2024-12-02 16:24:34 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3e5fe979-fe9c-4ed6-9ad7-c1dbf4f2538f.jpg |
|-----------------------------------------|

[2024-12-02 16:24:34 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 26
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:24:34 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|5       |8               |123     |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-02 16:24:34 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 25
 {executed in 0 msec}
[2024-12-02 16:24:34 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|8213634a-99df-42d8-963e-87bc120cc8a7.jpg |
|-----------------------------------------|

[2024-12-02 16:24:34 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 25
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-02 16:24:34 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 16:24:34 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 24
 {executed in 0 msec}
[2024-12-02 16:24:34 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|dfe6f2c1-3753-4a6a-aff4-0de7fa2786b8.jpg |
|-----------------------------------------|

[2024-12-02 16:24:34 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 24
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:24:34 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 16:24:34 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 23
 {executed in 0 msec}
[2024-12-02 16:24:34 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f3e6375d-35d8-4a4a-a976-26ca5c6abaac.jpg |
|-----------------------------------------|

[2024-12-02 16:24:34 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 23
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:24:34 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 16:24:34 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 22
 {executed in 0 msec}
[2024-12-02 16:24:34 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e97360ca-fe79-48c3-acaa-cd71042a0a78.tif |
|-----------------------------------------|

[2024-12-02 16:24:34 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 22
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:24:34 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 16:24:34 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 14
 {executed in 0 msec}
[2024-12-02 16:24:34 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a3709fe6-3e0d-4f04-8cef-1cc328c4fc0c.jpg |
|ada457b9-68aa-4a78-b0c8-c5035af844e2.jpg |
|-----------------------------------------|

[2024-12-02 16:24:34 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 14
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:24:34 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 16:24:34 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 13
 {executed in 0 msec}
[2024-12-02 16:24:34 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6fe5de58-57ef-47e7-80c7-49c0506ca143.jpg |
|920ca8e8-5dc2-4844-aa7f-d7782e94d380.jpg |
|-----------------------------------------|

[2024-12-02 16:24:34 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 13
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:24:34 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 16:24:34 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 12
 {executed in 0 msec}
[2024-12-02 16:24:34 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|84e77be4-2b62-4f40-8f8b-0803e1080449.jpg |
|84f31709-40aa-40eb-a7e7-da0219067927.jpg |
|-----------------------------------------|

[2024-12-02 16:24:34 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 12
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:24:34 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 16:24:34 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 11
 {executed in 0 msec}
[2024-12-02 16:24:34 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3fc51a83-46ea-43ca-a85b-6fad4794a2bd.jpg |
|49906eb9-a412-4428-a629-baccbe152c75.jpg |
|-----------------------------------------|

[2024-12-02 16:24:34 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 11
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:24:34 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 16:24:34 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 9
 {executed in 0 msec}
[2024-12-02 16:24:34 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|34669219-c5d3-4d84-a277-fd8c2b8bca4f.jpg |
|f1ed44ba-1254-4232-9a0d-65037abe1e9c.jpg |
|-----------------------------------------|

[2024-12-02 16:24:34 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 9
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:24:34 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 16:24:34 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 7
 {executed in 0 msec}
[2024-12-02 16:24:34 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|14ecfa41-07fc-40d0-b50b-3fe95a840992.jpg |
|2694c9a6-a7b3-4800-ac73-0c853e16a152.jpg |
|-----------------------------------------|

[2024-12-02 16:24:34 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 7
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:24:34 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 16:24:34 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 6
 {executed in 0 msec}
[2024-12-02 16:24:34 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3c31d519-96b0-49bd-8657-d1eac4fb3fc1.jpg |
|-----------------------------------------|

[2024-12-02 16:24:34 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 6
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:24:34 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 16:25:08 INFO http-nio-8080-exec-9] [com.green.greengramver2.feed.model.FeedGetReq] FeedGetReq 1,20,2
[2024-12-02 16:25:08 INFO http-nio-8080-exec-9] [com.green.greengramver2.feed.FeedController] feedC getFeedList p: FeedGetReq(super=Paging(page=1, size=20, sIdx=0), signedUserId=2)
[2024-12-02 16:25:08 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, writer_user_id AS writerUserId,
        if(nick_name IS NULL , uid, nick_name) AS writerNm,
        pic AS writerPic, contents, location, a.created_at AS createdAt,
        if(c.feed_id IS NULL ,0 , 1) AS isLike
        FROM feed A
        JOIN user B
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c
        ON a.feed_id = c.feed_id
        AND c.user_id = 2
        ORDER BY a.feed_id DESC
        LIMIT 0,20
 {executed in 0 msec}
[2024-12-02 16:25:08 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|feed_id |writer_user_id |writernm |pic                                      |contents     |location |created_at          |islike |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|27      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |I am panguin |남극       |2024-11-29 17:07:59 |0      |
|26      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |I am panguin |남극       |2024-11-29 16:46:01 |0      |
|25      |5              |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |4123         |213      |2024-11-29 16:32:31 |0      |
|24      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |31231        |123      |2024-11-29 16:01:53 |0      |
|23      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |4754         |444      |2024-11-29 16:00:03 |0      |
|22      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |aaa          |aa       |2024-11-29 15:58:25 |0      |
|14      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:51:21 |0      |
|13      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:51:14 |0      |
|12      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:42:17 |0      |
|11      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |123          |33123    |2024-11-29 10:42:01 |0      |
|9       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |21123        |3        |2024-11-29 10:37:22 |0      |
|7       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-28 17:20:59 |0      |
|6       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |             |         |2024-11-28 17:15:01 |0      |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|

[2024-12-02 16:25:08 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 27
 {executed in 1 msec}
[2024-12-02 16:25:08 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5a0d637a-00c7-441f-a9fa-c0dc68af2602.jpg |
|-----------------------------------------|

[2024-12-02 16:25:08 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 27
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:25:08 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|5       |7               |2       |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |6               |123     |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |5               |ㅇ       |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |4               |ㅇ       |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-02 16:25:08 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 26
 {executed in 0 msec}
[2024-12-02 16:25:08 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3e5fe979-fe9c-4ed6-9ad7-c1dbf4f2538f.jpg |
|-----------------------------------------|

[2024-12-02 16:25:08 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 26
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:25:08 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|5       |8               |123     |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-02 16:25:08 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 25
 {executed in 0 msec}
[2024-12-02 16:25:08 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|8213634a-99df-42d8-963e-87bc120cc8a7.jpg |
|-----------------------------------------|

[2024-12-02 16:25:08 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 25
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:25:08 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 16:25:08 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 24
 {executed in 0 msec}
[2024-12-02 16:25:08 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|dfe6f2c1-3753-4a6a-aff4-0de7fa2786b8.jpg |
|-----------------------------------------|

[2024-12-02 16:25:08 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 24
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:25:08 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 16:25:08 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 23
 {executed in 1 msec}
[2024-12-02 16:25:08 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f3e6375d-35d8-4a4a-a976-26ca5c6abaac.jpg |
|-----------------------------------------|

[2024-12-02 16:25:08 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 23
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:25:08 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 16:25:08 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 22
 {executed in 0 msec}
[2024-12-02 16:25:08 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e97360ca-fe79-48c3-acaa-cd71042a0a78.tif |
|-----------------------------------------|

[2024-12-02 16:25:08 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 22
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:25:08 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 16:25:08 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 14
 {executed in 0 msec}
[2024-12-02 16:25:08 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a3709fe6-3e0d-4f04-8cef-1cc328c4fc0c.jpg |
|ada457b9-68aa-4a78-b0c8-c5035af844e2.jpg |
|-----------------------------------------|

[2024-12-02 16:25:08 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 14
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:25:08 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 16:25:08 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 13
 {executed in 0 msec}
[2024-12-02 16:25:08 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6fe5de58-57ef-47e7-80c7-49c0506ca143.jpg |
|920ca8e8-5dc2-4844-aa7f-d7782e94d380.jpg |
|-----------------------------------------|

[2024-12-02 16:25:08 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 13
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:25:08 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 16:25:08 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 12
 {executed in 0 msec}
[2024-12-02 16:25:08 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|84e77be4-2b62-4f40-8f8b-0803e1080449.jpg |
|84f31709-40aa-40eb-a7e7-da0219067927.jpg |
|-----------------------------------------|

[2024-12-02 16:25:08 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 12
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:25:08 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 16:25:08 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 11
 {executed in 0 msec}
[2024-12-02 16:25:08 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3fc51a83-46ea-43ca-a85b-6fad4794a2bd.jpg |
|49906eb9-a412-4428-a629-baccbe152c75.jpg |
|-----------------------------------------|

[2024-12-02 16:25:08 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 11
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:25:08 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 16:25:08 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 9
 {executed in 0 msec}
[2024-12-02 16:25:08 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|34669219-c5d3-4d84-a277-fd8c2b8bca4f.jpg |
|f1ed44ba-1254-4232-9a0d-65037abe1e9c.jpg |
|-----------------------------------------|

[2024-12-02 16:25:08 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 9
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:25:08 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 16:25:08 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 7
 {executed in 0 msec}
[2024-12-02 16:25:08 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|14ecfa41-07fc-40d0-b50b-3fe95a840992.jpg |
|2694c9a6-a7b3-4800-ac73-0c853e16a152.jpg |
|-----------------------------------------|

[2024-12-02 16:25:08 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 7
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:25:08 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 16:25:08 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 6
 {executed in 1 msec}
[2024-12-02 16:25:08 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3c31d519-96b0-49bd-8657-d1eac4fb3fc1.jpg |
|-----------------------------------------|

[2024-12-02 16:25:08 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 6
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:25:08 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 16:41:01 INFO http-nio-8080-exec-8] [org.apache.coyote.http11.Http11Processor] Error parsing HTTP request header
 Note: further occurrences of HTTP request parsing errors will be logged at DEBUG level.
java.lang.IllegalArgumentException: Invalid character found in the HTTP protocol [RTSP/1.00x0d0x0a0x0d0x0a...]
	at org.apache.coyote.http11.Http11InputBuffer.parseRequestLine(Http11InputBuffer.java:557)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:270)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-02 16:41:35 WARN http-nio-8080-exec-1] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'POST' is not supported]
[2024-12-02 16:41:37 WARN http-nio-8080-exec-7] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'PROPFIND' is not supported]
[2024-12-02 16:41:42 WARN http-nio-8080-exec-6] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'PROPFIND' is not supported]
[2024-12-02 16:41:51 WARN http-nio-8080-exec-5] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'PROPFIND' is not supported]
[2024-12-02 16:41:56 WARN http-nio-8080-exec-4] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'FUXS' is not supported]
[2024-12-02 16:41:57 WARN http-nio-8080-exec-7] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'POST' is not supported]
[2024-12-02 16:44:09 WARN http-nio-8080-exec-4] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'TRLN' is not supported]
[2024-12-02 16:44:09 WARN http-nio-8080-exec-7] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'POST' is not supported]
[2024-12-02 16:44:11 WARN http-nio-8080-exec-1] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'PROPFIND' is not supported]
[2024-12-02 16:44:12 WARN http-nio-8080-exec-3] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'PROPFIND' is not supported]
[2024-12-02 16:44:12 WARN http-nio-8080-exec-10] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'PROPFIND' is not supported]
[2024-12-02 16:44:19 WARN http-nio-8080-exec-9] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'POST' is not supported]
[2024-12-02 16:46:00 INFO http-nio-8080-exec-10] [org.apache.coyote.http11.Http11Processor] Error parsing HTTP request header
 Note: further occurrences of HTTP request parsing errors will be logged at DEBUG level.
java.lang.IllegalArgumentException: Invalid character found in the HTTP protocol [RTSP/1.00x0d0x0a0x0d0x0a...]
	at org.apache.coyote.http11.Http11InputBuffer.parseRequestLine(Http11InputBuffer.java:557)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:270)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-02 16:46:30 WARN http-nio-8080-exec-3] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'POST' is not supported]
[2024-12-02 16:46:41 WARN http-nio-8080-exec-1] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'PROPFIND' is not supported]
[2024-12-02 16:46:43 WARN http-nio-8080-exec-3] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'PROPFIND' is not supported]
[2024-12-02 16:46:43 WARN http-nio-8080-exec-10] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'PROPFIND' is not supported]
[2024-12-02 16:46:52 WARN http-nio-8080-exec-7] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'BACC' is not supported]
[2024-12-02 16:46:52 WARN http-nio-8080-exec-9] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'POST' is not supported]
[2024-12-02 16:53:09 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-02 16:53:09 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-02 16:54:23 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 12568 (D:\Students\jang jin seong\GreenGramVer2\build\classes\java\main started by Administrator in D:\Students\jang jin seong\GreenGramVer2)
[2024-12-02 16:54:23 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-02 16:54:23 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-02 16:54:23 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-02 16:54:24 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-02 16:54:24 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-02 16:54:24 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-02 16:54:24 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-02 16:54:24 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-02 16:54:24 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 945 ms
[2024-12-02 16:54:24 INFO restartedMain] [com.green.greengramver2.common.MyFileUtils] MFU 생성자: D:\Students\jang jin seong\download\greengram_ver2
[2024-12-02 16:54:25 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-02 16:54:25 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-02 16:54:25 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-02 16:54:25 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Started GreenGramVer2Application in 1.869 seconds (process running for 2.332)
[2024-12-02 16:54:32 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-02 16:54:32 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-02 16:54:32 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-02 16:55:31 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 11840 (D:\Students\jang jin seong\GreenGramVer2\build\classes\java\main started by Administrator in D:\Students\jang jin seong\GreenGramVer2)
[2024-12-02 16:55:31 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-02 16:55:31 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-02 16:55:31 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-02 16:55:32 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-02 16:55:32 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-02 16:55:32 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-02 16:55:32 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-02 16:55:32 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-02 16:55:32 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 768 ms
[2024-12-02 16:55:32 INFO restartedMain] [com.green.greengramver2.common.MyFileUtils] MFU 생성자: D:\Students\jang jin seong\download\greengram_ver2
[2024-12-02 16:55:32 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-02 16:55:32 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-02 16:55:32 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-02 16:55:32 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-02 16:55:32 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Started GreenGramVer2Application in 1.607 seconds (process running for 1.963)
[2024-12-02 16:55:37 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-02 16:55:37 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-02 16:55:37 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 0 ms
[2024-12-02 16:55:37 INFO http-nio-8080-exec-7] [com.green.greengramver2.feed.model.FeedGetReq] FeedGetReq 1,null,5
[2024-12-02 16:55:37 INFO http-nio-8080-exec-7] [com.green.greengramver2.feed.FeedController] feedC getFeedList p: FeedGetReq(super=Paging(page=1, size=20, sIdx=0), signedUserId=5)
[2024-12-02 16:55:37 INFO http-nio-8080-exec-7] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-02 16:55:38 INFO http-nio-8080-exec-7] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@25af4e37
[2024-12-02 16:55:38 INFO http-nio-8080-exec-7] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-02 16:55:38 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, writer_user_id AS writerUserId,
        if(nick_name IS NULL , uid, nick_name) AS writerNm,
        pic AS writerPic, contents, location, a.created_at AS createdAt,
        if(c.feed_id IS NULL ,0 , 1) AS isLike
        FROM feed A
        JOIN user B
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c
        ON a.feed_id = c.feed_id
        AND c.user_id = 5
        ORDER BY a.feed_id DESC
        LIMIT 0,20
 {executed in 1 msec}
[2024-12-02 16:55:38 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|feed_id |writer_user_id |writernm |pic                                      |contents     |location |created_at          |islike |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|27      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |I am panguin |남극       |2024-11-29 17:07:59 |0      |
|26      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |I am panguin |남극       |2024-11-29 16:46:01 |0      |
|25      |5              |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |4123         |213      |2024-11-29 16:32:31 |0      |
|24      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |31231        |123      |2024-11-29 16:01:53 |0      |
|23      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |4754         |444      |2024-11-29 16:00:03 |0      |
|22      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |aaa          |aa       |2024-11-29 15:58:25 |0      |
|14      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:51:21 |0      |
|13      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:51:14 |0      |
|12      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:42:17 |0      |
|11      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |123          |33123    |2024-11-29 10:42:01 |0      |
|9       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |21123        |3        |2024-11-29 10:37:22 |0      |
|7       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-28 17:20:59 |0      |
|6       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |             |         |2024-11-28 17:15:01 |0      |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|

[2024-12-02 16:55:38 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 27
 {executed in 0 msec}
[2024-12-02 16:55:38 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5a0d637a-00c7-441f-a9fa-c0dc68af2602.jpg |
|-----------------------------------------|

[2024-12-02 16:55:38 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 27
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-02 16:55:38 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|5       |7               |2       |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |6               |123     |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |5               |ㅇ       |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |4               |ㅇ       |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-02 16:55:38 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 26
 {executed in 0 msec}
[2024-12-02 16:55:38 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3e5fe979-fe9c-4ed6-9ad7-c1dbf4f2538f.jpg |
|-----------------------------------------|

[2024-12-02 16:55:38 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 26
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:55:38 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|5       |8               |123     |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-02 16:55:38 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 25
 {executed in 0 msec}
[2024-12-02 16:55:38 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|8213634a-99df-42d8-963e-87bc120cc8a7.jpg |
|-----------------------------------------|

[2024-12-02 16:55:38 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 25
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:55:38 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 16:55:38 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 24
 {executed in 0 msec}
[2024-12-02 16:55:38 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|dfe6f2c1-3753-4a6a-aff4-0de7fa2786b8.jpg |
|-----------------------------------------|

[2024-12-02 16:55:38 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 24
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-02 16:55:38 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 16:55:38 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 23
 {executed in 0 msec}
[2024-12-02 16:55:38 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f3e6375d-35d8-4a4a-a976-26ca5c6abaac.jpg |
|-----------------------------------------|

[2024-12-02 16:55:38 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 23
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:55:38 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 16:55:38 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 22
 {executed in 0 msec}
[2024-12-02 16:55:38 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e97360ca-fe79-48c3-acaa-cd71042a0a78.tif |
|-----------------------------------------|

[2024-12-02 16:55:38 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 22
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:55:38 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 16:55:38 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 14
 {executed in 0 msec}
[2024-12-02 16:55:38 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a3709fe6-3e0d-4f04-8cef-1cc328c4fc0c.jpg |
|ada457b9-68aa-4a78-b0c8-c5035af844e2.jpg |
|-----------------------------------------|

[2024-12-02 16:55:38 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 14
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:55:38 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 16:55:38 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 13
 {executed in 0 msec}
[2024-12-02 16:55:38 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6fe5de58-57ef-47e7-80c7-49c0506ca143.jpg |
|920ca8e8-5dc2-4844-aa7f-d7782e94d380.jpg |
|-----------------------------------------|

[2024-12-02 16:55:38 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 13
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-02 16:55:38 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 16:55:38 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 12
 {executed in 0 msec}
[2024-12-02 16:55:38 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|84e77be4-2b62-4f40-8f8b-0803e1080449.jpg |
|84f31709-40aa-40eb-a7e7-da0219067927.jpg |
|-----------------------------------------|

[2024-12-02 16:55:38 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 12
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:55:38 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 16:55:38 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 11
 {executed in 0 msec}
[2024-12-02 16:55:38 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3fc51a83-46ea-43ca-a85b-6fad4794a2bd.jpg |
|49906eb9-a412-4428-a629-baccbe152c75.jpg |
|-----------------------------------------|

[2024-12-02 16:55:38 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 11
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:55:38 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 16:55:38 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 9
 {executed in 0 msec}
[2024-12-02 16:55:38 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|34669219-c5d3-4d84-a277-fd8c2b8bca4f.jpg |
|f1ed44ba-1254-4232-9a0d-65037abe1e9c.jpg |
|-----------------------------------------|

[2024-12-02 16:55:38 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 9
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:55:38 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 16:55:38 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 7
 {executed in 0 msec}
[2024-12-02 16:55:38 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|14ecfa41-07fc-40d0-b50b-3fe95a840992.jpg |
|2694c9a6-a7b3-4800-ac73-0c853e16a152.jpg |
|-----------------------------------------|

[2024-12-02 16:55:38 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 7
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:55:38 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 16:55:38 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 6
 {executed in 0 msec}
[2024-12-02 16:55:38 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3c31d519-96b0-49bd-8657-d1eac4fb3fc1.jpg |
|-----------------------------------------|

[2024-12-02 16:55:38 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 6
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:55:38 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 16:55:43 WARN http-nio-8080-exec-2] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'DELETE' is not supported]
[2024-12-02 16:55:46 INFO http-nio-8080-exec-3] [com.green.greengramver2.feed.model.FeedGetReq] FeedGetReq 1,null,5
[2024-12-02 16:55:46 INFO http-nio-8080-exec-3] [com.green.greengramver2.feed.FeedController] feedC getFeedList p: FeedGetReq(super=Paging(page=1, size=20, sIdx=0), signedUserId=5)
[2024-12-02 16:55:46 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, writer_user_id AS writerUserId,
        if(nick_name IS NULL , uid, nick_name) AS writerNm,
        pic AS writerPic, contents, location, a.created_at AS createdAt,
        if(c.feed_id IS NULL ,0 , 1) AS isLike
        FROM feed A
        JOIN user B
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c
        ON a.feed_id = c.feed_id
        AND c.user_id = 5
        ORDER BY a.feed_id DESC
        LIMIT 0,20
 {executed in 1 msec}
[2024-12-02 16:55:46 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|feed_id |writer_user_id |writernm |pic                                      |contents     |location |created_at          |islike |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|27      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |I am panguin |남극       |2024-11-29 17:07:59 |0      |
|26      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |I am panguin |남극       |2024-11-29 16:46:01 |0      |
|25      |5              |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |4123         |213      |2024-11-29 16:32:31 |0      |
|24      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |31231        |123      |2024-11-29 16:01:53 |0      |
|23      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |4754         |444      |2024-11-29 16:00:03 |0      |
|22      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |aaa          |aa       |2024-11-29 15:58:25 |0      |
|14      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:51:21 |0      |
|13      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:51:14 |0      |
|12      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:42:17 |0      |
|11      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |123          |33123    |2024-11-29 10:42:01 |0      |
|9       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |21123        |3        |2024-11-29 10:37:22 |0      |
|7       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-28 17:20:59 |0      |
|6       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |             |         |2024-11-28 17:15:01 |0      |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|

[2024-12-02 16:55:46 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 27
 {executed in 0 msec}
[2024-12-02 16:55:46 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5a0d637a-00c7-441f-a9fa-c0dc68af2602.jpg |
|-----------------------------------------|

[2024-12-02 16:55:46 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 27
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:55:46 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|5       |7               |2       |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |6               |123     |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |5               |ㅇ       |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |4               |ㅇ       |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-02 16:55:46 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 26
 {executed in 0 msec}
[2024-12-02 16:55:46 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3e5fe979-fe9c-4ed6-9ad7-c1dbf4f2538f.jpg |
|-----------------------------------------|

[2024-12-02 16:55:46 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 26
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:55:46 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|5       |8               |123     |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-02 16:55:46 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 25
 {executed in 0 msec}
[2024-12-02 16:55:46 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|8213634a-99df-42d8-963e-87bc120cc8a7.jpg |
|-----------------------------------------|

[2024-12-02 16:55:46 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 25
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:55:46 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 16:55:46 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 24
 {executed in 0 msec}
[2024-12-02 16:55:46 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|dfe6f2c1-3753-4a6a-aff4-0de7fa2786b8.jpg |
|-----------------------------------------|

[2024-12-02 16:55:46 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 24
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:55:46 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 16:55:46 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 23
 {executed in 0 msec}
[2024-12-02 16:55:46 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f3e6375d-35d8-4a4a-a976-26ca5c6abaac.jpg |
|-----------------------------------------|

[2024-12-02 16:55:46 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 23
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:55:46 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 16:55:46 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 22
 {executed in 0 msec}
[2024-12-02 16:55:46 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e97360ca-fe79-48c3-acaa-cd71042a0a78.tif |
|-----------------------------------------|

[2024-12-02 16:55:46 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 22
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:55:46 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 16:55:46 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 14
 {executed in 0 msec}
[2024-12-02 16:55:46 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a3709fe6-3e0d-4f04-8cef-1cc328c4fc0c.jpg |
|ada457b9-68aa-4a78-b0c8-c5035af844e2.jpg |
|-----------------------------------------|

[2024-12-02 16:55:46 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 14
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:55:46 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 16:55:46 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 13
 {executed in 0 msec}
[2024-12-02 16:55:46 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6fe5de58-57ef-47e7-80c7-49c0506ca143.jpg |
|920ca8e8-5dc2-4844-aa7f-d7782e94d380.jpg |
|-----------------------------------------|

[2024-12-02 16:55:46 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 13
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:55:46 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 16:55:46 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 12
 {executed in 0 msec}
[2024-12-02 16:55:46 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|84e77be4-2b62-4f40-8f8b-0803e1080449.jpg |
|84f31709-40aa-40eb-a7e7-da0219067927.jpg |
|-----------------------------------------|

[2024-12-02 16:55:46 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 12
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:55:46 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 16:55:46 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 11
 {executed in 0 msec}
[2024-12-02 16:55:46 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3fc51a83-46ea-43ca-a85b-6fad4794a2bd.jpg |
|49906eb9-a412-4428-a629-baccbe152c75.jpg |
|-----------------------------------------|

[2024-12-02 16:55:46 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 11
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:55:46 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 16:55:46 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 9
 {executed in 1 msec}
[2024-12-02 16:55:46 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|34669219-c5d3-4d84-a277-fd8c2b8bca4f.jpg |
|f1ed44ba-1254-4232-9a0d-65037abe1e9c.jpg |
|-----------------------------------------|

[2024-12-02 16:55:46 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 9
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:55:46 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 16:55:46 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 7
 {executed in 0 msec}
[2024-12-02 16:55:46 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|14ecfa41-07fc-40d0-b50b-3fe95a840992.jpg |
|2694c9a6-a7b3-4800-ac73-0c853e16a152.jpg |
|-----------------------------------------|

[2024-12-02 16:55:46 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 7
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:55:46 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 16:55:46 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 6
 {executed in 0 msec}
[2024-12-02 16:55:46 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3c31d519-96b0-49bd-8657-d1eac4fb3fc1.jpg |
|-----------------------------------------|

[2024-12-02 16:55:46 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 6
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:55:46 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 16:56:02 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select upw, user_id as userId, pic,
        if(nick_name is null ,uid, nick_name) as nickName
        from user
        where uid = '11'
 {executed in 0 msec}
[2024-12-02 16:56:02 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-------------------------------------------------------------|--------|-----------------------------------------|---------|
|upw                                                          |user_id |pic                                      |nickname |
|-------------------------------------------------------------|--------|-----------------------------------------|---------|
|$2a$10$/FL2kogEtMKq8t2tv40iPuuSqwfb5dfNWzRU0jmMWJX2Q28/d8eJS |1       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |33       |
|-------------------------------------------------------------|--------|-----------------------------------------|---------|

[2024-12-02 16:56:02 INFO http-nio-8080-exec-7] [com.green.greengramver2.user.UserService] com.green.greengramver2.user.model.UserSignInReq@1c9b1576
[2024-12-02 16:56:02 INFO http-nio-8080-exec-7] [com.green.greengramver2.user.UserController] UserSignInRes(pic=2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg, nickName=33, userId=1, upw=$2a$10$/FL2kogEtMKq8t2tv40iPuuSqwfb5dfNWzRU0jmMWJX2Q28/d8eJS, msg=로그인 성공)
[2024-12-02 16:56:02 INFO http-nio-8080-exec-10] [com.green.greengramver2.feed.model.FeedGetReq] FeedGetReq 1,null,1
[2024-12-02 16:56:02 INFO http-nio-8080-exec-10] [com.green.greengramver2.feed.FeedController] feedC getFeedList p: FeedGetReq(super=Paging(page=1, size=20, sIdx=0), signedUserId=1)
[2024-12-02 16:56:02 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, writer_user_id AS writerUserId,
        if(nick_name IS NULL , uid, nick_name) AS writerNm,
        pic AS writerPic, contents, location, a.created_at AS createdAt,
        if(c.feed_id IS NULL ,0 , 1) AS isLike
        FROM feed A
        JOIN user B
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c
        ON a.feed_id = c.feed_id
        AND c.user_id = 1
        ORDER BY a.feed_id DESC
        LIMIT 0,20
 {executed in 0 msec}
[2024-12-02 16:56:02 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|feed_id |writer_user_id |writernm |pic                                      |contents     |location |created_at          |islike |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|27      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |I am panguin |남극       |2024-11-29 17:07:59 |0      |
|26      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |I am panguin |남극       |2024-11-29 16:46:01 |0      |
|25      |5              |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |4123         |213      |2024-11-29 16:32:31 |0      |
|24      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |31231        |123      |2024-11-29 16:01:53 |0      |
|23      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |4754         |444      |2024-11-29 16:00:03 |0      |
|22      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |aaa          |aa       |2024-11-29 15:58:25 |0      |
|14      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:51:21 |1      |
|13      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:51:14 |1      |
|12      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:42:17 |1      |
|11      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |123          |33123    |2024-11-29 10:42:01 |0      |
|9       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |21123        |3        |2024-11-29 10:37:22 |0      |
|7       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-28 17:20:59 |1      |
|6       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |             |         |2024-11-28 17:15:01 |0      |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|

[2024-12-02 16:56:02 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 27
 {executed in 0 msec}
[2024-12-02 16:56:02 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5a0d637a-00c7-441f-a9fa-c0dc68af2602.jpg |
|-----------------------------------------|

[2024-12-02 16:56:02 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 27
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:56:02 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|5       |7               |2       |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |6               |123     |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |5               |ㅇ       |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |4               |ㅇ       |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-02 16:56:02 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 26
 {executed in 0 msec}
[2024-12-02 16:56:02 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3e5fe979-fe9c-4ed6-9ad7-c1dbf4f2538f.jpg |
|-----------------------------------------|

[2024-12-02 16:56:02 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 26
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-02 16:56:02 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|5       |8               |123     |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-02 16:56:02 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 25
 {executed in 0 msec}
[2024-12-02 16:56:02 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|8213634a-99df-42d8-963e-87bc120cc8a7.jpg |
|-----------------------------------------|

[2024-12-02 16:56:02 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 25
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:56:02 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 16:56:02 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 24
 {executed in 1 msec}
[2024-12-02 16:56:02 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|dfe6f2c1-3753-4a6a-aff4-0de7fa2786b8.jpg |
|-----------------------------------------|

[2024-12-02 16:56:02 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 24
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:56:02 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 16:56:02 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 23
 {executed in 0 msec}
[2024-12-02 16:56:02 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f3e6375d-35d8-4a4a-a976-26ca5c6abaac.jpg |
|-----------------------------------------|

[2024-12-02 16:56:02 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 23
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-02 16:56:02 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 16:56:02 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 22
 {executed in 0 msec}
[2024-12-02 16:56:02 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e97360ca-fe79-48c3-acaa-cd71042a0a78.tif |
|-----------------------------------------|

[2024-12-02 16:56:02 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 22
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-02 16:56:02 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 16:56:02 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 14
 {executed in 0 msec}
[2024-12-02 16:56:02 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a3709fe6-3e0d-4f04-8cef-1cc328c4fc0c.jpg |
|ada457b9-68aa-4a78-b0c8-c5035af844e2.jpg |
|-----------------------------------------|

[2024-12-02 16:56:02 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 14
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:56:02 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 16:56:02 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 13
 {executed in 0 msec}
[2024-12-02 16:56:02 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6fe5de58-57ef-47e7-80c7-49c0506ca143.jpg |
|920ca8e8-5dc2-4844-aa7f-d7782e94d380.jpg |
|-----------------------------------------|

[2024-12-02 16:56:02 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 13
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-02 16:56:02 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 16:56:02 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 12
 {executed in 0 msec}
[2024-12-02 16:56:02 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|84e77be4-2b62-4f40-8f8b-0803e1080449.jpg |
|84f31709-40aa-40eb-a7e7-da0219067927.jpg |
|-----------------------------------------|

[2024-12-02 16:56:02 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 12
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-02 16:56:02 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 16:56:02 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 11
 {executed in 0 msec}
[2024-12-02 16:56:02 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3fc51a83-46ea-43ca-a85b-6fad4794a2bd.jpg |
|49906eb9-a412-4428-a629-baccbe152c75.jpg |
|-----------------------------------------|

[2024-12-02 16:56:02 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 11
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:56:02 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 16:56:02 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 9
 {executed in 0 msec}
[2024-12-02 16:56:02 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|34669219-c5d3-4d84-a277-fd8c2b8bca4f.jpg |
|f1ed44ba-1254-4232-9a0d-65037abe1e9c.jpg |
|-----------------------------------------|

[2024-12-02 16:56:02 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 9
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:56:02 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 16:56:02 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 7
 {executed in 0 msec}
[2024-12-02 16:56:02 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|14ecfa41-07fc-40d0-b50b-3fe95a840992.jpg |
|2694c9a6-a7b3-4800-ac73-0c853e16a152.jpg |
|-----------------------------------------|

[2024-12-02 16:56:02 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 7
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:56:02 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 16:56:02 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 6
 {executed in 0 msec}
[2024-12-02 16:56:02 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3c31d519-96b0-49bd-8657-d1eac4fb3fc1.jpg |
|-----------------------------------------|

[2024-12-02 16:56:02 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 6
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:56:02 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 16:56:05 INFO http-nio-8080-exec-1] [com.green.greengramver2.feed.comment.FeedCommentController] feedCommentP FeedCommentPostReq(feedId=26, userId=1, comment=s, feedCommentId=0)
[2024-12-02 16:56:05 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. insert into feed_comments
        set user_id = 1,
            feed_id = 26,
            `comment` = 's'
 {executed in 2 msec}
[2024-12-02 16:56:05 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: insert into feed_comments
        set user_id = 1,
            feed_id = 26,
            `comment` = 's'
 {executed in 1 msec}
[2024-12-02 16:56:05 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|9         |
|----------|

[2024-12-02 16:56:24 WARN http-nio-8080-exec-4] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' is not supported]
[2024-12-02 16:56:25 WARN http-nio-8080-exec-6] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' is not supported]
[2024-12-02 16:56:38 INFO http-nio-8080-exec-2] [com.green.greengramver2.feed.model.FeedGetReq] FeedGetReq 1,null,1
[2024-12-02 16:56:38 INFO http-nio-8080-exec-2] [com.green.greengramver2.feed.FeedController] feedC getFeedList p: FeedGetReq(super=Paging(page=1, size=20, sIdx=0), signedUserId=1)
[2024-12-02 16:56:38 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, writer_user_id AS writerUserId,
        if(nick_name IS NULL , uid, nick_name) AS writerNm,
        pic AS writerPic, contents, location, a.created_at AS createdAt,
        if(c.feed_id IS NULL ,0 , 1) AS isLike
        FROM feed A
        JOIN user B
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c
        ON a.feed_id = c.feed_id
        AND c.user_id = 1
        ORDER BY a.feed_id DESC
        LIMIT 0,20
 {executed in 1 msec}
[2024-12-02 16:56:38 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|feed_id |writer_user_id |writernm |pic                                      |contents     |location |created_at          |islike |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|27      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |I am panguin |남극       |2024-11-29 17:07:59 |0      |
|26      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |I am panguin |남극       |2024-11-29 16:46:01 |0      |
|25      |5              |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |4123         |213      |2024-11-29 16:32:31 |0      |
|24      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |31231        |123      |2024-11-29 16:01:53 |0      |
|23      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |4754         |444      |2024-11-29 16:00:03 |0      |
|22      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |aaa          |aa       |2024-11-29 15:58:25 |0      |
|14      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:51:21 |1      |
|13      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:51:14 |1      |
|12      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:42:17 |1      |
|11      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |123          |33123    |2024-11-29 10:42:01 |0      |
|9       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |21123        |3        |2024-11-29 10:37:22 |0      |
|7       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-28 17:20:59 |1      |
|6       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |             |         |2024-11-28 17:15:01 |0      |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|

[2024-12-02 16:56:38 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 27
 {executed in 0 msec}
[2024-12-02 16:56:38 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5a0d637a-00c7-441f-a9fa-c0dc68af2602.jpg |
|-----------------------------------------|

[2024-12-02 16:56:38 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 27
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:56:38 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|5       |7               |2       |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |6               |123     |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |5               |ㅇ       |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |4               |ㅇ       |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-02 16:56:38 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 26
 {executed in 0 msec}
[2024-12-02 16:56:38 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3e5fe979-fe9c-4ed6-9ad7-c1dbf4f2538f.jpg |
|-----------------------------------------|

[2024-12-02 16:56:38 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 26
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-02 16:56:38 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|1       |9               |s       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|5       |8               |123     |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-02 16:56:38 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 25
 {executed in 0 msec}
[2024-12-02 16:56:38 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|8213634a-99df-42d8-963e-87bc120cc8a7.jpg |
|-----------------------------------------|

[2024-12-02 16:56:38 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 25
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-02 16:56:38 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 16:56:38 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 24
 {executed in 0 msec}
[2024-12-02 16:56:38 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|dfe6f2c1-3753-4a6a-aff4-0de7fa2786b8.jpg |
|-----------------------------------------|

[2024-12-02 16:56:38 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 24
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:56:38 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 16:56:38 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 23
 {executed in 0 msec}
[2024-12-02 16:56:38 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f3e6375d-35d8-4a4a-a976-26ca5c6abaac.jpg |
|-----------------------------------------|

[2024-12-02 16:56:38 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 23
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:56:38 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 16:56:38 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 22
 {executed in 1 msec}
[2024-12-02 16:56:38 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e97360ca-fe79-48c3-acaa-cd71042a0a78.tif |
|-----------------------------------------|

[2024-12-02 16:56:38 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 22
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:56:38 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 16:56:38 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 14
 {executed in 0 msec}
[2024-12-02 16:56:38 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a3709fe6-3e0d-4f04-8cef-1cc328c4fc0c.jpg |
|ada457b9-68aa-4a78-b0c8-c5035af844e2.jpg |
|-----------------------------------------|

[2024-12-02 16:56:38 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 14
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:56:38 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 16:56:38 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 13
 {executed in 0 msec}
[2024-12-02 16:56:38 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6fe5de58-57ef-47e7-80c7-49c0506ca143.jpg |
|920ca8e8-5dc2-4844-aa7f-d7782e94d380.jpg |
|-----------------------------------------|

[2024-12-02 16:56:38 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 13
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-02 16:56:38 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 16:56:38 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 12
 {executed in 0 msec}
[2024-12-02 16:56:38 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|84e77be4-2b62-4f40-8f8b-0803e1080449.jpg |
|84f31709-40aa-40eb-a7e7-da0219067927.jpg |
|-----------------------------------------|

[2024-12-02 16:56:38 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 12
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-02 16:56:38 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 16:56:38 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 11
 {executed in 0 msec}
[2024-12-02 16:56:38 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3fc51a83-46ea-43ca-a85b-6fad4794a2bd.jpg |
|49906eb9-a412-4428-a629-baccbe152c75.jpg |
|-----------------------------------------|

[2024-12-02 16:56:38 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 11
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-02 16:56:38 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 16:56:38 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 9
 {executed in 0 msec}
[2024-12-02 16:56:38 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|34669219-c5d3-4d84-a277-fd8c2b8bca4f.jpg |
|f1ed44ba-1254-4232-9a0d-65037abe1e9c.jpg |
|-----------------------------------------|

[2024-12-02 16:56:38 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 9
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-02 16:56:38 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 16:56:38 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 7
 {executed in 0 msec}
[2024-12-02 16:56:38 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|14ecfa41-07fc-40d0-b50b-3fe95a840992.jpg |
|2694c9a6-a7b3-4800-ac73-0c853e16a152.jpg |
|-----------------------------------------|

[2024-12-02 16:56:38 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 7
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:56:38 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 16:56:38 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 6
 {executed in 0 msec}
[2024-12-02 16:56:38 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3c31d519-96b0-49bd-8657-d1eac4fb3fc1.jpg |
|-----------------------------------------|

[2024-12-02 16:56:38 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 6
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:56:38 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 17:01:08 WARN http-nio-8080-exec-5] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' is not supported]
[2024-12-02 17:10:43 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 1 class path change (1 addition, 0 deletions, 0 modifications)
[2024-12-02 17:10:43 INFO Thread-5] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-02 17:10:43 INFO Thread-5] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-02 17:10:43 INFO Thread-5] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-02 17:10:43 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 11840 (D:\Students\jang jin seong\GreenGramVer2\build\classes\java\main started by Administrator in D:\Students\jang jin seong\GreenGramVer2)
[2024-12-02 17:10:43 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-02 17:10:44 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-02 17:10:44 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-02 17:10:44 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-02 17:10:44 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-02 17:10:44 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-02 17:10:44 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 185 ms
[2024-12-02 17:10:44 INFO restartedMain] [com.green.greengramver2.common.MyFileUtils] MFU 생성자: D:\Students\jang jin seong\download\greengram_ver2
[2024-12-02 17:10:44 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-02 17:10:44 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-02 17:10:44 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-02 17:10:44 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-02 17:10:44 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Started GreenGramVer2Application in 0.362 seconds (process running for 913.489)
[2024-12-02 17:10:44 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-02 17:21:41 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 13044 (D:\Students\jang jin seong\GreenGramVer2\build\classes\java\main started by Administrator in D:\Students\jang jin seong\GreenGramVer2)
[2024-12-02 17:21:41 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-02 17:21:41 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-02 17:21:41 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-02 17:21:42 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-02 17:21:42 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-02 17:21:42 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-02 17:21:42 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-02 17:21:42 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-02 17:21:42 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 951 ms
[2024-12-02 17:21:42 INFO restartedMain] [com.green.greengramver2.common.MyFileUtils] MFU 생성자: D:\Students\jang jin seong\download\greengram_ver2
[2024-12-02 17:21:42 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-02 17:21:42 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-02 17:21:42 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-02 17:21:42 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-02 17:21:42 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Started GreenGramVer2Application in 2.017 seconds (process running for 2.44)
[2024-12-02 17:21:46 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-02 17:21:46 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-02 17:21:46 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-02 17:21:46 INFO http-nio-8080-exec-6] [com.green.greengramver2.feed.model.FeedGetReq] FeedGetReq 1,null,1
[2024-12-02 17:21:46 INFO http-nio-8080-exec-6] [com.green.greengramver2.feed.FeedController] feedC getFeedList p: FeedGetReq(super=Paging(page=1, size=20, sIdx=0), signedUserId=1)
[2024-12-02 17:21:46 INFO http-nio-8080-exec-6] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-02 17:21:46 INFO http-nio-8080-exec-6] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@158fe0ab
[2024-12-02 17:21:46 INFO http-nio-8080-exec-6] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-02 17:21:46 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, writer_user_id AS writerUserId,
        if(nick_name IS NULL , uid, nick_name) AS writerNm,
        pic AS writerPic, contents, location, a.created_at AS createdAt,
        if(c.feed_id IS NULL ,0 , 1) AS isLike
        FROM feed A
        JOIN user B
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c
        ON a.feed_id = c.feed_id
        AND c.user_id = 1
        ORDER BY a.feed_id DESC
        LIMIT 0,20
 {executed in 1 msec}
[2024-12-02 17:21:46 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|feed_id |writer_user_id |writernm |pic                                      |contents     |location |created_at          |islike |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|27      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |I am panguin |남극       |2024-11-29 17:07:59 |0      |
|26      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |I am panguin |남극       |2024-11-29 16:46:01 |0      |
|25      |5              |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |4123         |213      |2024-11-29 16:32:31 |0      |
|24      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |31231        |123      |2024-11-29 16:01:53 |0      |
|23      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |4754         |444      |2024-11-29 16:00:03 |0      |
|22      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |aaa          |aa       |2024-11-29 15:58:25 |0      |
|14      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:51:21 |1      |
|13      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:51:14 |1      |
|12      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:42:17 |1      |
|11      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |123          |33123    |2024-11-29 10:42:01 |0      |
|9       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |21123        |3        |2024-11-29 10:37:22 |0      |
|7       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-28 17:20:59 |1      |
|6       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |             |         |2024-11-28 17:15:01 |0      |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|

[2024-12-02 17:21:46 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 27
 {executed in 0 msec}
[2024-12-02 17:21:46 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5a0d637a-00c7-441f-a9fa-c0dc68af2602.jpg |
|-----------------------------------------|

[2024-12-02 17:21:46 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 27
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:21:46 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|5       |7               |2       |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |6               |123     |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |5               |ㅇ       |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |4               |ㅇ       |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-02 17:21:46 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 26
 {executed in 0 msec}
[2024-12-02 17:21:46 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3e5fe979-fe9c-4ed6-9ad7-c1dbf4f2538f.jpg |
|-----------------------------------------|

[2024-12-02 17:21:46 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 26
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:21:46 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|1       |9               |s       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|5       |8               |123     |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-02 17:21:46 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 25
 {executed in 0 msec}
[2024-12-02 17:21:46 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|8213634a-99df-42d8-963e-87bc120cc8a7.jpg |
|-----------------------------------------|

[2024-12-02 17:21:46 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 25
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:21:46 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 17:21:46 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 24
 {executed in 0 msec}
[2024-12-02 17:21:46 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|dfe6f2c1-3753-4a6a-aff4-0de7fa2786b8.jpg |
|-----------------------------------------|

[2024-12-02 17:21:46 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 24
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:21:46 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 17:21:46 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 23
 {executed in 0 msec}
[2024-12-02 17:21:46 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f3e6375d-35d8-4a4a-a976-26ca5c6abaac.jpg |
|-----------------------------------------|

[2024-12-02 17:21:46 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 23
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:21:46 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 17:21:46 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 22
 {executed in 0 msec}
[2024-12-02 17:21:46 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e97360ca-fe79-48c3-acaa-cd71042a0a78.tif |
|-----------------------------------------|

[2024-12-02 17:21:46 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 22
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:21:46 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 17:21:46 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 14
 {executed in 0 msec}
[2024-12-02 17:21:46 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a3709fe6-3e0d-4f04-8cef-1cc328c4fc0c.jpg |
|ada457b9-68aa-4a78-b0c8-c5035af844e2.jpg |
|-----------------------------------------|

[2024-12-02 17:21:46 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 14
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:21:46 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 17:21:46 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 13
 {executed in 0 msec}
[2024-12-02 17:21:46 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6fe5de58-57ef-47e7-80c7-49c0506ca143.jpg |
|920ca8e8-5dc2-4844-aa7f-d7782e94d380.jpg |
|-----------------------------------------|

[2024-12-02 17:21:46 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 13
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:21:46 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 17:21:46 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 12
 {executed in 0 msec}
[2024-12-02 17:21:46 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|84e77be4-2b62-4f40-8f8b-0803e1080449.jpg |
|84f31709-40aa-40eb-a7e7-da0219067927.jpg |
|-----------------------------------------|

[2024-12-02 17:21:46 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 12
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:21:46 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 17:21:46 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 11
 {executed in 0 msec}
[2024-12-02 17:21:46 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3fc51a83-46ea-43ca-a85b-6fad4794a2bd.jpg |
|49906eb9-a412-4428-a629-baccbe152c75.jpg |
|-----------------------------------------|

[2024-12-02 17:21:46 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 11
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-02 17:21:46 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 17:21:46 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 9
 {executed in 0 msec}
[2024-12-02 17:21:46 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|34669219-c5d3-4d84-a277-fd8c2b8bca4f.jpg |
|f1ed44ba-1254-4232-9a0d-65037abe1e9c.jpg |
|-----------------------------------------|

[2024-12-02 17:21:46 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 9
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:21:46 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 17:21:46 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 7
 {executed in 0 msec}
[2024-12-02 17:21:46 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|14ecfa41-07fc-40d0-b50b-3fe95a840992.jpg |
|2694c9a6-a7b3-4800-ac73-0c853e16a152.jpg |
|-----------------------------------------|

[2024-12-02 17:21:46 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 7
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:21:46 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 17:21:46 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 6
 {executed in 0 msec}
[2024-12-02 17:21:46 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3c31d519-96b0-49bd-8657-d1eac4fb3fc1.jpg |
|-----------------------------------------|

[2024-12-02 17:21:46 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 6
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:21:46 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 17:21:53 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. delete
        from feed_comments
        where feed_comment_id = 0
 {executed in 6 msec}
[2024-12-02 17:24:03 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-02 17:24:03 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-02 17:24:05 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 11168 (D:\Students\jang jin seong\GreenGramVer2\build\classes\java\main started by Administrator in D:\Students\jang jin seong\GreenGramVer2)
[2024-12-02 17:24:05 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-02 17:24:05 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-02 17:24:05 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-02 17:24:06 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-02 17:24:06 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-02 17:24:06 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-02 17:24:06 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-02 17:24:06 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-02 17:24:06 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 798 ms
[2024-12-02 17:24:06 INFO restartedMain] [com.green.greengramver2.common.MyFileUtils] MFU 생성자: D:\Students\jang jin seong\download\greengram_ver2
[2024-12-02 17:24:06 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-02 17:24:06 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-02 17:24:06 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-02 17:24:06 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-02 17:24:06 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Started GreenGramVer2Application in 1.696 seconds (process running for 2.05)
[2024-12-02 17:24:10 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-02 17:24:10 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-02 17:24:10 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-02 17:24:10 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-02 17:24:10 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@4bb1cc2c
[2024-12-02 17:24:10 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-02 17:24:10 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. delete
        from feed_comments
        where feed_comment_id = 0
 {executed in 0 msec}
[2024-12-02 17:25:35 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
[2024-12-02 17:25:35 INFO Thread-5] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-02 17:25:35 INFO Thread-5] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-02 17:25:35 INFO Thread-5] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-02 17:25:35 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 11168 (D:\Students\jang jin seong\GreenGramVer2\build\classes\java\main started by Administrator in D:\Students\jang jin seong\GreenGramVer2)
[2024-12-02 17:25:35 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-02 17:25:36 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-02 17:25:36 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-02 17:25:36 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-02 17:25:36 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-02 17:25:36 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-02 17:25:36 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 190 ms
[2024-12-02 17:25:36 INFO restartedMain] [com.green.greengramver2.common.MyFileUtils] MFU 생성자: D:\Students\jang jin seong\download\greengram_ver2
[2024-12-02 17:25:36 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-02 17:25:36 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-02 17:25:36 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-02 17:25:36 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-02 17:25:36 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Started GreenGramVer2Application in 0.344 seconds (process running for 91.619)
[2024-12-02 17:25:36 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-02 17:26:25 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-02 17:26:25 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-02 17:26:25 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 0 ms
[2024-12-02 17:26:25 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.HikariDataSource] HikariPool-2 - Starting...
[2024-12-02 17:26:25 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.pool.HikariPool] HikariPool-2 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@75fc59ca
[2024-12-02 17:26:25 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.HikariDataSource] HikariPool-2 - Start completed.
[2024-12-02 17:26:25 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. delete
        from feed_comments
        where feed_comment_id = 0
 {executed in 0 msec}
[2024-12-02 17:31:51 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-2 - Shutdown initiated...
[2024-12-02 17:31:51 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-2 - Shutdown completed.
[2024-12-02 17:31:53 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 11432 (D:\Students\jang jin seong\GreenGramVer2\build\classes\java\main started by Administrator in D:\Students\jang jin seong\GreenGramVer2)
[2024-12-02 17:31:53 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-02 17:31:53 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-02 17:31:53 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-02 17:31:54 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-02 17:31:54 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-02 17:31:54 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-02 17:31:54 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-02 17:31:54 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-02 17:31:54 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 843 ms
[2024-12-02 17:31:54 INFO restartedMain] [com.green.greengramver2.common.MyFileUtils] MFU 생성자: D:\Students\jang jin seong\download\greengram_ver2
[2024-12-02 17:31:54 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-02 17:31:55 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-02 17:31:55 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-02 17:31:55 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-02 17:31:55 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Started GreenGramVer2Application in 1.835 seconds (process running for 2.19)
[2024-12-02 17:32:05 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-02 17:32:05 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-02 17:32:05 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 0 ms
[2024-12-02 17:32:05 INFO http-nio-8080-exec-3] [com.green.greengramver2.feed.model.FeedGetReq] FeedGetReq 1,null,1
[2024-12-02 17:32:05 INFO http-nio-8080-exec-3] [com.green.greengramver2.feed.FeedController] feedC getFeedList p: FeedGetReq(super=Paging(page=1, size=20, sIdx=0), signedUserId=1)
[2024-12-02 17:32:05 INFO http-nio-8080-exec-3] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-02 17:32:05 INFO http-nio-8080-exec-3] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@43f2ec33
[2024-12-02 17:32:05 INFO http-nio-8080-exec-3] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-02 17:32:05 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, writer_user_id AS writerUserId,
        if(nick_name IS NULL , uid, nick_name) AS writerNm,
        pic AS writerPic, contents, location, a.created_at AS createdAt,
        if(c.feed_id IS NULL ,0 , 1) AS isLike
        FROM feed A
        JOIN user B
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c
        ON a.feed_id = c.feed_id
        AND c.user_id = 1
        ORDER BY a.feed_id DESC
        LIMIT 0,20
 {executed in 2 msec}
[2024-12-02 17:32:05 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|feed_id |writer_user_id |writernm |pic                                      |contents     |location |created_at          |islike |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|27      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |I am panguin |남극       |2024-11-29 17:07:59 |0      |
|26      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |I am panguin |남극       |2024-11-29 16:46:01 |0      |
|25      |5              |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |4123         |213      |2024-11-29 16:32:31 |0      |
|24      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |31231        |123      |2024-11-29 16:01:53 |0      |
|23      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |4754         |444      |2024-11-29 16:00:03 |0      |
|22      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |aaa          |aa       |2024-11-29 15:58:25 |0      |
|14      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:51:21 |1      |
|13      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:51:14 |1      |
|12      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:42:17 |1      |
|11      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |123          |33123    |2024-11-29 10:42:01 |0      |
|9       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |21123        |3        |2024-11-29 10:37:22 |0      |
|7       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-28 17:20:59 |1      |
|6       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |             |         |2024-11-28 17:15:01 |0      |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|

[2024-12-02 17:32:05 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 27
 {executed in 0 msec}
[2024-12-02 17:32:05 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5a0d637a-00c7-441f-a9fa-c0dc68af2602.jpg |
|-----------------------------------------|

[2024-12-02 17:32:05 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 27
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:32:05 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|5       |7               |2       |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |6               |123     |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |5               |ㅇ       |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |4               |ㅇ       |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-02 17:32:05 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 26
 {executed in 0 msec}
[2024-12-02 17:32:05 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3e5fe979-fe9c-4ed6-9ad7-c1dbf4f2538f.jpg |
|-----------------------------------------|

[2024-12-02 17:32:05 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 26
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:32:05 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|1       |9               |s       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|5       |8               |123     |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-02 17:32:05 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 25
 {executed in 1 msec}
[2024-12-02 17:32:05 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|8213634a-99df-42d8-963e-87bc120cc8a7.jpg |
|-----------------------------------------|

[2024-12-02 17:32:05 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 25
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:32:05 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 17:32:05 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 24
 {executed in 0 msec}
[2024-12-02 17:32:05 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|dfe6f2c1-3753-4a6a-aff4-0de7fa2786b8.jpg |
|-----------------------------------------|

[2024-12-02 17:32:05 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 24
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-02 17:32:05 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 17:32:05 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 23
 {executed in 0 msec}
[2024-12-02 17:32:05 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f3e6375d-35d8-4a4a-a976-26ca5c6abaac.jpg |
|-----------------------------------------|

[2024-12-02 17:32:05 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 23
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-02 17:32:05 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 17:32:05 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 22
 {executed in 1 msec}
[2024-12-02 17:32:05 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e97360ca-fe79-48c3-acaa-cd71042a0a78.tif |
|-----------------------------------------|

[2024-12-02 17:32:05 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 22
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:32:05 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 17:32:05 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 14
 {executed in 0 msec}
[2024-12-02 17:32:05 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a3709fe6-3e0d-4f04-8cef-1cc328c4fc0c.jpg |
|ada457b9-68aa-4a78-b0c8-c5035af844e2.jpg |
|-----------------------------------------|

[2024-12-02 17:32:05 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 14
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:32:05 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 17:32:05 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 13
 {executed in 1 msec}
[2024-12-02 17:32:05 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6fe5de58-57ef-47e7-80c7-49c0506ca143.jpg |
|920ca8e8-5dc2-4844-aa7f-d7782e94d380.jpg |
|-----------------------------------------|

[2024-12-02 17:32:05 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 13
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:32:05 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 17:32:05 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 12
 {executed in 0 msec}
[2024-12-02 17:32:05 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|84e77be4-2b62-4f40-8f8b-0803e1080449.jpg |
|84f31709-40aa-40eb-a7e7-da0219067927.jpg |
|-----------------------------------------|

[2024-12-02 17:32:05 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 12
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:32:05 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 17:32:05 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 11
 {executed in 0 msec}
[2024-12-02 17:32:05 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3fc51a83-46ea-43ca-a85b-6fad4794a2bd.jpg |
|49906eb9-a412-4428-a629-baccbe152c75.jpg |
|-----------------------------------------|

[2024-12-02 17:32:05 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 11
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:32:05 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 17:32:05 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 9
 {executed in 1 msec}
[2024-12-02 17:32:05 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|34669219-c5d3-4d84-a277-fd8c2b8bca4f.jpg |
|f1ed44ba-1254-4232-9a0d-65037abe1e9c.jpg |
|-----------------------------------------|

[2024-12-02 17:32:05 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 9
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:32:05 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 17:32:05 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 7
 {executed in 0 msec}
[2024-12-02 17:32:05 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|14ecfa41-07fc-40d0-b50b-3fe95a840992.jpg |
|2694c9a6-a7b3-4800-ac73-0c853e16a152.jpg |
|-----------------------------------------|

[2024-12-02 17:32:05 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 7
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:32:05 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 17:32:05 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 6
 {executed in 0 msec}
[2024-12-02 17:32:05 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3c31d519-96b0-49bd-8657-d1eac4fb3fc1.jpg |
|-----------------------------------------|

[2024-12-02 17:32:05 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 6
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-02 17:32:05 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 17:32:08 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. delete
        from feed_comments
        where user_id = 0 and feed_id = 0
 {executed in 0 msec}
[2024-12-02 17:39:11 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-02 17:39:11 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-02 17:39:13 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 10248 (D:\Students\jang jin seong\GreenGramVer2\build\classes\java\main started by Administrator in D:\Students\jang jin seong\GreenGramVer2)
[2024-12-02 17:39:13 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-02 17:39:13 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-02 17:39:13 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-02 17:39:14 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-02 17:39:14 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-02 17:39:14 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-02 17:39:14 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-02 17:39:14 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-02 17:39:14 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 854 ms
[2024-12-02 17:39:14 INFO restartedMain] [com.green.greengramver2.common.MyFileUtils] MFU 생성자: D:\Students\jang jin seong\download\greengram_ver2
[2024-12-02 17:39:14 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-02 17:39:14 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-02 17:39:15 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-02 17:39:15 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-02 17:39:15 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Started GreenGramVer2Application in 1.836 seconds (process running for 2.202)
[2024-12-02 17:39:19 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-02 17:39:19 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-02 17:39:19 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 0 ms
[2024-12-02 17:39:19 INFO http-nio-8080-exec-1] [com.green.greengramver2.feed.comment.FeedCommentController] delFeedComment com.green.greengramver2.feed.comment.model.FeedCommentDelReq@64a1e695
[2024-12-02 17:39:19 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-02 17:39:19 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@4f0afdb
[2024-12-02 17:39:19 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-02 17:39:19 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. delete
        from feed_comments
        where user_id = 0 and feed_id = 0
 {executed in 0 msec}
[2024-12-02 17:39:34 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-02 17:39:34 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-02 17:39:36 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 10980 (D:\Students\jang jin seong\GreenGramVer2\build\classes\java\main started by Administrator in D:\Students\jang jin seong\GreenGramVer2)
[2024-12-02 17:39:36 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-02 17:39:36 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-02 17:39:36 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-02 17:39:36 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-02 17:39:36 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-02 17:39:36 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-02 17:39:36 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-02 17:39:37 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-02 17:39:37 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 869 ms
[2024-12-02 17:39:37 INFO restartedMain] [com.green.greengramver2.common.MyFileUtils] MFU 생성자: D:\Students\jang jin seong\download\greengram_ver2
[2024-12-02 17:39:37 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-02 17:39:37 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-02 17:39:37 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-02 17:39:37 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-02 17:39:37 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Started GreenGramVer2Application in 1.852 seconds (process running for 2.208)
[2024-12-02 17:39:40 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-02 17:39:40 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-02 17:39:40 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 0 ms
[2024-12-02 17:39:40 INFO http-nio-8080-exec-1] [com.green.greengramver2.feed.comment.FeedCommentController] delFeedComment FeedCommentDelReq(feedCommentId=0, userId=0, feedId=0)
[2024-12-02 17:39:40 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-02 17:39:40 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@738f3c6
[2024-12-02 17:39:40 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-02 17:39:40 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. delete
        from feed_comments
        where user_id = 0 and feed_id = 0
 {executed in 1 msec}
[2024-12-02 17:40:51 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-02 17:40:51 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-02 17:40:53 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 5172 (D:\Students\jang jin seong\GreenGramVer2\build\classes\java\main started by Administrator in D:\Students\jang jin seong\GreenGramVer2)
[2024-12-02 17:40:53 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-02 17:40:53 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-02 17:40:53 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-02 17:40:54 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-02 17:40:54 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-02 17:40:54 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-02 17:40:54 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-02 17:40:54 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-02 17:40:54 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 887 ms
[2024-12-02 17:40:54 INFO restartedMain] [com.green.greengramver2.common.MyFileUtils] MFU 생성자: D:\Students\jang jin seong\download\greengram_ver2
[2024-12-02 17:40:54 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-02 17:40:54 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-02 17:40:54 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-02 17:40:54 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-02 17:40:54 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Started GreenGramVer2Application in 1.868 seconds (process running for 2.223)
[2024-12-02 17:41:00 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-02 17:41:00 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-02 17:41:00 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 0 ms
[2024-12-02 17:41:00 WARN http-nio-8080-exec-1] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.http.converter.HttpMessageNotReadableException: Required request body is missing: public com.green.greengramver2.common.model.ResultResponse<java.lang.Integer> com.green.greengramver2.feed.comment.FeedCommentController.delFeedComment(com.green.greengramver2.feed.comment.model.FeedCommentDelReq)]
[2024-12-02 17:41:22 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 11508 (D:\Students\jang jin seong\GreenGramVer2\build\classes\java\main started by Administrator in D:\Students\jang jin seong\GreenGramVer2)
[2024-12-02 17:41:22 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-02 17:41:22 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-02 17:41:22 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-02 17:41:22 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-02 17:41:22 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-02 17:41:22 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-02 17:41:22 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-02 17:41:23 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-02 17:41:23 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 787 ms
[2024-12-02 17:41:23 INFO restartedMain] [com.green.greengramver2.common.MyFileUtils] MFU 생성자: D:\Students\jang jin seong\download\greengram_ver2
[2024-12-02 17:41:23 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-02 17:41:23 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-02 17:41:23 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-02 17:41:23 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-02 17:41:23 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Started GreenGramVer2Application in 1.628 seconds (process running for 1.974)
[2024-12-02 17:41:25 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-02 17:41:25 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-02 17:41:25 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-02 17:41:26 INFO http-nio-8080-exec-1] [com.green.greengramver2.feed.comment.FeedCommentController] delFeedComment FeedCommentDelReq(feedCommentId=0, userId=0, feedId=0)
[2024-12-02 17:41:26 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-02 17:41:26 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@656820b6
[2024-12-02 17:41:26 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-02 17:41:26 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. delete
        from feed_comments
        where user_id = 0 and feed_id = 0
 {executed in 1 msec}
[2024-12-02 17:41:48 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
[2024-12-02 17:41:48 INFO Thread-5] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-02 17:41:48 INFO Thread-5] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-02 17:41:48 INFO Thread-5] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-02 17:41:48 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 11508 (D:\Students\jang jin seong\GreenGramVer2\build\classes\java\main started by Administrator in D:\Students\jang jin seong\GreenGramVer2)
[2024-12-02 17:41:48 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-02 17:41:48 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-02 17:41:48 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-02 17:41:48 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-02 17:41:48 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-02 17:41:48 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-02 17:41:48 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 208 ms
[2024-12-02 17:41:48 INFO restartedMain] [com.green.greengramver2.common.MyFileUtils] MFU 생성자: D:\Students\jang jin seong\download\greengram_ver2
[2024-12-02 17:41:48 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-02 17:41:48 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-02 17:41:48 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-02 17:41:48 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-02 17:41:48 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Started GreenGramVer2Application in 0.379 seconds (process running for 27.284)
[2024-12-02 17:41:48 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-02 17:42:27 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 2740 (D:\Students\jang jin seong\GreenGramVer2\build\classes\java\main started by Administrator in D:\Students\jang jin seong\GreenGramVer2)
[2024-12-02 17:42:27 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-02 17:42:27 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-02 17:42:27 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-02 17:42:28 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-02 17:42:28 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-02 17:42:28 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-02 17:42:28 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-02 17:42:28 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-02 17:42:28 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 757 ms
[2024-12-02 17:42:28 INFO restartedMain] [com.green.greengramver2.common.MyFileUtils] MFU 생성자: D:\Students\jang jin seong\download\greengram_ver2
[2024-12-02 17:42:28 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-02 17:42:28 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-02 17:42:28 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-02 17:42:28 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-02 17:42:28 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Started GreenGramVer2Application in 1.63 seconds (process running for 1.975)
[2024-12-02 17:42:36 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-02 17:42:36 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-02 17:42:36 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 0 ms
[2024-12-02 17:42:36 WARN http-nio-8080-exec-1] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.bind.MissingServletRequestParameterException: Required request parameter 'p' for method parameter type FeedCommentDelReq is not present]
[2024-12-02 17:44:28 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 6 class path changes (0 additions, 0 deletions, 6 modifications)
[2024-12-02 17:44:28 INFO Thread-5] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-02 17:44:28 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 2740 (D:\Students\jang jin seong\GreenGramVer2\build\classes\java\main started by Administrator in D:\Students\jang jin seong\GreenGramVer2)
[2024-12-02 17:44:28 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-02 17:44:29 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-02 17:44:29 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-02 17:44:29 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-02 17:44:29 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-02 17:44:29 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-02 17:44:29 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 203 ms
[2024-12-02 17:44:29 INFO restartedMain] [com.green.greengramver2.common.MyFileUtils] MFU 생성자: D:\Students\jang jin seong\download\greengram_ver2
[2024-12-02 17:44:29 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-02 17:44:29 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-02 17:44:29 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-02 17:44:29 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-02 17:44:29 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Started GreenGramVer2Application in 0.351 seconds (process running for 122.318)
[2024-12-02 17:44:29 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-02 17:44:55 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 10812 (D:\Students\jang jin seong\GreenGramVer2\build\classes\java\main started by Administrator in D:\Students\jang jin seong\GreenGramVer2)
[2024-12-02 17:44:55 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-02 17:44:55 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-02 17:44:55 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-02 17:44:56 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-02 17:44:56 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-02 17:44:56 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-02 17:44:56 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-02 17:44:56 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-02 17:44:56 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 751 ms
[2024-12-02 17:44:56 INFO restartedMain] [com.green.greengramver2.common.MyFileUtils] MFU 생성자: D:\Students\jang jin seong\download\greengram_ver2
[2024-12-02 17:44:56 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-02 17:44:56 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-02 17:44:56 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-02 17:44:56 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-02 17:44:56 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Started GreenGramVer2Application in 1.586 seconds (process running for 1.969)
[2024-12-02 17:44:59 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-02 17:44:59 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-02 17:44:59 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 0 ms
[2024-12-02 17:44:59 INFO http-nio-8080-exec-6] [com.green.greengramver2.feed.model.FeedGetReq] FeedGetReq 1,null,1
[2024-12-02 17:44:59 INFO http-nio-8080-exec-6] [com.green.greengramver2.feed.FeedController] feedC getFeedList p: FeedGetReq(super=Paging(page=1, size=20, sIdx=0), signedUserId=1)
[2024-12-02 17:44:59 INFO http-nio-8080-exec-6] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-02 17:44:59 INFO http-nio-8080-exec-6] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@41d30d80
[2024-12-02 17:44:59 INFO http-nio-8080-exec-6] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-02 17:44:59 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, writer_user_id AS writerUserId,
        if(nick_name IS NULL , uid, nick_name) AS writerNm,
        pic AS writerPic, contents, location, a.created_at AS createdAt,
        if(c.feed_id IS NULL ,0 , 1) AS isLike
        FROM feed A
        JOIN user B
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c
        ON a.feed_id = c.feed_id
        AND c.user_id = 1
        ORDER BY a.feed_id DESC
        LIMIT 0,20
 {executed in 0 msec}
[2024-12-02 17:44:59 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|feed_id |writer_user_id |writernm |pic                                      |contents     |location |created_at          |islike |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|27      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |I am panguin |남극       |2024-11-29 17:07:59 |0      |
|26      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |I am panguin |남극       |2024-11-29 16:46:01 |0      |
|25      |5              |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |4123         |213      |2024-11-29 16:32:31 |0      |
|24      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |31231        |123      |2024-11-29 16:01:53 |0      |
|23      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |4754         |444      |2024-11-29 16:00:03 |0      |
|22      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |aaa          |aa       |2024-11-29 15:58:25 |0      |
|14      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:51:21 |1      |
|13      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:51:14 |1      |
|12      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:42:17 |1      |
|11      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |123          |33123    |2024-11-29 10:42:01 |0      |
|9       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |21123        |3        |2024-11-29 10:37:22 |0      |
|7       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-28 17:20:59 |1      |
|6       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |             |         |2024-11-28 17:15:01 |0      |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|

[2024-12-02 17:44:59 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 27
 {executed in 0 msec}
[2024-12-02 17:44:59 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5a0d637a-00c7-441f-a9fa-c0dc68af2602.jpg |
|-----------------------------------------|

[2024-12-02 17:44:59 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 27
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:44:59 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|5       |7               |2       |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |6               |123     |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |5               |ㅇ       |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |4               |ㅇ       |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-02 17:44:59 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 26
 {executed in 0 msec}
[2024-12-02 17:44:59 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3e5fe979-fe9c-4ed6-9ad7-c1dbf4f2538f.jpg |
|-----------------------------------------|

[2024-12-02 17:44:59 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 26
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:44:59 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|1       |9               |s       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|5       |8               |123     |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-02 17:44:59 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 25
 {executed in 0 msec}
[2024-12-02 17:44:59 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|8213634a-99df-42d8-963e-87bc120cc8a7.jpg |
|-----------------------------------------|

[2024-12-02 17:44:59 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 25
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:44:59 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 17:44:59 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 24
 {executed in 0 msec}
[2024-12-02 17:44:59 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|dfe6f2c1-3753-4a6a-aff4-0de7fa2786b8.jpg |
|-----------------------------------------|

[2024-12-02 17:44:59 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 24
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-02 17:44:59 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 17:44:59 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 23
 {executed in 0 msec}
[2024-12-02 17:44:59 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f3e6375d-35d8-4a4a-a976-26ca5c6abaac.jpg |
|-----------------------------------------|

[2024-12-02 17:44:59 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 23
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:44:59 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 17:44:59 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 22
 {executed in 0 msec}
[2024-12-02 17:44:59 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e97360ca-fe79-48c3-acaa-cd71042a0a78.tif |
|-----------------------------------------|

[2024-12-02 17:44:59 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 22
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-02 17:44:59 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 17:44:59 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 14
 {executed in 0 msec}
[2024-12-02 17:44:59 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a3709fe6-3e0d-4f04-8cef-1cc328c4fc0c.jpg |
|ada457b9-68aa-4a78-b0c8-c5035af844e2.jpg |
|-----------------------------------------|

[2024-12-02 17:44:59 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 14
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-02 17:44:59 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 17:44:59 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 13
 {executed in 0 msec}
[2024-12-02 17:44:59 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6fe5de58-57ef-47e7-80c7-49c0506ca143.jpg |
|920ca8e8-5dc2-4844-aa7f-d7782e94d380.jpg |
|-----------------------------------------|

[2024-12-02 17:44:59 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 13
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:44:59 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 17:44:59 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 12
 {executed in 0 msec}
[2024-12-02 17:44:59 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|84e77be4-2b62-4f40-8f8b-0803e1080449.jpg |
|84f31709-40aa-40eb-a7e7-da0219067927.jpg |
|-----------------------------------------|

[2024-12-02 17:44:59 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 12
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:44:59 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 17:44:59 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 11
 {executed in 0 msec}
[2024-12-02 17:44:59 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3fc51a83-46ea-43ca-a85b-6fad4794a2bd.jpg |
|49906eb9-a412-4428-a629-baccbe152c75.jpg |
|-----------------------------------------|

[2024-12-02 17:44:59 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 11
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:44:59 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 17:44:59 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 9
 {executed in 0 msec}
[2024-12-02 17:44:59 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|34669219-c5d3-4d84-a277-fd8c2b8bca4f.jpg |
|f1ed44ba-1254-4232-9a0d-65037abe1e9c.jpg |
|-----------------------------------------|

[2024-12-02 17:44:59 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 9
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:44:59 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 17:44:59 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 7
 {executed in 1 msec}
[2024-12-02 17:44:59 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|14ecfa41-07fc-40d0-b50b-3fe95a840992.jpg |
|2694c9a6-a7b3-4800-ac73-0c853e16a152.jpg |
|-----------------------------------------|

[2024-12-02 17:44:59 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 7
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:44:59 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 17:44:59 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 6
 {executed in 0 msec}
[2024-12-02 17:44:59 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3c31d519-96b0-49bd-8657-d1eac4fb3fc1.jpg |
|-----------------------------------------|

[2024-12-02 17:44:59 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 6
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:44:59 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 17:45:04 WARN http-nio-8080-exec-1] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.bind.MissingServletRequestParameterException: Required request parameter 'p' for method parameter type FeedCommentDelReq is not present]
[2024-12-02 17:45:22 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-02 17:45:22 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-02 17:45:24 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 11600 (D:\Students\jang jin seong\GreenGramVer2\build\classes\java\main started by Administrator in D:\Students\jang jin seong\GreenGramVer2)
[2024-12-02 17:45:24 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-02 17:45:24 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-02 17:45:24 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-02 17:45:25 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-02 17:45:25 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-02 17:45:25 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-02 17:45:25 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-02 17:45:25 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-02 17:45:25 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 765 ms
[2024-12-02 17:45:25 INFO restartedMain] [com.green.greengramver2.common.MyFileUtils] MFU 생성자: D:\Students\jang jin seong\download\greengram_ver2
[2024-12-02 17:45:25 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-02 17:45:25 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-02 17:45:25 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-02 17:45:25 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-02 17:45:25 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Started GreenGramVer2Application in 1.735 seconds (process running for 2.082)
[2024-12-02 17:45:28 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-02 17:45:28 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-02 17:45:28 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 0 ms
[2024-12-02 17:45:28 INFO http-nio-8080-exec-1] [com.green.greengramver2.feed.comment.FeedCommentController] delFeedComment FeedCommentDelReq(feedCommentId=0, userId=0)
[2024-12-02 17:45:28 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-02 17:45:28 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@5d23e6a8
[2024-12-02 17:45:28 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-02 17:45:28 ERRORhttp-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.mybatis.spring.MyBatisSystemException] with root cause
org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'feed_comment_Id' in 'class com.green.greengramver2.feed.comment.model.FeedCommentDelReq'
	at org.apache.ibatis.reflection.Reflector.getGetInvoker(Reflector.java:385)
	at org.apache.ibatis.reflection.MetaClass.getGetInvoker(MetaClass.java:160)
	at org.apache.ibatis.reflection.wrapper.BeanWrapper.getBeanProperty(BeanWrapper.java:153)
	at org.apache.ibatis.reflection.wrapper.BeanWrapper.get(BeanWrapper.java:49)
	at org.apache.ibatis.reflection.MetaObject.getValue(MetaObject.java:116)
	at org.apache.ibatis.scripting.defaults.DefaultParameterHandler.setParameters(DefaultParameterHandler.java:82)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.parameterize(PreparedStatementHandler.java:97)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.parameterize(RoutingStatementHandler.java:65)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:91)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:49)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.delete(DefaultSqlSession.java:212)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy79.delete(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.delete(SqlSessionTemplate.java:304)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:72)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy80.delFeedComment(Unknown Source)
	at com.green.greengramver2.feed.comment.FeedCommentService.delFeedComment(FeedCommentService.java:24)
	at com.green.greengramver2.feed.comment.FeedCommentController.delFeedComment(FeedCommentController.java:28)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doDelete(FrameworkServlet.java:936)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:596)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-02 17:47:01 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-02 17:47:01 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-02 17:47:03 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 12388 (D:\Students\jang jin seong\GreenGramVer2\build\classes\java\main started by Administrator in D:\Students\jang jin seong\GreenGramVer2)
[2024-12-02 17:47:03 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-02 17:47:03 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-02 17:47:03 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-02 17:47:04 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-02 17:47:04 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-02 17:47:04 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-02 17:47:04 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-02 17:47:04 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-02 17:47:04 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 777 ms
[2024-12-02 17:47:04 INFO restartedMain] [com.green.greengramver2.common.MyFileUtils] MFU 생성자: D:\Students\jang jin seong\download\greengram_ver2
[2024-12-02 17:47:04 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-02 17:47:04 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-02 17:47:04 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-02 17:47:04 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-02 17:47:04 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Started GreenGramVer2Application in 1.615 seconds (process running for 1.973)
[2024-12-02 17:47:07 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-02 17:47:07 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-02 17:47:07 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 0 ms
[2024-12-02 17:47:07 INFO http-nio-8080-exec-7] [com.green.greengramver2.feed.model.FeedGetReq] FeedGetReq 1,null,1
[2024-12-02 17:47:07 INFO http-nio-8080-exec-7] [com.green.greengramver2.feed.FeedController] feedC getFeedList p: FeedGetReq(super=Paging(page=1, size=20, sIdx=0), signedUserId=1)
[2024-12-02 17:47:07 INFO http-nio-8080-exec-7] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-02 17:47:07 INFO http-nio-8080-exec-7] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@43f2ec33
[2024-12-02 17:47:07 INFO http-nio-8080-exec-7] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-02 17:47:07 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, writer_user_id AS writerUserId,
        if(nick_name IS NULL , uid, nick_name) AS writerNm,
        pic AS writerPic, contents, location, a.created_at AS createdAt,
        if(c.feed_id IS NULL ,0 , 1) AS isLike
        FROM feed A
        JOIN user B
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c
        ON a.feed_id = c.feed_id
        AND c.user_id = 1
        ORDER BY a.feed_id DESC
        LIMIT 0,20
 {executed in 1 msec}
[2024-12-02 17:47:07 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|feed_id |writer_user_id |writernm |pic                                      |contents     |location |created_at          |islike |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|27      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |I am panguin |남극       |2024-11-29 17:07:59 |0      |
|26      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |I am panguin |남극       |2024-11-29 16:46:01 |0      |
|25      |5              |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |4123         |213      |2024-11-29 16:32:31 |0      |
|24      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |31231        |123      |2024-11-29 16:01:53 |0      |
|23      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |4754         |444      |2024-11-29 16:00:03 |0      |
|22      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |aaa          |aa       |2024-11-29 15:58:25 |0      |
|14      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:51:21 |1      |
|13      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:51:14 |1      |
|12      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:42:17 |1      |
|11      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |123          |33123    |2024-11-29 10:42:01 |0      |
|9       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |21123        |3        |2024-11-29 10:37:22 |0      |
|7       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-28 17:20:59 |1      |
|6       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |             |         |2024-11-28 17:15:01 |0      |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|

[2024-12-02 17:47:07 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 27
 {executed in 0 msec}
[2024-12-02 17:47:07 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5a0d637a-00c7-441f-a9fa-c0dc68af2602.jpg |
|-----------------------------------------|

[2024-12-02 17:47:07 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 27
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:47:07 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|5       |7               |2       |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |6               |123     |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |5               |ㅇ       |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |4               |ㅇ       |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-02 17:47:07 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 26
 {executed in 0 msec}
[2024-12-02 17:47:07 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3e5fe979-fe9c-4ed6-9ad7-c1dbf4f2538f.jpg |
|-----------------------------------------|

[2024-12-02 17:47:07 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 26
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:47:07 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|1       |9               |s       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|5       |8               |123     |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-02 17:47:07 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 25
 {executed in 1 msec}
[2024-12-02 17:47:07 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|8213634a-99df-42d8-963e-87bc120cc8a7.jpg |
|-----------------------------------------|

[2024-12-02 17:47:07 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 25
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-02 17:47:07 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 17:47:07 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 24
 {executed in 0 msec}
[2024-12-02 17:47:07 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|dfe6f2c1-3753-4a6a-aff4-0de7fa2786b8.jpg |
|-----------------------------------------|

[2024-12-02 17:47:07 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 24
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-02 17:47:07 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 17:47:07 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 23
 {executed in 0 msec}
[2024-12-02 17:47:07 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f3e6375d-35d8-4a4a-a976-26ca5c6abaac.jpg |
|-----------------------------------------|

[2024-12-02 17:47:07 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 23
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:47:07 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 17:47:07 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 22
 {executed in 0 msec}
[2024-12-02 17:47:07 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e97360ca-fe79-48c3-acaa-cd71042a0a78.tif |
|-----------------------------------------|

[2024-12-02 17:47:07 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 22
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-02 17:47:07 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 17:47:07 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 14
 {executed in 0 msec}
[2024-12-02 17:47:07 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a3709fe6-3e0d-4f04-8cef-1cc328c4fc0c.jpg |
|ada457b9-68aa-4a78-b0c8-c5035af844e2.jpg |
|-----------------------------------------|

[2024-12-02 17:47:07 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 14
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-02 17:47:07 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 17:47:07 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 13
 {executed in 1 msec}
[2024-12-02 17:47:07 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6fe5de58-57ef-47e7-80c7-49c0506ca143.jpg |
|920ca8e8-5dc2-4844-aa7f-d7782e94d380.jpg |
|-----------------------------------------|

[2024-12-02 17:47:07 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 13
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:47:07 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 17:47:07 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 12
 {executed in 1 msec}
[2024-12-02 17:47:07 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|84e77be4-2b62-4f40-8f8b-0803e1080449.jpg |
|84f31709-40aa-40eb-a7e7-da0219067927.jpg |
|-----------------------------------------|

[2024-12-02 17:47:07 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 12
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-02 17:47:07 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 17:47:07 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 11
 {executed in 0 msec}
[2024-12-02 17:47:07 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3fc51a83-46ea-43ca-a85b-6fad4794a2bd.jpg |
|49906eb9-a412-4428-a629-baccbe152c75.jpg |
|-----------------------------------------|

[2024-12-02 17:47:07 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 11
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:47:07 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 17:47:07 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 9
 {executed in 0 msec}
[2024-12-02 17:47:07 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|34669219-c5d3-4d84-a277-fd8c2b8bca4f.jpg |
|f1ed44ba-1254-4232-9a0d-65037abe1e9c.jpg |
|-----------------------------------------|

[2024-12-02 17:47:07 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 9
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:47:07 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 17:47:07 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 7
 {executed in 0 msec}
[2024-12-02 17:47:07 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|14ecfa41-07fc-40d0-b50b-3fe95a840992.jpg |
|2694c9a6-a7b3-4800-ac73-0c853e16a152.jpg |
|-----------------------------------------|

[2024-12-02 17:47:07 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 7
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:47:07 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 17:47:07 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 6
 {executed in 0 msec}
[2024-12-02 17:47:07 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3c31d519-96b0-49bd-8657-d1eac4fb3fc1.jpg |
|-----------------------------------------|

[2024-12-02 17:47:07 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 6
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:47:07 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 17:47:09 INFO http-nio-8080-exec-1] [com.green.greengramver2.feed.comment.FeedCommentController] feedCommentP FeedCommentPostReq(feedId=27, userId=1, comment=123, feedCommentId=0)
[2024-12-02 17:47:09 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. insert into feed_comments
        set user_id = 1,
            feed_id = 27,
            `comment` = '123'
 {executed in 0 msec}
[2024-12-02 17:47:09 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: insert into feed_comments
        set user_id = 1,
            feed_id = 27,
            `comment` = '123'
 {executed in 0 msec}
[2024-12-02 17:47:09 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|10        |
|----------|

[2024-12-02 17:47:12 INFO http-nio-8080-exec-9] [com.green.greengramver2.feed.comment.FeedCommentController] delFeedComment FeedCommentDelReq(feedCommentId=0, userId=0)
[2024-12-02 17:47:12 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. delete
        from feed_comments
        where user_id = 0 and feed_comment_id = 0
 {executed in 1 msec}
[2024-12-02 17:47:50 WARN http-nio-8080-exec-4] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' is not supported]
[2024-12-02 17:49:04 INFO http-nio-8080-exec-8] [com.green.greengramver2.feed.model.FeedGetReq] FeedGetReq 1,null,1
[2024-12-02 17:49:04 INFO http-nio-8080-exec-8] [com.green.greengramver2.feed.FeedController] feedC getFeedList p: FeedGetReq(super=Paging(page=1, size=20, sIdx=0), signedUserId=1)
[2024-12-02 17:49:04 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, writer_user_id AS writerUserId,
        if(nick_name IS NULL , uid, nick_name) AS writerNm,
        pic AS writerPic, contents, location, a.created_at AS createdAt,
        if(c.feed_id IS NULL ,0 , 1) AS isLike
        FROM feed A
        JOIN user B
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c
        ON a.feed_id = c.feed_id
        AND c.user_id = 1
        ORDER BY a.feed_id DESC
        LIMIT 0,20
 {executed in 1 msec}
[2024-12-02 17:49:04 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|feed_id |writer_user_id |writernm |pic                                      |contents     |location |created_at          |islike |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|27      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |I am panguin |남극       |2024-11-29 17:07:59 |0      |
|26      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |I am panguin |남극       |2024-11-29 16:46:01 |0      |
|25      |5              |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |4123         |213      |2024-11-29 16:32:31 |0      |
|24      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |31231        |123      |2024-11-29 16:01:53 |0      |
|23      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |4754         |444      |2024-11-29 16:00:03 |0      |
|22      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |aaa          |aa       |2024-11-29 15:58:25 |0      |
|14      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:51:21 |1      |
|13      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:51:14 |1      |
|12      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:42:17 |1      |
|11      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |123          |33123    |2024-11-29 10:42:01 |0      |
|9       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |21123        |3        |2024-11-29 10:37:22 |0      |
|7       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-28 17:20:59 |1      |
|6       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |             |         |2024-11-28 17:15:01 |0      |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|

[2024-12-02 17:49:04 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 27
 {executed in 1 msec}
[2024-12-02 17:49:04 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5a0d637a-00c7-441f-a9fa-c0dc68af2602.jpg |
|-----------------------------------------|

[2024-12-02 17:49:04 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 27
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-02 17:49:04 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|1       |10              |123     |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|5       |7               |2       |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |6               |123     |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |5               |ㅇ       |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-02 17:49:04 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 26
 {executed in 1 msec}
[2024-12-02 17:49:04 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3e5fe979-fe9c-4ed6-9ad7-c1dbf4f2538f.jpg |
|-----------------------------------------|

[2024-12-02 17:49:04 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 26
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:49:04 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|1       |9               |s       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|5       |8               |123     |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-02 17:49:04 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 25
 {executed in 0 msec}
[2024-12-02 17:49:04 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|8213634a-99df-42d8-963e-87bc120cc8a7.jpg |
|-----------------------------------------|

[2024-12-02 17:49:04 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 25
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:49:04 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 17:49:04 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 24
 {executed in 0 msec}
[2024-12-02 17:49:04 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|dfe6f2c1-3753-4a6a-aff4-0de7fa2786b8.jpg |
|-----------------------------------------|

[2024-12-02 17:49:04 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 24
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:49:04 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 17:49:04 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 23
 {executed in 1 msec}
[2024-12-02 17:49:04 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f3e6375d-35d8-4a4a-a976-26ca5c6abaac.jpg |
|-----------------------------------------|

[2024-12-02 17:49:04 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 23
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:49:04 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 17:49:04 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 22
 {executed in 0 msec}
[2024-12-02 17:49:04 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e97360ca-fe79-48c3-acaa-cd71042a0a78.tif |
|-----------------------------------------|

[2024-12-02 17:49:04 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 22
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:49:04 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 17:49:04 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 14
 {executed in 0 msec}
[2024-12-02 17:49:04 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a3709fe6-3e0d-4f04-8cef-1cc328c4fc0c.jpg |
|ada457b9-68aa-4a78-b0c8-c5035af844e2.jpg |
|-----------------------------------------|

[2024-12-02 17:49:04 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 14
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:49:04 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 17:49:04 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 13
 {executed in 0 msec}
[2024-12-02 17:49:04 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6fe5de58-57ef-47e7-80c7-49c0506ca143.jpg |
|920ca8e8-5dc2-4844-aa7f-d7782e94d380.jpg |
|-----------------------------------------|

[2024-12-02 17:49:04 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 13
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:49:04 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 17:49:04 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 12
 {executed in 0 msec}
[2024-12-02 17:49:04 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|84e77be4-2b62-4f40-8f8b-0803e1080449.jpg |
|84f31709-40aa-40eb-a7e7-da0219067927.jpg |
|-----------------------------------------|

[2024-12-02 17:49:04 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 12
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:49:04 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 17:49:04 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 11
 {executed in 0 msec}
[2024-12-02 17:49:04 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3fc51a83-46ea-43ca-a85b-6fad4794a2bd.jpg |
|49906eb9-a412-4428-a629-baccbe152c75.jpg |
|-----------------------------------------|

[2024-12-02 17:49:04 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 11
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:49:04 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 17:49:04 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 9
 {executed in 0 msec}
[2024-12-02 17:49:04 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|34669219-c5d3-4d84-a277-fd8c2b8bca4f.jpg |
|f1ed44ba-1254-4232-9a0d-65037abe1e9c.jpg |
|-----------------------------------------|

[2024-12-02 17:49:04 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 9
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:49:04 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 17:49:04 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 7
 {executed in 0 msec}
[2024-12-02 17:49:04 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|14ecfa41-07fc-40d0-b50b-3fe95a840992.jpg |
|2694c9a6-a7b3-4800-ac73-0c853e16a152.jpg |
|-----------------------------------------|

[2024-12-02 17:49:04 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 7
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:49:04 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 17:49:04 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 6
 {executed in 0 msec}
[2024-12-02 17:49:04 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3c31d519-96b0-49bd-8657-d1eac4fb3fc1.jpg |
|-----------------------------------------|

[2024-12-02 17:49:04 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 6
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:49:04 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 17:49:11 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-02 17:49:11 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-02 17:49:12 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 3144 (D:\Students\jang jin seong\GreenGramVer2\build\classes\java\main started by Administrator in D:\Students\jang jin seong\GreenGramVer2)
[2024-12-02 17:49:12 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-02 17:49:12 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-02 17:49:12 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-02 17:49:13 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-02 17:49:13 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-02 17:49:13 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-02 17:49:13 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-02 17:49:13 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-02 17:49:13 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 787 ms
[2024-12-02 17:49:13 INFO restartedMain] [com.green.greengramver2.common.MyFileUtils] MFU 생성자: D:\Students\jang jin seong\download\greengram_ver2
[2024-12-02 17:49:13 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-02 17:49:13 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-02 17:49:13 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-02 17:49:14 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-02 17:49:14 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Started GreenGramVer2Application in 1.68 seconds (process running for 2.026)
[2024-12-02 17:49:16 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-02 17:49:16 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-02 17:49:16 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-02 17:49:16 INFO http-nio-8080-exec-9] [com.green.greengramver2.feed.model.FeedGetReq] FeedGetReq 1,null,1
[2024-12-02 17:49:16 INFO http-nio-8080-exec-9] [com.green.greengramver2.feed.FeedController] feedC getFeedList p: FeedGetReq(super=Paging(page=1, size=20, sIdx=0), signedUserId=1)
[2024-12-02 17:49:16 INFO http-nio-8080-exec-9] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-02 17:49:16 INFO http-nio-8080-exec-9] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@b1a0
[2024-12-02 17:49:16 INFO http-nio-8080-exec-9] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-02 17:49:16 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, writer_user_id AS writerUserId,
        if(nick_name IS NULL , uid, nick_name) AS writerNm,
        pic AS writerPic, contents, location, a.created_at AS createdAt,
        if(c.feed_id IS NULL ,0 , 1) AS isLike
        FROM feed A
        JOIN user B
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c
        ON a.feed_id = c.feed_id
        AND c.user_id = 1
        ORDER BY a.feed_id DESC
        LIMIT 0,20
 {executed in 1 msec}
[2024-12-02 17:49:16 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|feed_id |writer_user_id |writernm |pic                                      |contents     |location |created_at          |islike |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|27      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |I am panguin |남극       |2024-11-29 17:07:59 |0      |
|26      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |I am panguin |남극       |2024-11-29 16:46:01 |0      |
|25      |5              |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |4123         |213      |2024-11-29 16:32:31 |0      |
|24      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |31231        |123      |2024-11-29 16:01:53 |0      |
|23      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |4754         |444      |2024-11-29 16:00:03 |0      |
|22      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |aaa          |aa       |2024-11-29 15:58:25 |0      |
|14      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:51:21 |1      |
|13      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:51:14 |1      |
|12      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:42:17 |1      |
|11      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |123          |33123    |2024-11-29 10:42:01 |0      |
|9       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |21123        |3        |2024-11-29 10:37:22 |0      |
|7       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-28 17:20:59 |1      |
|6       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |             |         |2024-11-28 17:15:01 |0      |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|

[2024-12-02 17:49:16 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 27
 {executed in 0 msec}
[2024-12-02 17:49:16 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5a0d637a-00c7-441f-a9fa-c0dc68af2602.jpg |
|-----------------------------------------|

[2024-12-02 17:49:16 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 27
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-02 17:49:16 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|1       |10              |123     |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|5       |7               |2       |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |6               |123     |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |5               |ㅇ       |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-02 17:49:16 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 26
 {executed in 0 msec}
[2024-12-02 17:49:16 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3e5fe979-fe9c-4ed6-9ad7-c1dbf4f2538f.jpg |
|-----------------------------------------|

[2024-12-02 17:49:16 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 26
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:49:16 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|1       |9               |s       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|5       |8               |123     |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-02 17:49:16 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 25
 {executed in 0 msec}
[2024-12-02 17:49:16 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|8213634a-99df-42d8-963e-87bc120cc8a7.jpg |
|-----------------------------------------|

[2024-12-02 17:49:16 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 25
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:49:16 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 17:49:16 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 24
 {executed in 1 msec}
[2024-12-02 17:49:16 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|dfe6f2c1-3753-4a6a-aff4-0de7fa2786b8.jpg |
|-----------------------------------------|

[2024-12-02 17:49:16 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 24
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:49:16 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 17:49:16 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 23
 {executed in 0 msec}
[2024-12-02 17:49:16 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f3e6375d-35d8-4a4a-a976-26ca5c6abaac.jpg |
|-----------------------------------------|

[2024-12-02 17:49:16 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 23
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:49:16 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 17:49:16 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 22
 {executed in 0 msec}
[2024-12-02 17:49:16 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e97360ca-fe79-48c3-acaa-cd71042a0a78.tif |
|-----------------------------------------|

[2024-12-02 17:49:16 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 22
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:49:16 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 17:49:16 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 14
 {executed in 1 msec}
[2024-12-02 17:49:16 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a3709fe6-3e0d-4f04-8cef-1cc328c4fc0c.jpg |
|ada457b9-68aa-4a78-b0c8-c5035af844e2.jpg |
|-----------------------------------------|

[2024-12-02 17:49:16 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 14
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:49:16 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 17:49:16 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 13
 {executed in 0 msec}
[2024-12-02 17:49:16 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6fe5de58-57ef-47e7-80c7-49c0506ca143.jpg |
|920ca8e8-5dc2-4844-aa7f-d7782e94d380.jpg |
|-----------------------------------------|

[2024-12-02 17:49:16 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 13
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:49:16 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 17:49:16 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 12
 {executed in 0 msec}
[2024-12-02 17:49:16 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|84e77be4-2b62-4f40-8f8b-0803e1080449.jpg |
|84f31709-40aa-40eb-a7e7-da0219067927.jpg |
|-----------------------------------------|

[2024-12-02 17:49:16 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 12
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-02 17:49:16 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 17:49:16 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 11
 {executed in 0 msec}
[2024-12-02 17:49:16 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3fc51a83-46ea-43ca-a85b-6fad4794a2bd.jpg |
|49906eb9-a412-4428-a629-baccbe152c75.jpg |
|-----------------------------------------|

[2024-12-02 17:49:16 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 11
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:49:16 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 17:49:16 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 9
 {executed in 0 msec}
[2024-12-02 17:49:16 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|34669219-c5d3-4d84-a277-fd8c2b8bca4f.jpg |
|f1ed44ba-1254-4232-9a0d-65037abe1e9c.jpg |
|-----------------------------------------|

[2024-12-02 17:49:16 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 9
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:49:16 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 17:49:16 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 7
 {executed in 0 msec}
[2024-12-02 17:49:16 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|14ecfa41-07fc-40d0-b50b-3fe95a840992.jpg |
|2694c9a6-a7b3-4800-ac73-0c853e16a152.jpg |
|-----------------------------------------|

[2024-12-02 17:49:16 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 7
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-02 17:49:16 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 17:49:16 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 6
 {executed in 0 msec}
[2024-12-02 17:49:16 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3c31d519-96b0-49bd-8657-d1eac4fb3fc1.jpg |
|-----------------------------------------|

[2024-12-02 17:49:16 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 6
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:49:16 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 17:49:23 INFO http-nio-8080-exec-1] [com.green.greengramver2.feed.comment.FeedCommentController] delFeedComment FeedCommentDelReq(feedCommentId=0, userId=0)
[2024-12-02 17:49:23 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. delete
        from feed_comments
        where user_id = 0 and feed_comment_id = 0
 {executed in 0 msec}
[2024-12-02 17:52:30 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 6 class path changes (0 additions, 0 deletions, 6 modifications)
[2024-12-02 17:52:30 INFO Thread-5] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-02 17:52:30 INFO Thread-5] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-02 17:52:30 INFO Thread-5] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-02 17:52:30 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 3144 (D:\Students\jang jin seong\GreenGramVer2\build\classes\java\main started by Administrator in D:\Students\jang jin seong\GreenGramVer2)
[2024-12-02 17:52:30 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-02 17:52:30 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-02 17:52:30 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-02 17:52:30 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-02 17:52:30 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-02 17:52:30 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-02 17:52:30 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 185 ms
[2024-12-02 17:52:30 INFO restartedMain] [com.green.greengramver2.common.MyFileUtils] MFU 생성자: D:\Students\jang jin seong\download\greengram_ver2
[2024-12-02 17:52:30 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-02 17:52:30 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-02 17:52:30 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-02 17:52:30 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-02 17:52:30 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Started GreenGramVer2Application in 0.327 seconds (process running for 198.741)
[2024-12-02 17:52:30 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-02 17:53:37 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 6 class path changes (0 additions, 0 deletions, 6 modifications)
[2024-12-02 17:53:37 INFO Thread-7] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-02 17:53:37 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 3144 (D:\Students\jang jin seong\GreenGramVer2\build\classes\java\main started by Administrator in D:\Students\jang jin seong\GreenGramVer2)
[2024-12-02 17:53:37 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-02 17:53:37 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-02 17:53:37 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-02 17:53:37 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-02 17:53:37 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-02 17:53:37 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-02 17:53:37 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 172 ms
[2024-12-02 17:53:37 INFO restartedMain] [com.green.greengramver2.common.MyFileUtils] MFU 생성자: D:\Students\jang jin seong\download\greengram_ver2
[2024-12-02 17:53:37 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-02 17:53:37 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-02 17:53:37 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-02 17:53:37 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-02 17:53:37 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Started GreenGramVer2Application in 0.313 seconds (process running for 265.671)
[2024-12-02 17:53:37 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-02 17:54:24 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 11488 (D:\Students\jang jin seong\GreenGramVer2\build\classes\java\main started by Administrator in D:\Students\jang jin seong\GreenGramVer2)
[2024-12-02 17:54:24 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-02 17:54:24 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-02 17:54:24 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-02 17:54:25 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-02 17:54:25 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-02 17:54:25 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-02 17:54:25 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-02 17:54:25 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-02 17:54:25 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 806 ms
[2024-12-02 17:54:25 INFO restartedMain] [com.green.greengramver2.common.MyFileUtils] MFU 생성자: D:\Students\jang jin seong\download\greengram_ver2
[2024-12-02 17:54:25 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-02 17:54:25 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-02 17:54:25 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-02 17:54:25 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-02 17:54:25 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Started GreenGramVer2Application in 1.746 seconds (process running for 2.091)
[2024-12-02 17:54:33 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-02 17:54:33 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-02 17:54:33 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-02 17:54:34 INFO http-nio-8080-exec-9] [com.green.greengramver2.feed.model.FeedGetReq] FeedGetReq 1,null,1
[2024-12-02 17:54:34 INFO http-nio-8080-exec-9] [com.green.greengramver2.feed.FeedController] feedC getFeedList p: FeedGetReq(super=Paging(page=1, size=20, sIdx=0), signedUserId=1)
[2024-12-02 17:54:34 INFO http-nio-8080-exec-9] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-02 17:54:34 INFO http-nio-8080-exec-9] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@b1a0
[2024-12-02 17:54:34 INFO http-nio-8080-exec-9] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-02 17:54:34 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, writer_user_id AS writerUserId,
        if(nick_name IS NULL , uid, nick_name) AS writerNm,
        pic AS writerPic, contents, location, a.created_at AS createdAt,
        if(c.feed_id IS NULL ,0 , 1) AS isLike
        FROM feed A
        JOIN user B
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c
        ON a.feed_id = c.feed_id
        AND c.user_id = 1
        ORDER BY a.feed_id DESC
        LIMIT 0,20
 {executed in 1 msec}
[2024-12-02 17:54:34 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|feed_id |writer_user_id |writernm |pic                                      |contents     |location |created_at          |islike |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|27      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |I am panguin |남극       |2024-11-29 17:07:59 |0      |
|26      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |I am panguin |남극       |2024-11-29 16:46:01 |0      |
|25      |5              |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |4123         |213      |2024-11-29 16:32:31 |0      |
|24      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |31231        |123      |2024-11-29 16:01:53 |0      |
|23      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |4754         |444      |2024-11-29 16:00:03 |0      |
|22      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |aaa          |aa       |2024-11-29 15:58:25 |0      |
|14      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:51:21 |1      |
|13      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:51:14 |1      |
|12      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-29 10:42:17 |1      |
|11      |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |123          |33123    |2024-11-29 10:42:01 |0      |
|9       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |21123        |3        |2024-11-29 10:37:22 |0      |
|7       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |null         |null     |2024-11-28 17:20:59 |1      |
|6       |1              |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |             |         |2024-11-28 17:15:01 |0      |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|

[2024-12-02 17:54:34 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 27
 {executed in 1 msec}
[2024-12-02 17:54:34 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5a0d637a-00c7-441f-a9fa-c0dc68af2602.jpg |
|-----------------------------------------|

[2024-12-02 17:54:34 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 27
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-02 17:54:34 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|1       |10              |123     |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|5       |7               |2       |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |6               |123     |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|5       |5               |ㅇ       |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-02 17:54:34 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 26
 {executed in 0 msec}
[2024-12-02 17:54:34 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3e5fe979-fe9c-4ed6-9ad7-c1dbf4f2538f.jpg |
|-----------------------------------------|

[2024-12-02 17:54:34 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 26
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-02 17:54:34 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|1       |9               |s       |33       |2ef8b9f3-bb2b-446e-a17d-18fe27c210c1.jpg |
|5       |8               |123     |66       |d6440a69-541b-4d3c-969a-a6b643fd10de.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-02 17:54:34 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 25
 {executed in 0 msec}
[2024-12-02 17:54:34 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|8213634a-99df-42d8-963e-87bc120cc8a7.jpg |
|-----------------------------------------|

[2024-12-02 17:54:34 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 25
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:54:34 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 17:54:34 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 24
 {executed in 0 msec}
[2024-12-02 17:54:34 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|dfe6f2c1-3753-4a6a-aff4-0de7fa2786b8.jpg |
|-----------------------------------------|

[2024-12-02 17:54:34 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 24
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:54:34 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 17:54:34 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 23
 {executed in 0 msec}
[2024-12-02 17:54:34 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f3e6375d-35d8-4a4a-a976-26ca5c6abaac.jpg |
|-----------------------------------------|

[2024-12-02 17:54:34 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 23
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:54:34 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 17:54:34 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 22
 {executed in 0 msec}
[2024-12-02 17:54:34 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e97360ca-fe79-48c3-acaa-cd71042a0a78.tif |
|-----------------------------------------|

[2024-12-02 17:54:34 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 22
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:54:34 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 17:54:34 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 14
 {executed in 0 msec}
[2024-12-02 17:54:34 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a3709fe6-3e0d-4f04-8cef-1cc328c4fc0c.jpg |
|ada457b9-68aa-4a78-b0c8-c5035af844e2.jpg |
|-----------------------------------------|

[2024-12-02 17:54:34 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 14
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:54:34 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 17:54:34 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 13
 {executed in 0 msec}
[2024-12-02 17:54:34 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6fe5de58-57ef-47e7-80c7-49c0506ca143.jpg |
|920ca8e8-5dc2-4844-aa7f-d7782e94d380.jpg |
|-----------------------------------------|

[2024-12-02 17:54:34 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 13
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:54:34 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 17:54:34 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 12
 {executed in 0 msec}
[2024-12-02 17:54:34 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|84e77be4-2b62-4f40-8f8b-0803e1080449.jpg |
|84f31709-40aa-40eb-a7e7-da0219067927.jpg |
|-----------------------------------------|

[2024-12-02 17:54:34 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 12
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-02 17:54:34 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 17:54:34 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 11
 {executed in 0 msec}
[2024-12-02 17:54:34 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3fc51a83-46ea-43ca-a85b-6fad4794a2bd.jpg |
|49906eb9-a412-4428-a629-baccbe152c75.jpg |
|-----------------------------------------|

[2024-12-02 17:54:34 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 11
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:54:34 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 17:54:34 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 9
 {executed in 0 msec}
[2024-12-02 17:54:34 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|34669219-c5d3-4d84-a277-fd8c2b8bca4f.jpg |
|f1ed44ba-1254-4232-9a0d-65037abe1e9c.jpg |
|-----------------------------------------|

[2024-12-02 17:54:34 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 9
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:54:34 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 17:54:34 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 7
 {executed in 1 msec}
[2024-12-02 17:54:34 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|14ecfa41-07fc-40d0-b50b-3fe95a840992.jpg |
|2694c9a6-a7b3-4800-ac73-0c853e16a152.jpg |
|-----------------------------------------|

[2024-12-02 17:54:34 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 7
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:54:34 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 17:54:34 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 6
 {executed in 0 msec}
[2024-12-02 17:54:34 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3c31d519-96b0-49bd-8657-d1eac4fb3fc1.jpg |
|-----------------------------------------|

[2024-12-02 17:54:34 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comments A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 6
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:54:34 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-02 17:54:37 INFO http-nio-8080-exec-1] [com.green.greengramver2.feed.comment.FeedCommentController] delFeedComment FeedCommentDelReq(feedCommentId=0, signedUserId=0)
[2024-12-02 17:54:37 ERRORhttp-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.mybatis.spring.MyBatisSystemException] with root cause
org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'userId' in 'class com.green.greengramver2.feed.comment.model.FeedCommentDelReq'
	at org.apache.ibatis.reflection.Reflector.getGetInvoker(Reflector.java:385)
	at org.apache.ibatis.reflection.MetaClass.getGetInvoker(MetaClass.java:160)
	at org.apache.ibatis.reflection.wrapper.BeanWrapper.getBeanProperty(BeanWrapper.java:153)
	at org.apache.ibatis.reflection.wrapper.BeanWrapper.get(BeanWrapper.java:49)
	at org.apache.ibatis.reflection.MetaObject.getValue(MetaObject.java:116)
	at org.apache.ibatis.scripting.defaults.DefaultParameterHandler.setParameters(DefaultParameterHandler.java:82)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.parameterize(PreparedStatementHandler.java:97)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.parameterize(RoutingStatementHandler.java:65)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:91)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:49)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.delete(DefaultSqlSession.java:212)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy79.delete(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.delete(SqlSessionTemplate.java:304)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:72)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy80.delFeedComment(Unknown Source)
	at com.green.greengramver2.feed.comment.FeedCommentService.delFeedComment(FeedCommentService.java:24)
	at com.green.greengramver2.feed.comment.FeedCommentController.delFeedComment(FeedCommentController.java:28)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doDelete(FrameworkServlet.java:936)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:596)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-02 17:55:22 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-02 17:55:22 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-02 17:55:24 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 2044 (D:\Students\jang jin seong\GreenGramVer2\build\classes\java\main started by Administrator in D:\Students\jang jin seong\GreenGramVer2)
[2024-12-02 17:55:24 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-02 17:55:24 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-02 17:55:24 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-02 17:55:25 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-02 17:55:25 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-02 17:55:25 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-02 17:55:25 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-02 17:55:25 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-02 17:55:25 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 826 ms
[2024-12-02 17:55:25 INFO restartedMain] [com.green.greengramver2.common.MyFileUtils] MFU 생성자: D:\Students\jang jin seong\download\greengram_ver2
[2024-12-02 17:55:25 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-02 17:55:25 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-02 17:55:25 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-02 17:55:25 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-02 17:55:25 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Started GreenGramVer2Application in 1.706 seconds (process running for 2.076)
[2024-12-02 17:55:30 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-02 17:55:30 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-02 17:55:30 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 0 ms
[2024-12-02 17:55:30 INFO http-nio-8080-exec-1] [com.green.greengramver2.feed.comment.FeedCommentController] delFeedComment FeedCommentDelReq(feedCommentId=0, signedUserId=0)
[2024-12-02 17:55:30 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-02 17:55:30 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@6ff33ce1
[2024-12-02 17:55:30 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-02 17:55:30 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. delete
        from feed_comments
        where user_id = 0 and feed_comment_id = 0
 {executed in 1 msec}
[2024-12-02 17:58:08 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
[2024-12-02 17:58:08 INFO Thread-5] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-02 17:58:08 INFO Thread-5] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-02 17:58:08 INFO Thread-5] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-02 17:58:08 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 2044 (D:\Students\jang jin seong\GreenGramVer2\build\classes\java\main started by Administrator in D:\Students\jang jin seong\GreenGramVer2)
[2024-12-02 17:58:08 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-02 17:58:08 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-02 17:58:08 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-02 17:58:08 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-02 17:58:08 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-02 17:58:08 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-02 17:58:08 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 182 ms
[2024-12-02 17:58:08 INFO restartedMain] [com.green.greengramver2.common.MyFileUtils] MFU 생성자: D:\Students\jang jin seong\download\greengram_ver2
[2024-12-02 17:58:08 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-02 17:58:08 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-02 17:58:08 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-02 17:58:08 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-02 17:58:08 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Started GreenGramVer2Application in 0.328 seconds (process running for 165.129)
[2024-12-02 17:58:08 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
